// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSCouponMsg.proto

#ifndef PROTOBUF_CSCouponMsg_2eproto__INCLUDED
#define PROTOBUF_CSCouponMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MsgBase.pb.h"
#include "ShareByClient.pb.h"
#include "CSEquipItemMsg.pb.h"
#include "CSBagMsg.pb.h"
// @@protoc_insertion_point(includes)

namespace vmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSCouponMsg_2eproto();
void protobuf_AssignDesc_CSCouponMsg_2eproto();
void protobuf_ShutdownFile_CSCouponMsg_2eproto();

class CSClaimCouponRqst;
class CSClaimCouponRsp;
class CSClaimFirstChargePkgRsp;
class CSSpring7DayPkgStatus;
class SumChargePkgStatus;
class DailyChargePkgStatus;
class DailyLoginPkgStatus;
class GradeGeekPkgStatus;
class FightGeekPkgStatus;
class VipGiftPkgStatus;
class DailyConsumePkgStatus;
class SumConsumePkgStatus;
class OnlinePkgStatus;
class NextDayPkgStatus;
class SumChargePkgRqst;
class DailyChargePkgRqst;
class DailyLoginPkgRqst;
class GradeGeekPkgRqst;
class FightGeekPkgRqst;
class VipGiftPkgRqst;
class DailyConsumePkgRqst;
class SumConsumePkgRqst;
class OnlinePkgRqst;
class NextDayPkgRqst;
class AwardInfo;
class SumChargePkgPkgRsp;
class DailyChargePkgRsp;
class DailyLoginPkgRsp;
class GradeGeekPkgRsp;
class FightGeekPkgRsp;
class VipGiftPkgRsp;
class DailyConsumePkgRsp;
class SumConsumePkgRsp;
class OnlinePkgRsp;
class NextDayPkgRsp;
class CSCouponActStatusItem;
class CSClaimSpringPkgRqst;
class CSClaimSpringPkgRsp;
class CSQueryAllPkgStatusRsp;
class CSCouponRequest;
class CSCouponRespond;

// ===================================================================

class CSClaimCouponRqst : public ::google::protobuf::MessageLite {
 public:
  CSClaimCouponRqst();
  virtual ~CSClaimCouponRqst();

  CSClaimCouponRqst(const CSClaimCouponRqst& from);

  inline CSClaimCouponRqst& operator=(const CSClaimCouponRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSClaimCouponRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSClaimCouponRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSClaimCouponRqst* other);

  // implements Message ----------------------------------------------

  CSClaimCouponRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSClaimCouponRqst& from);
  void MergeFrom(const CSClaimCouponRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string CouponID = 1;
  inline bool has_couponid() const;
  inline void clear_couponid();
  static const int kCouponIDFieldNumber = 1;
  inline const ::std::string& couponid() const;
  inline void set_couponid(const ::std::string& value);
  inline void set_couponid(const char* value);
  inline void set_couponid(const char* value, size_t size);
  inline ::std::string* mutable_couponid();
  inline ::std::string* release_couponid();
  inline void set_allocated_couponid(::std::string* couponid);

  // @@protoc_insertion_point(class_scope:vmsg.CSClaimCouponRqst)
 private:
  inline void set_has_couponid();
  inline void clear_has_couponid();

  ::std::string* couponid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSClaimCouponRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSClaimCouponRsp : public ::google::protobuf::MessageLite {
 public:
  CSClaimCouponRsp();
  virtual ~CSClaimCouponRsp();

  CSClaimCouponRsp(const CSClaimCouponRsp& from);

  inline CSClaimCouponRsp& operator=(const CSClaimCouponRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSClaimCouponRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSClaimCouponRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSClaimCouponRsp* other);

  // implements Message ----------------------------------------------

  CSClaimCouponRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSClaimCouponRsp& from);
  void MergeFrom(const CSClaimCouponRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // required uint32 PkgID = 2;
  inline bool has_pkgid() const;
  inline void clear_pkgid();
  static const int kPkgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 pkgid() const;
  inline void set_pkgid(::google::protobuf::uint32 value);

  // repeated .vmsg.CSCouponActStatusItem AllActs = 3;
  inline int allacts_size() const;
  inline void clear_allacts();
  static const int kAllActsFieldNumber = 3;
  inline const ::vmsg::CSCouponActStatusItem& allacts(int index) const;
  inline ::vmsg::CSCouponActStatusItem* mutable_allacts(int index);
  inline ::vmsg::CSCouponActStatusItem* add_allacts();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
      allacts() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
      mutable_allacts();

  // @@protoc_insertion_point(class_scope:vmsg.CSClaimCouponRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_pkgid();
  inline void clear_has_pkgid();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem > allacts_;
  ::google::protobuf::uint32 pkgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSClaimCouponRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSClaimFirstChargePkgRsp : public ::google::protobuf::MessageLite {
 public:
  CSClaimFirstChargePkgRsp();
  virtual ~CSClaimFirstChargePkgRsp();

  CSClaimFirstChargePkgRsp(const CSClaimFirstChargePkgRsp& from);

  inline CSClaimFirstChargePkgRsp& operator=(const CSClaimFirstChargePkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSClaimFirstChargePkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSClaimFirstChargePkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSClaimFirstChargePkgRsp* other);

  // implements Message ----------------------------------------------

  CSClaimFirstChargePkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSClaimFirstChargePkgRsp& from);
  void MergeFrom(const CSClaimFirstChargePkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // required uint32 PkgID = 2;
  inline bool has_pkgid() const;
  inline void clear_pkgid();
  static const int kPkgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 pkgid() const;
  inline void set_pkgid(::google::protobuf::uint32 value);

  // repeated .vmsg.CSCouponActStatusItem AllActs = 3;
  inline int allacts_size() const;
  inline void clear_allacts();
  static const int kAllActsFieldNumber = 3;
  inline const ::vmsg::CSCouponActStatusItem& allacts(int index) const;
  inline ::vmsg::CSCouponActStatusItem* mutable_allacts(int index);
  inline ::vmsg::CSCouponActStatusItem* add_allacts();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
      allacts() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
      mutable_allacts();

  // @@protoc_insertion_point(class_scope:vmsg.CSClaimFirstChargePkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_pkgid();
  inline void clear_has_pkgid();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem > allacts_;
  ::google::protobuf::uint32 pkgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSClaimFirstChargePkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpring7DayPkgStatus : public ::google::protobuf::MessageLite {
 public:
  CSSpring7DayPkgStatus();
  virtual ~CSSpring7DayPkgStatus();

  CSSpring7DayPkgStatus(const CSSpring7DayPkgStatus& from);

  inline CSSpring7DayPkgStatus& operator=(const CSSpring7DayPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSSpring7DayPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSSpring7DayPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSSpring7DayPkgStatus* other);

  // implements Message ----------------------------------------------

  CSSpring7DayPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSSpring7DayPkgStatus& from);
  void MergeFrom(const CSSpring7DayPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 ClaimStatus = 3;
  inline bool has_claimstatus() const;
  inline void clear_claimstatus();
  static const int kClaimStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 claimstatus() const;
  inline void set_claimstatus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSSpring7DayPkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_claimstatus();
  inline void clear_has_claimstatus();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 claimstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSSpring7DayPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class SumChargePkgStatus : public ::google::protobuf::MessageLite {
 public:
  SumChargePkgStatus();
  virtual ~SumChargePkgStatus();

  SumChargePkgStatus(const SumChargePkgStatus& from);

  inline SumChargePkgStatus& operator=(const SumChargePkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargePkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargePkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargePkgStatus* other);

  // implements Message ----------------------------------------------

  SumChargePkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargePkgStatus& from);
  void MergeFrom(const SumChargePkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 totalCharge = 3;
  inline bool has_totalcharge() const;
  inline void clear_totalcharge();
  static const int kTotalChargeFieldNumber = 3;
  inline ::google::protobuf::uint32 totalcharge() const;
  inline void set_totalcharge(::google::protobuf::uint32 value);

  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.SumChargePkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_totalcharge();
  inline void clear_has_totalcharge();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 totalcharge_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumChargePkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class DailyChargePkgStatus : public ::google::protobuf::MessageLite {
 public:
  DailyChargePkgStatus();
  virtual ~DailyChargePkgStatus();

  DailyChargePkgStatus(const DailyChargePkgStatus& from);

  inline DailyChargePkgStatus& operator=(const DailyChargePkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyChargePkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyChargePkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyChargePkgStatus* other);

  // implements Message ----------------------------------------------

  DailyChargePkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyChargePkgStatus& from);
  void MergeFrom(const DailyChargePkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Charge = 3;
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 3;
  inline ::google::protobuf::uint32 charge() const;
  inline void set_charge(::google::protobuf::uint32 value);

  // required uint32 Status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyChargePkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_charge();
  inline void clear_has_charge();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 charge_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyChargePkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class DailyLoginPkgStatus : public ::google::protobuf::MessageLite {
 public:
  DailyLoginPkgStatus();
  virtual ~DailyLoginPkgStatus();

  DailyLoginPkgStatus(const DailyLoginPkgStatus& from);

  inline DailyLoginPkgStatus& operator=(const DailyLoginPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyLoginPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyLoginPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyLoginPkgStatus* other);

  // implements Message ----------------------------------------------

  DailyLoginPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyLoginPkgStatus& from);
  void MergeFrom(const DailyLoginPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 LoginCnt = 3;
  inline bool has_logincnt() const;
  inline void clear_logincnt();
  static const int kLoginCntFieldNumber = 3;
  inline ::google::protobuf::uint32 logincnt() const;
  inline void set_logincnt(::google::protobuf::uint32 value);

  // required uint32 Status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyLoginPkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_logincnt();
  inline void clear_has_logincnt();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 logincnt_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyLoginPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class GradeGeekPkgStatus : public ::google::protobuf::MessageLite {
 public:
  GradeGeekPkgStatus();
  virtual ~GradeGeekPkgStatus();

  GradeGeekPkgStatus(const GradeGeekPkgStatus& from);

  inline GradeGeekPkgStatus& operator=(const GradeGeekPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const GradeGeekPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GradeGeekPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GradeGeekPkgStatus* other);

  // implements Message ----------------------------------------------

  GradeGeekPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GradeGeekPkgStatus& from);
  void MergeFrom(const GradeGeekPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // repeated uint32 GetNum = 4;
  inline int getnum_size() const;
  inline void clear_getnum();
  static const int kGetNumFieldNumber = 4;
  inline ::google::protobuf::uint32 getnum(int index) const;
  inline void set_getnum(int index, ::google::protobuf::uint32 value);
  inline void add_getnum(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      getnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_getnum();

  // @@protoc_insertion_point(class_scope:vmsg.GradeGeekPkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > getnum_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static GradeGeekPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class FightGeekPkgStatus : public ::google::protobuf::MessageLite {
 public:
  FightGeekPkgStatus();
  virtual ~FightGeekPkgStatus();

  FightGeekPkgStatus(const FightGeekPkgStatus& from);

  inline FightGeekPkgStatus& operator=(const FightGeekPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const FightGeekPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FightGeekPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FightGeekPkgStatus* other);

  // implements Message ----------------------------------------------

  FightGeekPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FightGeekPkgStatus& from);
  void MergeFrom(const FightGeekPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.FightGeekPkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static FightGeekPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class VipGiftPkgStatus : public ::google::protobuf::MessageLite {
 public:
  VipGiftPkgStatus();
  virtual ~VipGiftPkgStatus();

  VipGiftPkgStatus(const VipGiftPkgStatus& from);

  inline VipGiftPkgStatus& operator=(const VipGiftPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const VipGiftPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VipGiftPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VipGiftPkgStatus* other);

  // implements Message ----------------------------------------------

  VipGiftPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VipGiftPkgStatus& from);
  void MergeFrom(const VipGiftPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.VipGiftPkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static VipGiftPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class DailyConsumePkgStatus : public ::google::protobuf::MessageLite {
 public:
  DailyConsumePkgStatus();
  virtual ~DailyConsumePkgStatus();

  DailyConsumePkgStatus(const DailyConsumePkgStatus& from);

  inline DailyConsumePkgStatus& operator=(const DailyConsumePkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumePkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumePkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumePkgStatus* other);

  // implements Message ----------------------------------------------

  DailyConsumePkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumePkgStatus& from);
  void MergeFrom(const DailyConsumePkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 Consume = 4;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 4;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyConsumePkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_consume();
  inline void clear_has_consume();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 consume_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumePkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class SumConsumePkgStatus : public ::google::protobuf::MessageLite {
 public:
  SumConsumePkgStatus();
  virtual ~SumConsumePkgStatus();

  SumConsumePkgStatus(const SumConsumePkgStatus& from);

  inline SumConsumePkgStatus& operator=(const SumConsumePkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumePkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumePkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumePkgStatus* other);

  // implements Message ----------------------------------------------

  SumConsumePkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumePkgStatus& from);
  void MergeFrom(const SumConsumePkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 StopTime = 2;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 stoptime() const;
  inline void set_stoptime(::google::protobuf::uint32 value);

  // required uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 Consume = 4;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 4;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.SumConsumePkgStatus)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_consume();
  inline void clear_has_consume();

  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 stoptime_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 consume_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumePkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class OnlinePkgStatus : public ::google::protobuf::MessageLite {
 public:
  OnlinePkgStatus();
  virtual ~OnlinePkgStatus();

  OnlinePkgStatus(const OnlinePkgStatus& from);

  inline OnlinePkgStatus& operator=(const OnlinePkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const OnlinePkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OnlinePkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OnlinePkgStatus* other);

  // implements Message ----------------------------------------------

  OnlinePkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OnlinePkgStatus& from);
  void MergeFrom(const OnlinePkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 OnlineTime = 2;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.OnlinePkgStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();

  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 onlinetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static OnlinePkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class NextDayPkgStatus : public ::google::protobuf::MessageLite {
 public:
  NextDayPkgStatus();
  virtual ~NextDayPkgStatus();

  NextDayPkgStatus(const NextDayPkgStatus& from);

  inline NextDayPkgStatus& operator=(const NextDayPkgStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const NextDayPkgStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NextDayPkgStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NextDayPkgStatus* other);

  // implements Message ----------------------------------------------

  NextDayPkgStatus* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NextDayPkgStatus& from);
  void MergeFrom(const NextDayPkgStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vmsg.NextDayPkgStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static NextDayPkgStatus* default_instance_;
};
// -------------------------------------------------------------------

class SumChargePkgRqst : public ::google::protobuf::MessageLite {
 public:
  SumChargePkgRqst();
  virtual ~SumChargePkgRqst();

  SumChargePkgRqst(const SumChargePkgRqst& from);

  inline SumChargePkgRqst& operator=(const SumChargePkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargePkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargePkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargePkgRqst* other);

  // implements Message ----------------------------------------------

  SumChargePkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargePkgRqst& from);
  void MergeFrom(const SumChargePkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.SumChargePkgRqst)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumChargePkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class DailyChargePkgRqst : public ::google::protobuf::MessageLite {
 public:
  DailyChargePkgRqst();
  virtual ~DailyChargePkgRqst();

  DailyChargePkgRqst(const DailyChargePkgRqst& from);

  inline DailyChargePkgRqst& operator=(const DailyChargePkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyChargePkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyChargePkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyChargePkgRqst* other);

  // implements Message ----------------------------------------------

  DailyChargePkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyChargePkgRqst& from);
  void MergeFrom(const DailyChargePkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyChargePkgRqst)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyChargePkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class DailyLoginPkgRqst : public ::google::protobuf::MessageLite {
 public:
  DailyLoginPkgRqst();
  virtual ~DailyLoginPkgRqst();

  DailyLoginPkgRqst(const DailyLoginPkgRqst& from);

  inline DailyLoginPkgRqst& operator=(const DailyLoginPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyLoginPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyLoginPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyLoginPkgRqst* other);

  // implements Message ----------------------------------------------

  DailyLoginPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyLoginPkgRqst& from);
  void MergeFrom(const DailyLoginPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyLoginPkgRqst)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyLoginPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class GradeGeekPkgRqst : public ::google::protobuf::MessageLite {
 public:
  GradeGeekPkgRqst();
  virtual ~GradeGeekPkgRqst();

  GradeGeekPkgRqst(const GradeGeekPkgRqst& from);

  inline GradeGeekPkgRqst& operator=(const GradeGeekPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const GradeGeekPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GradeGeekPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GradeGeekPkgRqst* other);

  // implements Message ----------------------------------------------

  GradeGeekPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GradeGeekPkgRqst& from);
  void MergeFrom(const GradeGeekPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.GradeGeekPkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static GradeGeekPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class FightGeekPkgRqst : public ::google::protobuf::MessageLite {
 public:
  FightGeekPkgRqst();
  virtual ~FightGeekPkgRqst();

  FightGeekPkgRqst(const FightGeekPkgRqst& from);

  inline FightGeekPkgRqst& operator=(const FightGeekPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const FightGeekPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FightGeekPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FightGeekPkgRqst* other);

  // implements Message ----------------------------------------------

  FightGeekPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FightGeekPkgRqst& from);
  void MergeFrom(const FightGeekPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.FightGeekPkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static FightGeekPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class VipGiftPkgRqst : public ::google::protobuf::MessageLite {
 public:
  VipGiftPkgRqst();
  virtual ~VipGiftPkgRqst();

  VipGiftPkgRqst(const VipGiftPkgRqst& from);

  inline VipGiftPkgRqst& operator=(const VipGiftPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const VipGiftPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VipGiftPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VipGiftPkgRqst* other);

  // implements Message ----------------------------------------------

  VipGiftPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VipGiftPkgRqst& from);
  void MergeFrom(const VipGiftPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.VipGiftPkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static VipGiftPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class DailyConsumePkgRqst : public ::google::protobuf::MessageLite {
 public:
  DailyConsumePkgRqst();
  virtual ~DailyConsumePkgRqst();

  DailyConsumePkgRqst(const DailyConsumePkgRqst& from);

  inline DailyConsumePkgRqst& operator=(const DailyConsumePkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumePkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumePkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumePkgRqst* other);

  // implements Message ----------------------------------------------

  DailyConsumePkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumePkgRqst& from);
  void MergeFrom(const DailyConsumePkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.DailyConsumePkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumePkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class SumConsumePkgRqst : public ::google::protobuf::MessageLite {
 public:
  SumConsumePkgRqst();
  virtual ~SumConsumePkgRqst();

  SumConsumePkgRqst(const SumConsumePkgRqst& from);

  inline SumConsumePkgRqst& operator=(const SumConsumePkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumePkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumePkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumePkgRqst* other);

  // implements Message ----------------------------------------------

  SumConsumePkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumePkgRqst& from);
  void MergeFrom(const SumConsumePkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.SumConsumePkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumePkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class OnlinePkgRqst : public ::google::protobuf::MessageLite {
 public:
  OnlinePkgRqst();
  virtual ~OnlinePkgRqst();

  OnlinePkgRqst(const OnlinePkgRqst& from);

  inline OnlinePkgRqst& operator=(const OnlinePkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const OnlinePkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OnlinePkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OnlinePkgRqst* other);

  // implements Message ----------------------------------------------

  OnlinePkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OnlinePkgRqst& from);
  void MergeFrom(const OnlinePkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.OnlinePkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static OnlinePkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class NextDayPkgRqst : public ::google::protobuf::MessageLite {
 public:
  NextDayPkgRqst();
  virtual ~NextDayPkgRqst();

  NextDayPkgRqst(const NextDayPkgRqst& from);

  inline NextDayPkgRqst& operator=(const NextDayPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const NextDayPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NextDayPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NextDayPkgRqst* other);

  // implements Message ----------------------------------------------

  NextDayPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NextDayPkgRqst& from);
  void MergeFrom(const NextDayPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AwardLevel = 1;
  inline bool has_awardlevel() const;
  inline void clear_awardlevel();
  static const int kAwardLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 awardlevel() const;
  inline void set_awardlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.NextDayPkgRqst)
 private:
  inline void set_has_awardlevel();
  inline void clear_has_awardlevel();

  ::google::protobuf::uint32 awardlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static NextDayPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class AwardInfo : public ::google::protobuf::MessageLite {
 public:
  AwardInfo();
  virtual ~AwardInfo();

  AwardInfo(const AwardInfo& from);

  inline AwardInfo& operator=(const AwardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const AwardInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AwardInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AwardInfo* other);

  // implements Message ----------------------------------------------

  AwardInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AwardInfo& from);
  void MergeFrom(const AwardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.AwardInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static AwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class SumChargePkgPkgRsp : public ::google::protobuf::MessageLite {
 public:
  SumChargePkgPkgRsp();
  virtual ~SumChargePkgPkgRsp();

  SumChargePkgPkgRsp(const SumChargePkgPkgRsp& from);

  inline SumChargePkgPkgRsp& operator=(const SumChargePkgPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargePkgPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargePkgPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargePkgPkgRsp* other);

  // implements Message ----------------------------------------------

  SumChargePkgPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargePkgPkgRsp& from);
  void MergeFrom(const SumChargePkgPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.SumChargePkgPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumChargePkgPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyChargePkgRsp : public ::google::protobuf::MessageLite {
 public:
  DailyChargePkgRsp();
  virtual ~DailyChargePkgRsp();

  DailyChargePkgRsp(const DailyChargePkgRsp& from);

  inline DailyChargePkgRsp& operator=(const DailyChargePkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyChargePkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyChargePkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyChargePkgRsp* other);

  // implements Message ----------------------------------------------

  DailyChargePkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyChargePkgRsp& from);
  void MergeFrom(const DailyChargePkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.DailyChargePkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyChargePkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyLoginPkgRsp : public ::google::protobuf::MessageLite {
 public:
  DailyLoginPkgRsp();
  virtual ~DailyLoginPkgRsp();

  DailyLoginPkgRsp(const DailyLoginPkgRsp& from);

  inline DailyLoginPkgRsp& operator=(const DailyLoginPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyLoginPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyLoginPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyLoginPkgRsp* other);

  // implements Message ----------------------------------------------

  DailyLoginPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyLoginPkgRsp& from);
  void MergeFrom(const DailyLoginPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.DailyLoginPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyLoginPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class GradeGeekPkgRsp : public ::google::protobuf::MessageLite {
 public:
  GradeGeekPkgRsp();
  virtual ~GradeGeekPkgRsp();

  GradeGeekPkgRsp(const GradeGeekPkgRsp& from);

  inline GradeGeekPkgRsp& operator=(const GradeGeekPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const GradeGeekPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GradeGeekPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GradeGeekPkgRsp* other);

  // implements Message ----------------------------------------------

  GradeGeekPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GradeGeekPkgRsp& from);
  void MergeFrom(const GradeGeekPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // optional uint32 Success = 3;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 3;
  inline ::google::protobuf::uint32 success() const;
  inline void set_success(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.GradeGeekPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_success();
  inline void clear_has_success();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;
  ::google::protobuf::uint32 success_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static GradeGeekPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class FightGeekPkgRsp : public ::google::protobuf::MessageLite {
 public:
  FightGeekPkgRsp();
  virtual ~FightGeekPkgRsp();

  FightGeekPkgRsp(const FightGeekPkgRsp& from);

  inline FightGeekPkgRsp& operator=(const FightGeekPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const FightGeekPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FightGeekPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FightGeekPkgRsp* other);

  // implements Message ----------------------------------------------

  FightGeekPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FightGeekPkgRsp& from);
  void MergeFrom(const FightGeekPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.FightGeekPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static FightGeekPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class VipGiftPkgRsp : public ::google::protobuf::MessageLite {
 public:
  VipGiftPkgRsp();
  virtual ~VipGiftPkgRsp();

  VipGiftPkgRsp(const VipGiftPkgRsp& from);

  inline VipGiftPkgRsp& operator=(const VipGiftPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const VipGiftPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VipGiftPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VipGiftPkgRsp* other);

  // implements Message ----------------------------------------------

  VipGiftPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VipGiftPkgRsp& from);
  void MergeFrom(const VipGiftPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.VipGiftPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static VipGiftPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyConsumePkgRsp : public ::google::protobuf::MessageLite {
 public:
  DailyConsumePkgRsp();
  virtual ~DailyConsumePkgRsp();

  DailyConsumePkgRsp(const DailyConsumePkgRsp& from);

  inline DailyConsumePkgRsp& operator=(const DailyConsumePkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumePkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumePkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumePkgRsp* other);

  // implements Message ----------------------------------------------

  DailyConsumePkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumePkgRsp& from);
  void MergeFrom(const DailyConsumePkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.DailyConsumePkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumePkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SumConsumePkgRsp : public ::google::protobuf::MessageLite {
 public:
  SumConsumePkgRsp();
  virtual ~SumConsumePkgRsp();

  SumConsumePkgRsp(const SumConsumePkgRsp& from);

  inline SumConsumePkgRsp& operator=(const SumConsumePkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumePkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumePkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumePkgRsp* other);

  // implements Message ----------------------------------------------

  SumConsumePkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumePkgRsp& from);
  void MergeFrom(const SumConsumePkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.SumConsumePkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumePkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class OnlinePkgRsp : public ::google::protobuf::MessageLite {
 public:
  OnlinePkgRsp();
  virtual ~OnlinePkgRsp();

  OnlinePkgRsp(const OnlinePkgRsp& from);

  inline OnlinePkgRsp& operator=(const OnlinePkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const OnlinePkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OnlinePkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OnlinePkgRsp* other);

  // implements Message ----------------------------------------------

  OnlinePkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OnlinePkgRsp& from);
  void MergeFrom(const OnlinePkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.OnlinePkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static OnlinePkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class NextDayPkgRsp : public ::google::protobuf::MessageLite {
 public:
  NextDayPkgRsp();
  virtual ~NextDayPkgRsp();

  NextDayPkgRsp(const NextDayPkgRsp& from);

  inline NextDayPkgRsp& operator=(const NextDayPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const NextDayPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NextDayPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NextDayPkgRsp* other);

  // implements Message ----------------------------------------------

  NextDayPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NextDayPkgRsp& from);
  void MergeFrom(const NextDayPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // repeated .vmsg.AwardInfo AwardInfo = 2;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::vmsg::AwardInfo& awardinfo(int index) const;
  inline ::vmsg::AwardInfo* mutable_awardinfo(int index);
  inline ::vmsg::AwardInfo* add_awardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
      awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
      mutable_awardinfo();

  // @@protoc_insertion_point(class_scope:vmsg.NextDayPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo > awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static NextDayPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCouponActStatusItem : public ::google::protobuf::MessageLite {
 public:
  CSCouponActStatusItem();
  virtual ~CSCouponActStatusItem();

  CSCouponActStatusItem(const CSCouponActStatusItem& from);

  inline CSCouponActStatusItem& operator=(const CSCouponActStatusItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSCouponActStatusItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSCouponActStatusItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSCouponActStatusItem* other);

  // implements Message ----------------------------------------------

  CSCouponActStatusItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSCouponActStatusItem& from);
  void MergeFrom(const CSCouponActStatusItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // repeated .vmsg.CSSpring7DayPkgStatus Spring7DayStatus = 3;
  inline int spring7daystatus_size() const;
  inline void clear_spring7daystatus();
  static const int kSpring7DayStatusFieldNumber = 3;
  inline const ::vmsg::CSSpring7DayPkgStatus& spring7daystatus(int index) const;
  inline ::vmsg::CSSpring7DayPkgStatus* mutable_spring7daystatus(int index);
  inline ::vmsg::CSSpring7DayPkgStatus* add_spring7daystatus();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSSpring7DayPkgStatus >&
      spring7daystatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSSpring7DayPkgStatus >*
      mutable_spring7daystatus();

  // optional uint32 StoredManual = 4;
  inline bool has_storedmanual() const;
  inline void clear_storedmanual();
  static const int kStoredManualFieldNumber = 4;
  inline ::google::protobuf::uint32 storedmanual() const;
  inline void set_storedmanual(::google::protobuf::uint32 value);

  // optional .vmsg.SumChargePkgStatus SumChargeAward = 5;
  inline bool has_sumchargeaward() const;
  inline void clear_sumchargeaward();
  static const int kSumChargeAwardFieldNumber = 5;
  inline const ::vmsg::SumChargePkgStatus& sumchargeaward() const;
  inline ::vmsg::SumChargePkgStatus* mutable_sumchargeaward();
  inline ::vmsg::SumChargePkgStatus* release_sumchargeaward();
  inline void set_allocated_sumchargeaward(::vmsg::SumChargePkgStatus* sumchargeaward);

  // optional .vmsg.DailyLoginPkgStatus DailyLoginStatus = 6;
  inline bool has_dailyloginstatus() const;
  inline void clear_dailyloginstatus();
  static const int kDailyLoginStatusFieldNumber = 6;
  inline const ::vmsg::DailyLoginPkgStatus& dailyloginstatus() const;
  inline ::vmsg::DailyLoginPkgStatus* mutable_dailyloginstatus();
  inline ::vmsg::DailyLoginPkgStatus* release_dailyloginstatus();
  inline void set_allocated_dailyloginstatus(::vmsg::DailyLoginPkgStatus* dailyloginstatus);

  // optional .vmsg.DailyChargePkgStatus DailyChargeStatus = 7;
  inline bool has_dailychargestatus() const;
  inline void clear_dailychargestatus();
  static const int kDailyChargeStatusFieldNumber = 7;
  inline const ::vmsg::DailyChargePkgStatus& dailychargestatus() const;
  inline ::vmsg::DailyChargePkgStatus* mutable_dailychargestatus();
  inline ::vmsg::DailyChargePkgStatus* release_dailychargestatus();
  inline void set_allocated_dailychargestatus(::vmsg::DailyChargePkgStatus* dailychargestatus);

  // optional .vmsg.GradeGeekPkgStatus GradeGeekStatus = 8;
  inline bool has_gradegeekstatus() const;
  inline void clear_gradegeekstatus();
  static const int kGradeGeekStatusFieldNumber = 8;
  inline const ::vmsg::GradeGeekPkgStatus& gradegeekstatus() const;
  inline ::vmsg::GradeGeekPkgStatus* mutable_gradegeekstatus();
  inline ::vmsg::GradeGeekPkgStatus* release_gradegeekstatus();
  inline void set_allocated_gradegeekstatus(::vmsg::GradeGeekPkgStatus* gradegeekstatus);

  // optional .vmsg.FightGeekPkgStatus FightGeekStatus = 9;
  inline bool has_fightgeekstatus() const;
  inline void clear_fightgeekstatus();
  static const int kFightGeekStatusFieldNumber = 9;
  inline const ::vmsg::FightGeekPkgStatus& fightgeekstatus() const;
  inline ::vmsg::FightGeekPkgStatus* mutable_fightgeekstatus();
  inline ::vmsg::FightGeekPkgStatus* release_fightgeekstatus();
  inline void set_allocated_fightgeekstatus(::vmsg::FightGeekPkgStatus* fightgeekstatus);

  // optional .vmsg.VipGiftPkgStatus VipGiftPkgStatus = 10;
  inline bool has_vipgiftpkgstatus() const;
  inline void clear_vipgiftpkgstatus();
  static const int kVipGiftPkgStatusFieldNumber = 10;
  inline const ::vmsg::VipGiftPkgStatus& vipgiftpkgstatus() const;
  inline ::vmsg::VipGiftPkgStatus* mutable_vipgiftpkgstatus();
  inline ::vmsg::VipGiftPkgStatus* release_vipgiftpkgstatus();
  inline void set_allocated_vipgiftpkgstatus(::vmsg::VipGiftPkgStatus* vipgiftpkgstatus);

  // optional .vmsg.DailyConsumePkgStatus DailyConsumePkgStatus = 11;
  inline bool has_dailyconsumepkgstatus() const;
  inline void clear_dailyconsumepkgstatus();
  static const int kDailyConsumePkgStatusFieldNumber = 11;
  inline const ::vmsg::DailyConsumePkgStatus& dailyconsumepkgstatus() const;
  inline ::vmsg::DailyConsumePkgStatus* mutable_dailyconsumepkgstatus();
  inline ::vmsg::DailyConsumePkgStatus* release_dailyconsumepkgstatus();
  inline void set_allocated_dailyconsumepkgstatus(::vmsg::DailyConsumePkgStatus* dailyconsumepkgstatus);

  // optional .vmsg.SumConsumePkgStatus SumConsumePkgStatus = 12;
  inline bool has_sumconsumepkgstatus() const;
  inline void clear_sumconsumepkgstatus();
  static const int kSumConsumePkgStatusFieldNumber = 12;
  inline const ::vmsg::SumConsumePkgStatus& sumconsumepkgstatus() const;
  inline ::vmsg::SumConsumePkgStatus* mutable_sumconsumepkgstatus();
  inline ::vmsg::SumConsumePkgStatus* release_sumconsumepkgstatus();
  inline void set_allocated_sumconsumepkgstatus(::vmsg::SumConsumePkgStatus* sumconsumepkgstatus);

  // optional .vmsg.OnlinePkgStatus OnlinePkgStatus = 13;
  inline bool has_onlinepkgstatus() const;
  inline void clear_onlinepkgstatus();
  static const int kOnlinePkgStatusFieldNumber = 13;
  inline const ::vmsg::OnlinePkgStatus& onlinepkgstatus() const;
  inline ::vmsg::OnlinePkgStatus* mutable_onlinepkgstatus();
  inline ::vmsg::OnlinePkgStatus* release_onlinepkgstatus();
  inline void set_allocated_onlinepkgstatus(::vmsg::OnlinePkgStatus* onlinepkgstatus);

  // optional .vmsg.NextDayPkgStatus NextDayPkgStatus = 14;
  inline bool has_nextdaypkgstatus() const;
  inline void clear_nextdaypkgstatus();
  static const int kNextDayPkgStatusFieldNumber = 14;
  inline const ::vmsg::NextDayPkgStatus& nextdaypkgstatus() const;
  inline ::vmsg::NextDayPkgStatus* mutable_nextdaypkgstatus();
  inline ::vmsg::NextDayPkgStatus* release_nextdaypkgstatus();
  inline void set_allocated_nextdaypkgstatus(::vmsg::NextDayPkgStatus* nextdaypkgstatus);

  // @@protoc_insertion_point(class_scope:vmsg.CSCouponActStatusItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_storedmanual();
  inline void clear_has_storedmanual();
  inline void set_has_sumchargeaward();
  inline void clear_has_sumchargeaward();
  inline void set_has_dailyloginstatus();
  inline void clear_has_dailyloginstatus();
  inline void set_has_dailychargestatus();
  inline void clear_has_dailychargestatus();
  inline void set_has_gradegeekstatus();
  inline void clear_has_gradegeekstatus();
  inline void set_has_fightgeekstatus();
  inline void clear_has_fightgeekstatus();
  inline void set_has_vipgiftpkgstatus();
  inline void clear_has_vipgiftpkgstatus();
  inline void set_has_dailyconsumepkgstatus();
  inline void clear_has_dailyconsumepkgstatus();
  inline void set_has_sumconsumepkgstatus();
  inline void clear_has_sumconsumepkgstatus();
  inline void set_has_onlinepkgstatus();
  inline void clear_has_onlinepkgstatus();
  inline void set_has_nextdaypkgstatus();
  inline void clear_has_nextdaypkgstatus();

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSSpring7DayPkgStatus > spring7daystatus_;
  ::vmsg::SumChargePkgStatus* sumchargeaward_;
  ::vmsg::DailyLoginPkgStatus* dailyloginstatus_;
  ::vmsg::DailyChargePkgStatus* dailychargestatus_;
  ::vmsg::GradeGeekPkgStatus* gradegeekstatus_;
  ::vmsg::FightGeekPkgStatus* fightgeekstatus_;
  ::vmsg::VipGiftPkgStatus* vipgiftpkgstatus_;
  ::vmsg::DailyConsumePkgStatus* dailyconsumepkgstatus_;
  ::vmsg::SumConsumePkgStatus* sumconsumepkgstatus_;
  ::vmsg::OnlinePkgStatus* onlinepkgstatus_;
  ::vmsg::NextDayPkgStatus* nextdaypkgstatus_;
  ::google::protobuf::uint32 storedmanual_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSCouponActStatusItem* default_instance_;
};
// -------------------------------------------------------------------

class CSClaimSpringPkgRqst : public ::google::protobuf::MessageLite {
 public:
  CSClaimSpringPkgRqst();
  virtual ~CSClaimSpringPkgRqst();

  CSClaimSpringPkgRqst(const CSClaimSpringPkgRqst& from);

  inline CSClaimSpringPkgRqst& operator=(const CSClaimSpringPkgRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSClaimSpringPkgRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSClaimSpringPkgRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSClaimSpringPkgRqst* other);

  // implements Message ----------------------------------------------

  CSClaimSpringPkgRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSClaimSpringPkgRqst& from);
  void MergeFrom(const CSClaimSpringPkgRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSClaimSpringPkgRqst)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSClaimSpringPkgRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSClaimSpringPkgRsp : public ::google::protobuf::MessageLite {
 public:
  CSClaimSpringPkgRsp();
  virtual ~CSClaimSpringPkgRsp();

  CSClaimSpringPkgRsp(const CSClaimSpringPkgRsp& from);

  inline CSClaimSpringPkgRsp& operator=(const CSClaimSpringPkgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSClaimSpringPkgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSClaimSpringPkgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSClaimSpringPkgRsp* other);

  // implements Message ----------------------------------------------

  CSClaimSpringPkgRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSClaimSpringPkgRsp& from);
  void MergeFrom(const CSClaimSpringPkgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // required uint32 PkgID = 2;
  inline bool has_pkgid() const;
  inline void clear_pkgid();
  static const int kPkgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 pkgid() const;
  inline void set_pkgid(::google::protobuf::uint32 value);

  // repeated .vmsg.CSAwardElement AwardLst = 3;
  inline int awardlst_size() const;
  inline void clear_awardlst();
  static const int kAwardLstFieldNumber = 3;
  inline const ::vmsg::CSAwardElement& awardlst(int index) const;
  inline ::vmsg::CSAwardElement* mutable_awardlst(int index);
  inline ::vmsg::CSAwardElement* add_awardlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSAwardElement >&
      awardlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSAwardElement >*
      mutable_awardlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSClaimSpringPkgRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_pkgid();
  inline void clear_has_pkgid();

  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSAwardElement > awardlst_;
  ::google::protobuf::uint32 pkgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSClaimSpringPkgRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryAllPkgStatusRsp : public ::google::protobuf::MessageLite {
 public:
  CSQueryAllPkgStatusRsp();
  virtual ~CSQueryAllPkgStatusRsp();

  CSQueryAllPkgStatusRsp(const CSQueryAllPkgStatusRsp& from);

  inline CSQueryAllPkgStatusRsp& operator=(const CSQueryAllPkgStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSQueryAllPkgStatusRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSQueryAllPkgStatusRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSQueryAllPkgStatusRsp* other);

  // implements Message ----------------------------------------------

  CSQueryAllPkgStatusRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSQueryAllPkgStatusRsp& from);
  void MergeFrom(const CSQueryAllPkgStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vmsg.CSCouponActStatusItem AllActs = 1;
  inline int allacts_size() const;
  inline void clear_allacts();
  static const int kAllActsFieldNumber = 1;
  inline const ::vmsg::CSCouponActStatusItem& allacts(int index) const;
  inline ::vmsg::CSCouponActStatusItem* mutable_allacts(int index);
  inline ::vmsg::CSCouponActStatusItem* add_allacts();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
      allacts() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
      mutable_allacts();

  // @@protoc_insertion_point(class_scope:vmsg.CSQueryAllPkgStatusRsp)
 private:

  ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem > allacts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSQueryAllPkgStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCouponRequest : public ::google::protobuf::MessageLite {
 public:
  CSCouponRequest();
  virtual ~CSCouponRequest();

  CSCouponRequest(const CSCouponRequest& from);

  inline CSCouponRequest& operator=(const CSCouponRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSCouponRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSCouponRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSCouponRequest* other);

  // implements Message ----------------------------------------------

  CSCouponRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSCouponRequest& from);
  void MergeFrom(const CSCouponRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vmsg.CSClaimCouponRqst Claim_Request = 1;
  inline bool has_claim_request() const;
  inline void clear_claim_request();
  static const int kClaimRequestFieldNumber = 1;
  inline const ::vmsg::CSClaimCouponRqst& claim_request() const;
  inline ::vmsg::CSClaimCouponRqst* mutable_claim_request();
  inline ::vmsg::CSClaimCouponRqst* release_claim_request();
  inline void set_allocated_claim_request(::vmsg::CSClaimCouponRqst* claim_request);

  // optional .vmsg.CSClaimSpringPkgRqst Claim_Spring_Pkg_Rqst = 2;
  inline bool has_claim_spring_pkg_rqst() const;
  inline void clear_claim_spring_pkg_rqst();
  static const int kClaimSpringPkgRqstFieldNumber = 2;
  inline const ::vmsg::CSClaimSpringPkgRqst& claim_spring_pkg_rqst() const;
  inline ::vmsg::CSClaimSpringPkgRqst* mutable_claim_spring_pkg_rqst();
  inline ::vmsg::CSClaimSpringPkgRqst* release_claim_spring_pkg_rqst();
  inline void set_allocated_claim_spring_pkg_rqst(::vmsg::CSClaimSpringPkgRqst* claim_spring_pkg_rqst);

  // optional .vmsg.SumChargePkgRqst sumcharge_Pkg_Rqst = 3;
  inline bool has_sumcharge_pkg_rqst() const;
  inline void clear_sumcharge_pkg_rqst();
  static const int kSumchargePkgRqstFieldNumber = 3;
  inline const ::vmsg::SumChargePkgRqst& sumcharge_pkg_rqst() const;
  inline ::vmsg::SumChargePkgRqst* mutable_sumcharge_pkg_rqst();
  inline ::vmsg::SumChargePkgRqst* release_sumcharge_pkg_rqst();
  inline void set_allocated_sumcharge_pkg_rqst(::vmsg::SumChargePkgRqst* sumcharge_pkg_rqst);

  // optional .vmsg.DailyChargePkgRqst DailyCharge_Pkg_Rqst = 4;
  inline bool has_dailycharge_pkg_rqst() const;
  inline void clear_dailycharge_pkg_rqst();
  static const int kDailyChargePkgRqstFieldNumber = 4;
  inline const ::vmsg::DailyChargePkgRqst& dailycharge_pkg_rqst() const;
  inline ::vmsg::DailyChargePkgRqst* mutable_dailycharge_pkg_rqst();
  inline ::vmsg::DailyChargePkgRqst* release_dailycharge_pkg_rqst();
  inline void set_allocated_dailycharge_pkg_rqst(::vmsg::DailyChargePkgRqst* dailycharge_pkg_rqst);

  // optional .vmsg.GradeGeekPkgRqst GradeGeek_Pkg_Rqst = 5;
  inline bool has_gradegeek_pkg_rqst() const;
  inline void clear_gradegeek_pkg_rqst();
  static const int kGradeGeekPkgRqstFieldNumber = 5;
  inline const ::vmsg::GradeGeekPkgRqst& gradegeek_pkg_rqst() const;
  inline ::vmsg::GradeGeekPkgRqst* mutable_gradegeek_pkg_rqst();
  inline ::vmsg::GradeGeekPkgRqst* release_gradegeek_pkg_rqst();
  inline void set_allocated_gradegeek_pkg_rqst(::vmsg::GradeGeekPkgRqst* gradegeek_pkg_rqst);

  // optional .vmsg.FightGeekPkgRqst FightGeek_Pkg_Rqst = 6;
  inline bool has_fightgeek_pkg_rqst() const;
  inline void clear_fightgeek_pkg_rqst();
  static const int kFightGeekPkgRqstFieldNumber = 6;
  inline const ::vmsg::FightGeekPkgRqst& fightgeek_pkg_rqst() const;
  inline ::vmsg::FightGeekPkgRqst* mutable_fightgeek_pkg_rqst();
  inline ::vmsg::FightGeekPkgRqst* release_fightgeek_pkg_rqst();
  inline void set_allocated_fightgeek_pkg_rqst(::vmsg::FightGeekPkgRqst* fightgeek_pkg_rqst);

  // optional .vmsg.DailyLoginPkgRqst DailyLogin_Pkg_Rqst = 7;
  inline bool has_dailylogin_pkg_rqst() const;
  inline void clear_dailylogin_pkg_rqst();
  static const int kDailyLoginPkgRqstFieldNumber = 7;
  inline const ::vmsg::DailyLoginPkgRqst& dailylogin_pkg_rqst() const;
  inline ::vmsg::DailyLoginPkgRqst* mutable_dailylogin_pkg_rqst();
  inline ::vmsg::DailyLoginPkgRqst* release_dailylogin_pkg_rqst();
  inline void set_allocated_dailylogin_pkg_rqst(::vmsg::DailyLoginPkgRqst* dailylogin_pkg_rqst);

  // optional .vmsg.VipGiftPkgRqst VipGiftPkgRqst = 8;
  inline bool has_vipgiftpkgrqst() const;
  inline void clear_vipgiftpkgrqst();
  static const int kVipGiftPkgRqstFieldNumber = 8;
  inline const ::vmsg::VipGiftPkgRqst& vipgiftpkgrqst() const;
  inline ::vmsg::VipGiftPkgRqst* mutable_vipgiftpkgrqst();
  inline ::vmsg::VipGiftPkgRqst* release_vipgiftpkgrqst();
  inline void set_allocated_vipgiftpkgrqst(::vmsg::VipGiftPkgRqst* vipgiftpkgrqst);

  // optional .vmsg.DailyConsumePkgRqst DailyConsumePkgRqst = 9;
  inline bool has_dailyconsumepkgrqst() const;
  inline void clear_dailyconsumepkgrqst();
  static const int kDailyConsumePkgRqstFieldNumber = 9;
  inline const ::vmsg::DailyConsumePkgRqst& dailyconsumepkgrqst() const;
  inline ::vmsg::DailyConsumePkgRqst* mutable_dailyconsumepkgrqst();
  inline ::vmsg::DailyConsumePkgRqst* release_dailyconsumepkgrqst();
  inline void set_allocated_dailyconsumepkgrqst(::vmsg::DailyConsumePkgRqst* dailyconsumepkgrqst);

  // optional .vmsg.SumConsumePkgRqst SumConsumePkgRqst = 10;
  inline bool has_sumconsumepkgrqst() const;
  inline void clear_sumconsumepkgrqst();
  static const int kSumConsumePkgRqstFieldNumber = 10;
  inline const ::vmsg::SumConsumePkgRqst& sumconsumepkgrqst() const;
  inline ::vmsg::SumConsumePkgRqst* mutable_sumconsumepkgrqst();
  inline ::vmsg::SumConsumePkgRqst* release_sumconsumepkgrqst();
  inline void set_allocated_sumconsumepkgrqst(::vmsg::SumConsumePkgRqst* sumconsumepkgrqst);

  // optional .vmsg.OnlinePkgRqst OnlinePkgRqst = 11;
  inline bool has_onlinepkgrqst() const;
  inline void clear_onlinepkgrqst();
  static const int kOnlinePkgRqstFieldNumber = 11;
  inline const ::vmsg::OnlinePkgRqst& onlinepkgrqst() const;
  inline ::vmsg::OnlinePkgRqst* mutable_onlinepkgrqst();
  inline ::vmsg::OnlinePkgRqst* release_onlinepkgrqst();
  inline void set_allocated_onlinepkgrqst(::vmsg::OnlinePkgRqst* onlinepkgrqst);

  // optional .vmsg.NextDayPkgRqst NextDayPkgRqst = 12;
  inline bool has_nextdaypkgrqst() const;
  inline void clear_nextdaypkgrqst();
  static const int kNextDayPkgRqstFieldNumber = 12;
  inline const ::vmsg::NextDayPkgRqst& nextdaypkgrqst() const;
  inline ::vmsg::NextDayPkgRqst* mutable_nextdaypkgrqst();
  inline ::vmsg::NextDayPkgRqst* release_nextdaypkgrqst();
  inline void set_allocated_nextdaypkgrqst(::vmsg::NextDayPkgRqst* nextdaypkgrqst);

  // @@protoc_insertion_point(class_scope:vmsg.CSCouponRequest)
 private:
  inline void set_has_claim_request();
  inline void clear_has_claim_request();
  inline void set_has_claim_spring_pkg_rqst();
  inline void clear_has_claim_spring_pkg_rqst();
  inline void set_has_sumcharge_pkg_rqst();
  inline void clear_has_sumcharge_pkg_rqst();
  inline void set_has_dailycharge_pkg_rqst();
  inline void clear_has_dailycharge_pkg_rqst();
  inline void set_has_gradegeek_pkg_rqst();
  inline void clear_has_gradegeek_pkg_rqst();
  inline void set_has_fightgeek_pkg_rqst();
  inline void clear_has_fightgeek_pkg_rqst();
  inline void set_has_dailylogin_pkg_rqst();
  inline void clear_has_dailylogin_pkg_rqst();
  inline void set_has_vipgiftpkgrqst();
  inline void clear_has_vipgiftpkgrqst();
  inline void set_has_dailyconsumepkgrqst();
  inline void clear_has_dailyconsumepkgrqst();
  inline void set_has_sumconsumepkgrqst();
  inline void clear_has_sumconsumepkgrqst();
  inline void set_has_onlinepkgrqst();
  inline void clear_has_onlinepkgrqst();
  inline void set_has_nextdaypkgrqst();
  inline void clear_has_nextdaypkgrqst();

  ::vmsg::CSClaimCouponRqst* claim_request_;
  ::vmsg::CSClaimSpringPkgRqst* claim_spring_pkg_rqst_;
  ::vmsg::SumChargePkgRqst* sumcharge_pkg_rqst_;
  ::vmsg::DailyChargePkgRqst* dailycharge_pkg_rqst_;
  ::vmsg::GradeGeekPkgRqst* gradegeek_pkg_rqst_;
  ::vmsg::FightGeekPkgRqst* fightgeek_pkg_rqst_;
  ::vmsg::DailyLoginPkgRqst* dailylogin_pkg_rqst_;
  ::vmsg::VipGiftPkgRqst* vipgiftpkgrqst_;
  ::vmsg::DailyConsumePkgRqst* dailyconsumepkgrqst_;
  ::vmsg::SumConsumePkgRqst* sumconsumepkgrqst_;
  ::vmsg::OnlinePkgRqst* onlinepkgrqst_;
  ::vmsg::NextDayPkgRqst* nextdaypkgrqst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSCouponRequest* default_instance_;
};
// -------------------------------------------------------------------

class CSCouponRespond : public ::google::protobuf::MessageLite {
 public:
  CSCouponRespond();
  virtual ~CSCouponRespond();

  CSCouponRespond(const CSCouponRespond& from);

  inline CSCouponRespond& operator=(const CSCouponRespond& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSCouponRespond& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSCouponRespond* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSCouponRespond* other);

  // implements Message ----------------------------------------------

  CSCouponRespond* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSCouponRespond& from);
  void MergeFrom(const CSCouponRespond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vmsg.CSClaimCouponRsp Claim_Response = 1;
  inline bool has_claim_response() const;
  inline void clear_claim_response();
  static const int kClaimResponseFieldNumber = 1;
  inline const ::vmsg::CSClaimCouponRsp& claim_response() const;
  inline ::vmsg::CSClaimCouponRsp* mutable_claim_response();
  inline ::vmsg::CSClaimCouponRsp* release_claim_response();
  inline void set_allocated_claim_response(::vmsg::CSClaimCouponRsp* claim_response);

  // optional .vmsg.CSClaimFirstChargePkgRsp Claim_First_Charge_Response = 2;
  inline bool has_claim_first_charge_response() const;
  inline void clear_claim_first_charge_response();
  static const int kClaimFirstChargeResponseFieldNumber = 2;
  inline const ::vmsg::CSClaimFirstChargePkgRsp& claim_first_charge_response() const;
  inline ::vmsg::CSClaimFirstChargePkgRsp* mutable_claim_first_charge_response();
  inline ::vmsg::CSClaimFirstChargePkgRsp* release_claim_first_charge_response();
  inline void set_allocated_claim_first_charge_response(::vmsg::CSClaimFirstChargePkgRsp* claim_first_charge_response);

  // optional .vmsg.CSQueryAllPkgStatusRsp All_Pkg_Status = 3;
  inline bool has_all_pkg_status() const;
  inline void clear_all_pkg_status();
  static const int kAllPkgStatusFieldNumber = 3;
  inline const ::vmsg::CSQueryAllPkgStatusRsp& all_pkg_status() const;
  inline ::vmsg::CSQueryAllPkgStatusRsp* mutable_all_pkg_status();
  inline ::vmsg::CSQueryAllPkgStatusRsp* release_all_pkg_status();
  inline void set_allocated_all_pkg_status(::vmsg::CSQueryAllPkgStatusRsp* all_pkg_status);

  // optional .vmsg.CSClaimSpringPkgRsp ClaimSpringPkg_Rsp = 4;
  inline bool has_claimspringpkg_rsp() const;
  inline void clear_claimspringpkg_rsp();
  static const int kClaimSpringPkgRspFieldNumber = 4;
  inline const ::vmsg::CSClaimSpringPkgRsp& claimspringpkg_rsp() const;
  inline ::vmsg::CSClaimSpringPkgRsp* mutable_claimspringpkg_rsp();
  inline ::vmsg::CSClaimSpringPkgRsp* release_claimspringpkg_rsp();
  inline void set_allocated_claimspringpkg_rsp(::vmsg::CSClaimSpringPkgRsp* claimspringpkg_rsp);

  // optional .vmsg.SumChargePkgPkgRsp Sumcharge_Pkg_Rsp = 5;
  inline bool has_sumcharge_pkg_rsp() const;
  inline void clear_sumcharge_pkg_rsp();
  static const int kSumchargePkgRspFieldNumber = 5;
  inline const ::vmsg::SumChargePkgPkgRsp& sumcharge_pkg_rsp() const;
  inline ::vmsg::SumChargePkgPkgRsp* mutable_sumcharge_pkg_rsp();
  inline ::vmsg::SumChargePkgPkgRsp* release_sumcharge_pkg_rsp();
  inline void set_allocated_sumcharge_pkg_rsp(::vmsg::SumChargePkgPkgRsp* sumcharge_pkg_rsp);

  // optional .vmsg.DailyChargePkgRsp DailyCharge_Pkg_Rsp = 6;
  inline bool has_dailycharge_pkg_rsp() const;
  inline void clear_dailycharge_pkg_rsp();
  static const int kDailyChargePkgRspFieldNumber = 6;
  inline const ::vmsg::DailyChargePkgRsp& dailycharge_pkg_rsp() const;
  inline ::vmsg::DailyChargePkgRsp* mutable_dailycharge_pkg_rsp();
  inline ::vmsg::DailyChargePkgRsp* release_dailycharge_pkg_rsp();
  inline void set_allocated_dailycharge_pkg_rsp(::vmsg::DailyChargePkgRsp* dailycharge_pkg_rsp);

  // optional .vmsg.DailyLoginPkgRsp DailyLogin_Pkg_Rsp = 7;
  inline bool has_dailylogin_pkg_rsp() const;
  inline void clear_dailylogin_pkg_rsp();
  static const int kDailyLoginPkgRspFieldNumber = 7;
  inline const ::vmsg::DailyLoginPkgRsp& dailylogin_pkg_rsp() const;
  inline ::vmsg::DailyLoginPkgRsp* mutable_dailylogin_pkg_rsp();
  inline ::vmsg::DailyLoginPkgRsp* release_dailylogin_pkg_rsp();
  inline void set_allocated_dailylogin_pkg_rsp(::vmsg::DailyLoginPkgRsp* dailylogin_pkg_rsp);

  // optional .vmsg.GradeGeekPkgRsp GradeGeek_Pkg_Rsp = 8;
  inline bool has_gradegeek_pkg_rsp() const;
  inline void clear_gradegeek_pkg_rsp();
  static const int kGradeGeekPkgRspFieldNumber = 8;
  inline const ::vmsg::GradeGeekPkgRsp& gradegeek_pkg_rsp() const;
  inline ::vmsg::GradeGeekPkgRsp* mutable_gradegeek_pkg_rsp();
  inline ::vmsg::GradeGeekPkgRsp* release_gradegeek_pkg_rsp();
  inline void set_allocated_gradegeek_pkg_rsp(::vmsg::GradeGeekPkgRsp* gradegeek_pkg_rsp);

  // optional .vmsg.FightGeekPkgRsp FightGeek_Pkg_Rsp = 9;
  inline bool has_fightgeek_pkg_rsp() const;
  inline void clear_fightgeek_pkg_rsp();
  static const int kFightGeekPkgRspFieldNumber = 9;
  inline const ::vmsg::FightGeekPkgRsp& fightgeek_pkg_rsp() const;
  inline ::vmsg::FightGeekPkgRsp* mutable_fightgeek_pkg_rsp();
  inline ::vmsg::FightGeekPkgRsp* release_fightgeek_pkg_rsp();
  inline void set_allocated_fightgeek_pkg_rsp(::vmsg::FightGeekPkgRsp* fightgeek_pkg_rsp);

  // optional .vmsg.VipGiftPkgRsp VipGiftPkgRsp = 10;
  inline bool has_vipgiftpkgrsp() const;
  inline void clear_vipgiftpkgrsp();
  static const int kVipGiftPkgRspFieldNumber = 10;
  inline const ::vmsg::VipGiftPkgRsp& vipgiftpkgrsp() const;
  inline ::vmsg::VipGiftPkgRsp* mutable_vipgiftpkgrsp();
  inline ::vmsg::VipGiftPkgRsp* release_vipgiftpkgrsp();
  inline void set_allocated_vipgiftpkgrsp(::vmsg::VipGiftPkgRsp* vipgiftpkgrsp);

  // optional .vmsg.DailyConsumePkgRsp DailyConsumePkgRsp = 11;
  inline bool has_dailyconsumepkgrsp() const;
  inline void clear_dailyconsumepkgrsp();
  static const int kDailyConsumePkgRspFieldNumber = 11;
  inline const ::vmsg::DailyConsumePkgRsp& dailyconsumepkgrsp() const;
  inline ::vmsg::DailyConsumePkgRsp* mutable_dailyconsumepkgrsp();
  inline ::vmsg::DailyConsumePkgRsp* release_dailyconsumepkgrsp();
  inline void set_allocated_dailyconsumepkgrsp(::vmsg::DailyConsumePkgRsp* dailyconsumepkgrsp);

  // optional .vmsg.SumConsumePkgRsp SumConsumePkgRsp = 12;
  inline bool has_sumconsumepkgrsp() const;
  inline void clear_sumconsumepkgrsp();
  static const int kSumConsumePkgRspFieldNumber = 12;
  inline const ::vmsg::SumConsumePkgRsp& sumconsumepkgrsp() const;
  inline ::vmsg::SumConsumePkgRsp* mutable_sumconsumepkgrsp();
  inline ::vmsg::SumConsumePkgRsp* release_sumconsumepkgrsp();
  inline void set_allocated_sumconsumepkgrsp(::vmsg::SumConsumePkgRsp* sumconsumepkgrsp);

  // optional .vmsg.OnlinePkgRsp OnlinePkgRsp = 13;
  inline bool has_onlinepkgrsp() const;
  inline void clear_onlinepkgrsp();
  static const int kOnlinePkgRspFieldNumber = 13;
  inline const ::vmsg::OnlinePkgRsp& onlinepkgrsp() const;
  inline ::vmsg::OnlinePkgRsp* mutable_onlinepkgrsp();
  inline ::vmsg::OnlinePkgRsp* release_onlinepkgrsp();
  inline void set_allocated_onlinepkgrsp(::vmsg::OnlinePkgRsp* onlinepkgrsp);

  // optional .vmsg.NextDayPkgRsp NextDayPkgRsp = 14;
  inline bool has_nextdaypkgrsp() const;
  inline void clear_nextdaypkgrsp();
  static const int kNextDayPkgRspFieldNumber = 14;
  inline const ::vmsg::NextDayPkgRsp& nextdaypkgrsp() const;
  inline ::vmsg::NextDayPkgRsp* mutable_nextdaypkgrsp();
  inline ::vmsg::NextDayPkgRsp* release_nextdaypkgrsp();
  inline void set_allocated_nextdaypkgrsp(::vmsg::NextDayPkgRsp* nextdaypkgrsp);

  // @@protoc_insertion_point(class_scope:vmsg.CSCouponRespond)
 private:
  inline void set_has_claim_response();
  inline void clear_has_claim_response();
  inline void set_has_claim_first_charge_response();
  inline void clear_has_claim_first_charge_response();
  inline void set_has_all_pkg_status();
  inline void clear_has_all_pkg_status();
  inline void set_has_claimspringpkg_rsp();
  inline void clear_has_claimspringpkg_rsp();
  inline void set_has_sumcharge_pkg_rsp();
  inline void clear_has_sumcharge_pkg_rsp();
  inline void set_has_dailycharge_pkg_rsp();
  inline void clear_has_dailycharge_pkg_rsp();
  inline void set_has_dailylogin_pkg_rsp();
  inline void clear_has_dailylogin_pkg_rsp();
  inline void set_has_gradegeek_pkg_rsp();
  inline void clear_has_gradegeek_pkg_rsp();
  inline void set_has_fightgeek_pkg_rsp();
  inline void clear_has_fightgeek_pkg_rsp();
  inline void set_has_vipgiftpkgrsp();
  inline void clear_has_vipgiftpkgrsp();
  inline void set_has_dailyconsumepkgrsp();
  inline void clear_has_dailyconsumepkgrsp();
  inline void set_has_sumconsumepkgrsp();
  inline void clear_has_sumconsumepkgrsp();
  inline void set_has_onlinepkgrsp();
  inline void clear_has_onlinepkgrsp();
  inline void set_has_nextdaypkgrsp();
  inline void clear_has_nextdaypkgrsp();

  ::vmsg::CSClaimCouponRsp* claim_response_;
  ::vmsg::CSClaimFirstChargePkgRsp* claim_first_charge_response_;
  ::vmsg::CSQueryAllPkgStatusRsp* all_pkg_status_;
  ::vmsg::CSClaimSpringPkgRsp* claimspringpkg_rsp_;
  ::vmsg::SumChargePkgPkgRsp* sumcharge_pkg_rsp_;
  ::vmsg::DailyChargePkgRsp* dailycharge_pkg_rsp_;
  ::vmsg::DailyLoginPkgRsp* dailylogin_pkg_rsp_;
  ::vmsg::GradeGeekPkgRsp* gradegeek_pkg_rsp_;
  ::vmsg::FightGeekPkgRsp* fightgeek_pkg_rsp_;
  ::vmsg::VipGiftPkgRsp* vipgiftpkgrsp_;
  ::vmsg::DailyConsumePkgRsp* dailyconsumepkgrsp_;
  ::vmsg::SumConsumePkgRsp* sumconsumepkgrsp_;
  ::vmsg::OnlinePkgRsp* onlinepkgrsp_;
  ::vmsg::NextDayPkgRsp* nextdaypkgrsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSCouponMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSCouponMsg_2eproto();
  friend void protobuf_ShutdownFile_CSCouponMsg_2eproto();

  void InitAsDefaultInstance();
  static CSCouponRespond* default_instance_;
};
// ===================================================================


// ===================================================================

// CSClaimCouponRqst

// required string CouponID = 1;
inline bool CSClaimCouponRqst::has_couponid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSClaimCouponRqst::set_has_couponid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSClaimCouponRqst::clear_has_couponid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSClaimCouponRqst::clear_couponid() {
  if (couponid_ != &::google::protobuf::internal::kEmptyString) {
    couponid_->clear();
  }
  clear_has_couponid();
}
inline const ::std::string& CSClaimCouponRqst::couponid() const {
  return *couponid_;
}
inline void CSClaimCouponRqst::set_couponid(const ::std::string& value) {
  set_has_couponid();
  if (couponid_ == &::google::protobuf::internal::kEmptyString) {
    couponid_ = new ::std::string;
  }
  couponid_->assign(value);
}
inline void CSClaimCouponRqst::set_couponid(const char* value) {
  set_has_couponid();
  if (couponid_ == &::google::protobuf::internal::kEmptyString) {
    couponid_ = new ::std::string;
  }
  couponid_->assign(value);
}
inline void CSClaimCouponRqst::set_couponid(const char* value, size_t size) {
  set_has_couponid();
  if (couponid_ == &::google::protobuf::internal::kEmptyString) {
    couponid_ = new ::std::string;
  }
  couponid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSClaimCouponRqst::mutable_couponid() {
  set_has_couponid();
  if (couponid_ == &::google::protobuf::internal::kEmptyString) {
    couponid_ = new ::std::string;
  }
  return couponid_;
}
inline ::std::string* CSClaimCouponRqst::release_couponid() {
  clear_has_couponid();
  if (couponid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = couponid_;
    couponid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSClaimCouponRqst::set_allocated_couponid(::std::string* couponid) {
  if (couponid_ != &::google::protobuf::internal::kEmptyString) {
    delete couponid_;
  }
  if (couponid) {
    set_has_couponid();
    couponid_ = couponid;
  } else {
    clear_has_couponid();
    couponid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSClaimCouponRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool CSClaimCouponRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSClaimCouponRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSClaimCouponRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSClaimCouponRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& CSClaimCouponRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* CSClaimCouponRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* CSClaimCouponRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void CSClaimCouponRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// required uint32 PkgID = 2;
inline bool CSClaimCouponRsp::has_pkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSClaimCouponRsp::set_has_pkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSClaimCouponRsp::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSClaimCouponRsp::clear_pkgid() {
  pkgid_ = 0u;
  clear_has_pkgid();
}
inline ::google::protobuf::uint32 CSClaimCouponRsp::pkgid() const {
  return pkgid_;
}
inline void CSClaimCouponRsp::set_pkgid(::google::protobuf::uint32 value) {
  set_has_pkgid();
  pkgid_ = value;
}

// repeated .vmsg.CSCouponActStatusItem AllActs = 3;
inline int CSClaimCouponRsp::allacts_size() const {
  return allacts_.size();
}
inline void CSClaimCouponRsp::clear_allacts() {
  allacts_.Clear();
}
inline const ::vmsg::CSCouponActStatusItem& CSClaimCouponRsp::allacts(int index) const {
  return allacts_.Get(index);
}
inline ::vmsg::CSCouponActStatusItem* CSClaimCouponRsp::mutable_allacts(int index) {
  return allacts_.Mutable(index);
}
inline ::vmsg::CSCouponActStatusItem* CSClaimCouponRsp::add_allacts() {
  return allacts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
CSClaimCouponRsp::allacts() const {
  return allacts_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
CSClaimCouponRsp::mutable_allacts() {
  return &allacts_;
}

// -------------------------------------------------------------------

// CSClaimFirstChargePkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool CSClaimFirstChargePkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSClaimFirstChargePkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSClaimFirstChargePkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSClaimFirstChargePkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& CSClaimFirstChargePkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* CSClaimFirstChargePkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* CSClaimFirstChargePkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void CSClaimFirstChargePkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// required uint32 PkgID = 2;
inline bool CSClaimFirstChargePkgRsp::has_pkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSClaimFirstChargePkgRsp::set_has_pkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSClaimFirstChargePkgRsp::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSClaimFirstChargePkgRsp::clear_pkgid() {
  pkgid_ = 0u;
  clear_has_pkgid();
}
inline ::google::protobuf::uint32 CSClaimFirstChargePkgRsp::pkgid() const {
  return pkgid_;
}
inline void CSClaimFirstChargePkgRsp::set_pkgid(::google::protobuf::uint32 value) {
  set_has_pkgid();
  pkgid_ = value;
}

// repeated .vmsg.CSCouponActStatusItem AllActs = 3;
inline int CSClaimFirstChargePkgRsp::allacts_size() const {
  return allacts_.size();
}
inline void CSClaimFirstChargePkgRsp::clear_allacts() {
  allacts_.Clear();
}
inline const ::vmsg::CSCouponActStatusItem& CSClaimFirstChargePkgRsp::allacts(int index) const {
  return allacts_.Get(index);
}
inline ::vmsg::CSCouponActStatusItem* CSClaimFirstChargePkgRsp::mutable_allacts(int index) {
  return allacts_.Mutable(index);
}
inline ::vmsg::CSCouponActStatusItem* CSClaimFirstChargePkgRsp::add_allacts() {
  return allacts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
CSClaimFirstChargePkgRsp::allacts() const {
  return allacts_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
CSClaimFirstChargePkgRsp::mutable_allacts() {
  return &allacts_;
}

// -------------------------------------------------------------------

// CSSpring7DayPkgStatus

// required uint32 StartTime = 1;
inline bool CSSpring7DayPkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpring7DayPkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpring7DayPkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpring7DayPkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 CSSpring7DayPkgStatus::starttime() const {
  return starttime_;
}
inline void CSSpring7DayPkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool CSSpring7DayPkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpring7DayPkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpring7DayPkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpring7DayPkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 CSSpring7DayPkgStatus::stoptime() const {
  return stoptime_;
}
inline void CSSpring7DayPkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 ClaimStatus = 3;
inline bool CSSpring7DayPkgStatus::has_claimstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpring7DayPkgStatus::set_has_claimstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpring7DayPkgStatus::clear_has_claimstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpring7DayPkgStatus::clear_claimstatus() {
  claimstatus_ = 0u;
  clear_has_claimstatus();
}
inline ::google::protobuf::uint32 CSSpring7DayPkgStatus::claimstatus() const {
  return claimstatus_;
}
inline void CSSpring7DayPkgStatus::set_claimstatus(::google::protobuf::uint32 value) {
  set_has_claimstatus();
  claimstatus_ = value;
}

// -------------------------------------------------------------------

// SumChargePkgStatus

// required uint32 StartTime = 1;
inline bool SumChargePkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumChargePkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumChargePkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumChargePkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 SumChargePkgStatus::starttime() const {
  return starttime_;
}
inline void SumChargePkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool SumChargePkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumChargePkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumChargePkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumChargePkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 SumChargePkgStatus::stoptime() const {
  return stoptime_;
}
inline void SumChargePkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 totalCharge = 3;
inline bool SumChargePkgStatus::has_totalcharge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SumChargePkgStatus::set_has_totalcharge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SumChargePkgStatus::clear_has_totalcharge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SumChargePkgStatus::clear_totalcharge() {
  totalcharge_ = 0u;
  clear_has_totalcharge();
}
inline ::google::protobuf::uint32 SumChargePkgStatus::totalcharge() const {
  return totalcharge_;
}
inline void SumChargePkgStatus::set_totalcharge(::google::protobuf::uint32 value) {
  set_has_totalcharge();
  totalcharge_ = value;
}

// required uint32 status = 4;
inline bool SumChargePkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SumChargePkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SumChargePkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SumChargePkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SumChargePkgStatus::status() const {
  return status_;
}
inline void SumChargePkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyChargePkgStatus

// required uint32 StartTime = 1;
inline bool DailyChargePkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyChargePkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyChargePkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyChargePkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 DailyChargePkgStatus::starttime() const {
  return starttime_;
}
inline void DailyChargePkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool DailyChargePkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyChargePkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyChargePkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyChargePkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 DailyChargePkgStatus::stoptime() const {
  return stoptime_;
}
inline void DailyChargePkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Charge = 3;
inline bool DailyChargePkgStatus::has_charge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyChargePkgStatus::set_has_charge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyChargePkgStatus::clear_has_charge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyChargePkgStatus::clear_charge() {
  charge_ = 0u;
  clear_has_charge();
}
inline ::google::protobuf::uint32 DailyChargePkgStatus::charge() const {
  return charge_;
}
inline void DailyChargePkgStatus::set_charge(::google::protobuf::uint32 value) {
  set_has_charge();
  charge_ = value;
}

// required uint32 Status = 4;
inline bool DailyChargePkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyChargePkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyChargePkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyChargePkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DailyChargePkgStatus::status() const {
  return status_;
}
inline void DailyChargePkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyLoginPkgStatus

// required uint32 StartTime = 1;
inline bool DailyLoginPkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLoginPkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLoginPkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLoginPkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 DailyLoginPkgStatus::starttime() const {
  return starttime_;
}
inline void DailyLoginPkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool DailyLoginPkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyLoginPkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyLoginPkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyLoginPkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 DailyLoginPkgStatus::stoptime() const {
  return stoptime_;
}
inline void DailyLoginPkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 LoginCnt = 3;
inline bool DailyLoginPkgStatus::has_logincnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyLoginPkgStatus::set_has_logincnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyLoginPkgStatus::clear_has_logincnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyLoginPkgStatus::clear_logincnt() {
  logincnt_ = 0u;
  clear_has_logincnt();
}
inline ::google::protobuf::uint32 DailyLoginPkgStatus::logincnt() const {
  return logincnt_;
}
inline void DailyLoginPkgStatus::set_logincnt(::google::protobuf::uint32 value) {
  set_has_logincnt();
  logincnt_ = value;
}

// required uint32 Status = 4;
inline bool DailyLoginPkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyLoginPkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyLoginPkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyLoginPkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DailyLoginPkgStatus::status() const {
  return status_;
}
inline void DailyLoginPkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GradeGeekPkgStatus

// required uint32 StartTime = 1;
inline bool GradeGeekPkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GradeGeekPkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GradeGeekPkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GradeGeekPkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 GradeGeekPkgStatus::starttime() const {
  return starttime_;
}
inline void GradeGeekPkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool GradeGeekPkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GradeGeekPkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GradeGeekPkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GradeGeekPkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 GradeGeekPkgStatus::stoptime() const {
  return stoptime_;
}
inline void GradeGeekPkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Status = 3;
inline bool GradeGeekPkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GradeGeekPkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GradeGeekPkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GradeGeekPkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 GradeGeekPkgStatus::status() const {
  return status_;
}
inline void GradeGeekPkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// repeated uint32 GetNum = 4;
inline int GradeGeekPkgStatus::getnum_size() const {
  return getnum_.size();
}
inline void GradeGeekPkgStatus::clear_getnum() {
  getnum_.Clear();
}
inline ::google::protobuf::uint32 GradeGeekPkgStatus::getnum(int index) const {
  return getnum_.Get(index);
}
inline void GradeGeekPkgStatus::set_getnum(int index, ::google::protobuf::uint32 value) {
  getnum_.Set(index, value);
}
inline void GradeGeekPkgStatus::add_getnum(::google::protobuf::uint32 value) {
  getnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GradeGeekPkgStatus::getnum() const {
  return getnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GradeGeekPkgStatus::mutable_getnum() {
  return &getnum_;
}

// -------------------------------------------------------------------

// FightGeekPkgStatus

// required uint32 StartTime = 1;
inline bool FightGeekPkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightGeekPkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightGeekPkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightGeekPkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 FightGeekPkgStatus::starttime() const {
  return starttime_;
}
inline void FightGeekPkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool FightGeekPkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightGeekPkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightGeekPkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightGeekPkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 FightGeekPkgStatus::stoptime() const {
  return stoptime_;
}
inline void FightGeekPkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Status = 3;
inline bool FightGeekPkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightGeekPkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightGeekPkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightGeekPkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FightGeekPkgStatus::status() const {
  return status_;
}
inline void FightGeekPkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// VipGiftPkgStatus

// required uint32 StartTime = 1;
inline bool VipGiftPkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipGiftPkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipGiftPkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipGiftPkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 VipGiftPkgStatus::starttime() const {
  return starttime_;
}
inline void VipGiftPkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool VipGiftPkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipGiftPkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipGiftPkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipGiftPkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 VipGiftPkgStatus::stoptime() const {
  return stoptime_;
}
inline void VipGiftPkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Status = 3;
inline bool VipGiftPkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipGiftPkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipGiftPkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipGiftPkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 VipGiftPkgStatus::status() const {
  return status_;
}
inline void VipGiftPkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyConsumePkgStatus

// required uint32 StartTime = 1;
inline bool DailyConsumePkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyConsumePkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyConsumePkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyConsumePkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 DailyConsumePkgStatus::starttime() const {
  return starttime_;
}
inline void DailyConsumePkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool DailyConsumePkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyConsumePkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyConsumePkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyConsumePkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 DailyConsumePkgStatus::stoptime() const {
  return stoptime_;
}
inline void DailyConsumePkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Status = 3;
inline bool DailyConsumePkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyConsumePkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyConsumePkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyConsumePkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DailyConsumePkgStatus::status() const {
  return status_;
}
inline void DailyConsumePkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 Consume = 4;
inline bool DailyConsumePkgStatus::has_consume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyConsumePkgStatus::set_has_consume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyConsumePkgStatus::clear_has_consume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyConsumePkgStatus::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 DailyConsumePkgStatus::consume() const {
  return consume_;
}
inline void DailyConsumePkgStatus::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// -------------------------------------------------------------------

// SumConsumePkgStatus

// required uint32 StartTime = 1;
inline bool SumConsumePkgStatus::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumConsumePkgStatus::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumConsumePkgStatus::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumConsumePkgStatus::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 SumConsumePkgStatus::starttime() const {
  return starttime_;
}
inline void SumConsumePkgStatus::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 StopTime = 2;
inline bool SumConsumePkgStatus::has_stoptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumConsumePkgStatus::set_has_stoptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumConsumePkgStatus::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumConsumePkgStatus::clear_stoptime() {
  stoptime_ = 0u;
  clear_has_stoptime();
}
inline ::google::protobuf::uint32 SumConsumePkgStatus::stoptime() const {
  return stoptime_;
}
inline void SumConsumePkgStatus::set_stoptime(::google::protobuf::uint32 value) {
  set_has_stoptime();
  stoptime_ = value;
}

// required uint32 Status = 3;
inline bool SumConsumePkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SumConsumePkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SumConsumePkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SumConsumePkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SumConsumePkgStatus::status() const {
  return status_;
}
inline void SumConsumePkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 Consume = 4;
inline bool SumConsumePkgStatus::has_consume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SumConsumePkgStatus::set_has_consume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SumConsumePkgStatus::clear_has_consume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SumConsumePkgStatus::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 SumConsumePkgStatus::consume() const {
  return consume_;
}
inline void SumConsumePkgStatus::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// -------------------------------------------------------------------

// OnlinePkgStatus

// required uint32 Status = 1;
inline bool OnlinePkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlinePkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlinePkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlinePkgStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 OnlinePkgStatus::status() const {
  return status_;
}
inline void OnlinePkgStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 OnlineTime = 2;
inline bool OnlinePkgStatus::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlinePkgStatus::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlinePkgStatus::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlinePkgStatus::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 OnlinePkgStatus::onlinetime() const {
  return onlinetime_;
}
inline void OnlinePkgStatus::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// -------------------------------------------------------------------

// NextDayPkgStatus

// required int32 Status = 1;
inline bool NextDayPkgStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextDayPkgStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextDayPkgStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextDayPkgStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 NextDayPkgStatus::status() const {
  return status_;
}
inline void NextDayPkgStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SumChargePkgRqst

// required uint32 Level = 1;
inline bool SumChargePkgRqst::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumChargePkgRqst::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumChargePkgRqst::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumChargePkgRqst::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SumChargePkgRqst::level() const {
  return level_;
}
inline void SumChargePkgRqst::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// DailyChargePkgRqst

// required uint32 Level = 1;
inline bool DailyChargePkgRqst::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyChargePkgRqst::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyChargePkgRqst::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyChargePkgRqst::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DailyChargePkgRqst::level() const {
  return level_;
}
inline void DailyChargePkgRqst::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// DailyLoginPkgRqst

// required uint32 Day = 1;
inline bool DailyLoginPkgRqst::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLoginPkgRqst::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLoginPkgRqst::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLoginPkgRqst::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 DailyLoginPkgRqst::day() const {
  return day_;
}
inline void DailyLoginPkgRqst::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// GradeGeekPkgRqst

// required uint32 AwardLevel = 1;
inline bool GradeGeekPkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GradeGeekPkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GradeGeekPkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GradeGeekPkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 GradeGeekPkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void GradeGeekPkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// FightGeekPkgRqst

// required uint32 AwardLevel = 1;
inline bool FightGeekPkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightGeekPkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightGeekPkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightGeekPkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 FightGeekPkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void FightGeekPkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// VipGiftPkgRqst

// required uint32 AwardLevel = 1;
inline bool VipGiftPkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipGiftPkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipGiftPkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipGiftPkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 VipGiftPkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void VipGiftPkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// DailyConsumePkgRqst

// required uint32 AwardLevel = 1;
inline bool DailyConsumePkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyConsumePkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyConsumePkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyConsumePkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 DailyConsumePkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void DailyConsumePkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// SumConsumePkgRqst

// required uint32 AwardLevel = 1;
inline bool SumConsumePkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumConsumePkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumConsumePkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumConsumePkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 SumConsumePkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void SumConsumePkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// OnlinePkgRqst

// optional uint32 AwardLevel = 1;
inline bool OnlinePkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlinePkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlinePkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlinePkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 OnlinePkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void OnlinePkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// NextDayPkgRqst

// optional uint32 AwardLevel = 1;
inline bool NextDayPkgRqst::has_awardlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextDayPkgRqst::set_has_awardlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextDayPkgRqst::clear_has_awardlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextDayPkgRqst::clear_awardlevel() {
  awardlevel_ = 0u;
  clear_has_awardlevel();
}
inline ::google::protobuf::uint32 NextDayPkgRqst::awardlevel() const {
  return awardlevel_;
}
inline void NextDayPkgRqst::set_awardlevel(::google::protobuf::uint32 value) {
  set_has_awardlevel();
  awardlevel_ = value;
}

// -------------------------------------------------------------------

// AwardInfo

// required uint32 Type = 1;
inline bool AwardInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AwardInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AwardInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AwardInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AwardInfo::type() const {
  return type_;
}
inline void AwardInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 Id = 2;
inline bool AwardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AwardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AwardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AwardInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AwardInfo::id() const {
  return id_;
}
inline void AwardInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 Num = 3;
inline bool AwardInfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AwardInfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AwardInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AwardInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AwardInfo::num() const {
  return num_;
}
inline void AwardInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// SumChargePkgPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool SumChargePkgPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumChargePkgPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumChargePkgPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumChargePkgPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& SumChargePkgPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* SumChargePkgPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* SumChargePkgPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void SumChargePkgPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int SumChargePkgPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void SumChargePkgPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& SumChargePkgPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* SumChargePkgPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* SumChargePkgPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
SumChargePkgPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
SumChargePkgPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// DailyChargePkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool DailyChargePkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyChargePkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyChargePkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyChargePkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& DailyChargePkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* DailyChargePkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* DailyChargePkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void DailyChargePkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int DailyChargePkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void DailyChargePkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& DailyChargePkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* DailyChargePkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* DailyChargePkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
DailyChargePkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
DailyChargePkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// DailyLoginPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool DailyLoginPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyLoginPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyLoginPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyLoginPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& DailyLoginPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* DailyLoginPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* DailyLoginPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void DailyLoginPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int DailyLoginPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void DailyLoginPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& DailyLoginPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* DailyLoginPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* DailyLoginPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
DailyLoginPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
DailyLoginPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// GradeGeekPkgRsp

// optional .vmsg.CSBagInfo BagInfo = 1;
inline bool GradeGeekPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GradeGeekPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GradeGeekPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GradeGeekPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& GradeGeekPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* GradeGeekPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* GradeGeekPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void GradeGeekPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int GradeGeekPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void GradeGeekPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& GradeGeekPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* GradeGeekPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* GradeGeekPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
GradeGeekPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
GradeGeekPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// optional uint32 Success = 3;
inline bool GradeGeekPkgRsp::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GradeGeekPkgRsp::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GradeGeekPkgRsp::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GradeGeekPkgRsp::clear_success() {
  success_ = 0u;
  clear_has_success();
}
inline ::google::protobuf::uint32 GradeGeekPkgRsp::success() const {
  return success_;
}
inline void GradeGeekPkgRsp::set_success(::google::protobuf::uint32 value) {
  set_has_success();
  success_ = value;
}

// -------------------------------------------------------------------

// FightGeekPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool FightGeekPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightGeekPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightGeekPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightGeekPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& FightGeekPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* FightGeekPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* FightGeekPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void FightGeekPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int FightGeekPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void FightGeekPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& FightGeekPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* FightGeekPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* FightGeekPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
FightGeekPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
FightGeekPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// VipGiftPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool VipGiftPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipGiftPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipGiftPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipGiftPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& VipGiftPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* VipGiftPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* VipGiftPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void VipGiftPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int VipGiftPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void VipGiftPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& VipGiftPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* VipGiftPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* VipGiftPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
VipGiftPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
VipGiftPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// DailyConsumePkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool DailyConsumePkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyConsumePkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyConsumePkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyConsumePkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& DailyConsumePkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* DailyConsumePkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* DailyConsumePkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void DailyConsumePkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int DailyConsumePkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void DailyConsumePkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& DailyConsumePkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* DailyConsumePkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* DailyConsumePkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
DailyConsumePkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
DailyConsumePkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// SumConsumePkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool SumConsumePkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumConsumePkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumConsumePkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumConsumePkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& SumConsumePkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* SumConsumePkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* SumConsumePkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void SumConsumePkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int SumConsumePkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void SumConsumePkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& SumConsumePkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* SumConsumePkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* SumConsumePkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
SumConsumePkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
SumConsumePkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// OnlinePkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool OnlinePkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlinePkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlinePkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlinePkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& OnlinePkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* OnlinePkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* OnlinePkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void OnlinePkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int OnlinePkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void OnlinePkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& OnlinePkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* OnlinePkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* OnlinePkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
OnlinePkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
OnlinePkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// NextDayPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool NextDayPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextDayPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextDayPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextDayPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& NextDayPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* NextDayPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* NextDayPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void NextDayPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// repeated .vmsg.AwardInfo AwardInfo = 2;
inline int NextDayPkgRsp::awardinfo_size() const {
  return awardinfo_.size();
}
inline void NextDayPkgRsp::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::vmsg::AwardInfo& NextDayPkgRsp::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::vmsg::AwardInfo* NextDayPkgRsp::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::vmsg::AwardInfo* NextDayPkgRsp::add_awardinfo() {
  return awardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >&
NextDayPkgRsp::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::AwardInfo >*
NextDayPkgRsp::mutable_awardinfo() {
  return &awardinfo_;
}

// -------------------------------------------------------------------

// CSCouponActStatusItem

// required uint32 Type = 1;
inline bool CSCouponActStatusItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCouponActStatusItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCouponActStatusItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCouponActStatusItem::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSCouponActStatusItem::type() const {
  return type_;
}
inline void CSCouponActStatusItem::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 Status = 2;
inline bool CSCouponActStatusItem::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCouponActStatusItem::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCouponActStatusItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCouponActStatusItem::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSCouponActStatusItem::status() const {
  return status_;
}
inline void CSCouponActStatusItem::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// repeated .vmsg.CSSpring7DayPkgStatus Spring7DayStatus = 3;
inline int CSCouponActStatusItem::spring7daystatus_size() const {
  return spring7daystatus_.size();
}
inline void CSCouponActStatusItem::clear_spring7daystatus() {
  spring7daystatus_.Clear();
}
inline const ::vmsg::CSSpring7DayPkgStatus& CSCouponActStatusItem::spring7daystatus(int index) const {
  return spring7daystatus_.Get(index);
}
inline ::vmsg::CSSpring7DayPkgStatus* CSCouponActStatusItem::mutable_spring7daystatus(int index) {
  return spring7daystatus_.Mutable(index);
}
inline ::vmsg::CSSpring7DayPkgStatus* CSCouponActStatusItem::add_spring7daystatus() {
  return spring7daystatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSSpring7DayPkgStatus >&
CSCouponActStatusItem::spring7daystatus() const {
  return spring7daystatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSSpring7DayPkgStatus >*
CSCouponActStatusItem::mutable_spring7daystatus() {
  return &spring7daystatus_;
}

// optional uint32 StoredManual = 4;
inline bool CSCouponActStatusItem::has_storedmanual() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSCouponActStatusItem::set_has_storedmanual() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSCouponActStatusItem::clear_has_storedmanual() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSCouponActStatusItem::clear_storedmanual() {
  storedmanual_ = 0u;
  clear_has_storedmanual();
}
inline ::google::protobuf::uint32 CSCouponActStatusItem::storedmanual() const {
  return storedmanual_;
}
inline void CSCouponActStatusItem::set_storedmanual(::google::protobuf::uint32 value) {
  set_has_storedmanual();
  storedmanual_ = value;
}

// optional .vmsg.SumChargePkgStatus SumChargeAward = 5;
inline bool CSCouponActStatusItem::has_sumchargeaward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSCouponActStatusItem::set_has_sumchargeaward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSCouponActStatusItem::clear_has_sumchargeaward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSCouponActStatusItem::clear_sumchargeaward() {
  if (sumchargeaward_ != NULL) sumchargeaward_->::vmsg::SumChargePkgStatus::Clear();
  clear_has_sumchargeaward();
}
inline const ::vmsg::SumChargePkgStatus& CSCouponActStatusItem::sumchargeaward() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumchargeaward_ != NULL ? *sumchargeaward_ : *default_instance().sumchargeaward_;
#else
  return sumchargeaward_ != NULL ? *sumchargeaward_ : *default_instance_->sumchargeaward_;
#endif
}
inline ::vmsg::SumChargePkgStatus* CSCouponActStatusItem::mutable_sumchargeaward() {
  set_has_sumchargeaward();
  if (sumchargeaward_ == NULL) sumchargeaward_ = new ::vmsg::SumChargePkgStatus;
  return sumchargeaward_;
}
inline ::vmsg::SumChargePkgStatus* CSCouponActStatusItem::release_sumchargeaward() {
  clear_has_sumchargeaward();
  ::vmsg::SumChargePkgStatus* temp = sumchargeaward_;
  sumchargeaward_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_sumchargeaward(::vmsg::SumChargePkgStatus* sumchargeaward) {
  delete sumchargeaward_;
  sumchargeaward_ = sumchargeaward;
  if (sumchargeaward) {
    set_has_sumchargeaward();
  } else {
    clear_has_sumchargeaward();
  }
}

// optional .vmsg.DailyLoginPkgStatus DailyLoginStatus = 6;
inline bool CSCouponActStatusItem::has_dailyloginstatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSCouponActStatusItem::set_has_dailyloginstatus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSCouponActStatusItem::clear_has_dailyloginstatus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSCouponActStatusItem::clear_dailyloginstatus() {
  if (dailyloginstatus_ != NULL) dailyloginstatus_->::vmsg::DailyLoginPkgStatus::Clear();
  clear_has_dailyloginstatus();
}
inline const ::vmsg::DailyLoginPkgStatus& CSCouponActStatusItem::dailyloginstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailyloginstatus_ != NULL ? *dailyloginstatus_ : *default_instance().dailyloginstatus_;
#else
  return dailyloginstatus_ != NULL ? *dailyloginstatus_ : *default_instance_->dailyloginstatus_;
#endif
}
inline ::vmsg::DailyLoginPkgStatus* CSCouponActStatusItem::mutable_dailyloginstatus() {
  set_has_dailyloginstatus();
  if (dailyloginstatus_ == NULL) dailyloginstatus_ = new ::vmsg::DailyLoginPkgStatus;
  return dailyloginstatus_;
}
inline ::vmsg::DailyLoginPkgStatus* CSCouponActStatusItem::release_dailyloginstatus() {
  clear_has_dailyloginstatus();
  ::vmsg::DailyLoginPkgStatus* temp = dailyloginstatus_;
  dailyloginstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_dailyloginstatus(::vmsg::DailyLoginPkgStatus* dailyloginstatus) {
  delete dailyloginstatus_;
  dailyloginstatus_ = dailyloginstatus;
  if (dailyloginstatus) {
    set_has_dailyloginstatus();
  } else {
    clear_has_dailyloginstatus();
  }
}

// optional .vmsg.DailyChargePkgStatus DailyChargeStatus = 7;
inline bool CSCouponActStatusItem::has_dailychargestatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSCouponActStatusItem::set_has_dailychargestatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSCouponActStatusItem::clear_has_dailychargestatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSCouponActStatusItem::clear_dailychargestatus() {
  if (dailychargestatus_ != NULL) dailychargestatus_->::vmsg::DailyChargePkgStatus::Clear();
  clear_has_dailychargestatus();
}
inline const ::vmsg::DailyChargePkgStatus& CSCouponActStatusItem::dailychargestatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailychargestatus_ != NULL ? *dailychargestatus_ : *default_instance().dailychargestatus_;
#else
  return dailychargestatus_ != NULL ? *dailychargestatus_ : *default_instance_->dailychargestatus_;
#endif
}
inline ::vmsg::DailyChargePkgStatus* CSCouponActStatusItem::mutable_dailychargestatus() {
  set_has_dailychargestatus();
  if (dailychargestatus_ == NULL) dailychargestatus_ = new ::vmsg::DailyChargePkgStatus;
  return dailychargestatus_;
}
inline ::vmsg::DailyChargePkgStatus* CSCouponActStatusItem::release_dailychargestatus() {
  clear_has_dailychargestatus();
  ::vmsg::DailyChargePkgStatus* temp = dailychargestatus_;
  dailychargestatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_dailychargestatus(::vmsg::DailyChargePkgStatus* dailychargestatus) {
  delete dailychargestatus_;
  dailychargestatus_ = dailychargestatus;
  if (dailychargestatus) {
    set_has_dailychargestatus();
  } else {
    clear_has_dailychargestatus();
  }
}

// optional .vmsg.GradeGeekPkgStatus GradeGeekStatus = 8;
inline bool CSCouponActStatusItem::has_gradegeekstatus() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSCouponActStatusItem::set_has_gradegeekstatus() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSCouponActStatusItem::clear_has_gradegeekstatus() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSCouponActStatusItem::clear_gradegeekstatus() {
  if (gradegeekstatus_ != NULL) gradegeekstatus_->::vmsg::GradeGeekPkgStatus::Clear();
  clear_has_gradegeekstatus();
}
inline const ::vmsg::GradeGeekPkgStatus& CSCouponActStatusItem::gradegeekstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gradegeekstatus_ != NULL ? *gradegeekstatus_ : *default_instance().gradegeekstatus_;
#else
  return gradegeekstatus_ != NULL ? *gradegeekstatus_ : *default_instance_->gradegeekstatus_;
#endif
}
inline ::vmsg::GradeGeekPkgStatus* CSCouponActStatusItem::mutable_gradegeekstatus() {
  set_has_gradegeekstatus();
  if (gradegeekstatus_ == NULL) gradegeekstatus_ = new ::vmsg::GradeGeekPkgStatus;
  return gradegeekstatus_;
}
inline ::vmsg::GradeGeekPkgStatus* CSCouponActStatusItem::release_gradegeekstatus() {
  clear_has_gradegeekstatus();
  ::vmsg::GradeGeekPkgStatus* temp = gradegeekstatus_;
  gradegeekstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_gradegeekstatus(::vmsg::GradeGeekPkgStatus* gradegeekstatus) {
  delete gradegeekstatus_;
  gradegeekstatus_ = gradegeekstatus;
  if (gradegeekstatus) {
    set_has_gradegeekstatus();
  } else {
    clear_has_gradegeekstatus();
  }
}

// optional .vmsg.FightGeekPkgStatus FightGeekStatus = 9;
inline bool CSCouponActStatusItem::has_fightgeekstatus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSCouponActStatusItem::set_has_fightgeekstatus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSCouponActStatusItem::clear_has_fightgeekstatus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSCouponActStatusItem::clear_fightgeekstatus() {
  if (fightgeekstatus_ != NULL) fightgeekstatus_->::vmsg::FightGeekPkgStatus::Clear();
  clear_has_fightgeekstatus();
}
inline const ::vmsg::FightGeekPkgStatus& CSCouponActStatusItem::fightgeekstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return fightgeekstatus_ != NULL ? *fightgeekstatus_ : *default_instance().fightgeekstatus_;
#else
  return fightgeekstatus_ != NULL ? *fightgeekstatus_ : *default_instance_->fightgeekstatus_;
#endif
}
inline ::vmsg::FightGeekPkgStatus* CSCouponActStatusItem::mutable_fightgeekstatus() {
  set_has_fightgeekstatus();
  if (fightgeekstatus_ == NULL) fightgeekstatus_ = new ::vmsg::FightGeekPkgStatus;
  return fightgeekstatus_;
}
inline ::vmsg::FightGeekPkgStatus* CSCouponActStatusItem::release_fightgeekstatus() {
  clear_has_fightgeekstatus();
  ::vmsg::FightGeekPkgStatus* temp = fightgeekstatus_;
  fightgeekstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_fightgeekstatus(::vmsg::FightGeekPkgStatus* fightgeekstatus) {
  delete fightgeekstatus_;
  fightgeekstatus_ = fightgeekstatus;
  if (fightgeekstatus) {
    set_has_fightgeekstatus();
  } else {
    clear_has_fightgeekstatus();
  }
}

// optional .vmsg.VipGiftPkgStatus VipGiftPkgStatus = 10;
inline bool CSCouponActStatusItem::has_vipgiftpkgstatus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSCouponActStatusItem::set_has_vipgiftpkgstatus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSCouponActStatusItem::clear_has_vipgiftpkgstatus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSCouponActStatusItem::clear_vipgiftpkgstatus() {
  if (vipgiftpkgstatus_ != NULL) vipgiftpkgstatus_->::vmsg::VipGiftPkgStatus::Clear();
  clear_has_vipgiftpkgstatus();
}
inline const ::vmsg::VipGiftPkgStatus& CSCouponActStatusItem::vipgiftpkgstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return vipgiftpkgstatus_ != NULL ? *vipgiftpkgstatus_ : *default_instance().vipgiftpkgstatus_;
#else
  return vipgiftpkgstatus_ != NULL ? *vipgiftpkgstatus_ : *default_instance_->vipgiftpkgstatus_;
#endif
}
inline ::vmsg::VipGiftPkgStatus* CSCouponActStatusItem::mutable_vipgiftpkgstatus() {
  set_has_vipgiftpkgstatus();
  if (vipgiftpkgstatus_ == NULL) vipgiftpkgstatus_ = new ::vmsg::VipGiftPkgStatus;
  return vipgiftpkgstatus_;
}
inline ::vmsg::VipGiftPkgStatus* CSCouponActStatusItem::release_vipgiftpkgstatus() {
  clear_has_vipgiftpkgstatus();
  ::vmsg::VipGiftPkgStatus* temp = vipgiftpkgstatus_;
  vipgiftpkgstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_vipgiftpkgstatus(::vmsg::VipGiftPkgStatus* vipgiftpkgstatus) {
  delete vipgiftpkgstatus_;
  vipgiftpkgstatus_ = vipgiftpkgstatus;
  if (vipgiftpkgstatus) {
    set_has_vipgiftpkgstatus();
  } else {
    clear_has_vipgiftpkgstatus();
  }
}

// optional .vmsg.DailyConsumePkgStatus DailyConsumePkgStatus = 11;
inline bool CSCouponActStatusItem::has_dailyconsumepkgstatus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSCouponActStatusItem::set_has_dailyconsumepkgstatus() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSCouponActStatusItem::clear_has_dailyconsumepkgstatus() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSCouponActStatusItem::clear_dailyconsumepkgstatus() {
  if (dailyconsumepkgstatus_ != NULL) dailyconsumepkgstatus_->::vmsg::DailyConsumePkgStatus::Clear();
  clear_has_dailyconsumepkgstatus();
}
inline const ::vmsg::DailyConsumePkgStatus& CSCouponActStatusItem::dailyconsumepkgstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailyconsumepkgstatus_ != NULL ? *dailyconsumepkgstatus_ : *default_instance().dailyconsumepkgstatus_;
#else
  return dailyconsumepkgstatus_ != NULL ? *dailyconsumepkgstatus_ : *default_instance_->dailyconsumepkgstatus_;
#endif
}
inline ::vmsg::DailyConsumePkgStatus* CSCouponActStatusItem::mutable_dailyconsumepkgstatus() {
  set_has_dailyconsumepkgstatus();
  if (dailyconsumepkgstatus_ == NULL) dailyconsumepkgstatus_ = new ::vmsg::DailyConsumePkgStatus;
  return dailyconsumepkgstatus_;
}
inline ::vmsg::DailyConsumePkgStatus* CSCouponActStatusItem::release_dailyconsumepkgstatus() {
  clear_has_dailyconsumepkgstatus();
  ::vmsg::DailyConsumePkgStatus* temp = dailyconsumepkgstatus_;
  dailyconsumepkgstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_dailyconsumepkgstatus(::vmsg::DailyConsumePkgStatus* dailyconsumepkgstatus) {
  delete dailyconsumepkgstatus_;
  dailyconsumepkgstatus_ = dailyconsumepkgstatus;
  if (dailyconsumepkgstatus) {
    set_has_dailyconsumepkgstatus();
  } else {
    clear_has_dailyconsumepkgstatus();
  }
}

// optional .vmsg.SumConsumePkgStatus SumConsumePkgStatus = 12;
inline bool CSCouponActStatusItem::has_sumconsumepkgstatus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSCouponActStatusItem::set_has_sumconsumepkgstatus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSCouponActStatusItem::clear_has_sumconsumepkgstatus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSCouponActStatusItem::clear_sumconsumepkgstatus() {
  if (sumconsumepkgstatus_ != NULL) sumconsumepkgstatus_->::vmsg::SumConsumePkgStatus::Clear();
  clear_has_sumconsumepkgstatus();
}
inline const ::vmsg::SumConsumePkgStatus& CSCouponActStatusItem::sumconsumepkgstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumconsumepkgstatus_ != NULL ? *sumconsumepkgstatus_ : *default_instance().sumconsumepkgstatus_;
#else
  return sumconsumepkgstatus_ != NULL ? *sumconsumepkgstatus_ : *default_instance_->sumconsumepkgstatus_;
#endif
}
inline ::vmsg::SumConsumePkgStatus* CSCouponActStatusItem::mutable_sumconsumepkgstatus() {
  set_has_sumconsumepkgstatus();
  if (sumconsumepkgstatus_ == NULL) sumconsumepkgstatus_ = new ::vmsg::SumConsumePkgStatus;
  return sumconsumepkgstatus_;
}
inline ::vmsg::SumConsumePkgStatus* CSCouponActStatusItem::release_sumconsumepkgstatus() {
  clear_has_sumconsumepkgstatus();
  ::vmsg::SumConsumePkgStatus* temp = sumconsumepkgstatus_;
  sumconsumepkgstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_sumconsumepkgstatus(::vmsg::SumConsumePkgStatus* sumconsumepkgstatus) {
  delete sumconsumepkgstatus_;
  sumconsumepkgstatus_ = sumconsumepkgstatus;
  if (sumconsumepkgstatus) {
    set_has_sumconsumepkgstatus();
  } else {
    clear_has_sumconsumepkgstatus();
  }
}

// optional .vmsg.OnlinePkgStatus OnlinePkgStatus = 13;
inline bool CSCouponActStatusItem::has_onlinepkgstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSCouponActStatusItem::set_has_onlinepkgstatus() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSCouponActStatusItem::clear_has_onlinepkgstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSCouponActStatusItem::clear_onlinepkgstatus() {
  if (onlinepkgstatus_ != NULL) onlinepkgstatus_->::vmsg::OnlinePkgStatus::Clear();
  clear_has_onlinepkgstatus();
}
inline const ::vmsg::OnlinePkgStatus& CSCouponActStatusItem::onlinepkgstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return onlinepkgstatus_ != NULL ? *onlinepkgstatus_ : *default_instance().onlinepkgstatus_;
#else
  return onlinepkgstatus_ != NULL ? *onlinepkgstatus_ : *default_instance_->onlinepkgstatus_;
#endif
}
inline ::vmsg::OnlinePkgStatus* CSCouponActStatusItem::mutable_onlinepkgstatus() {
  set_has_onlinepkgstatus();
  if (onlinepkgstatus_ == NULL) onlinepkgstatus_ = new ::vmsg::OnlinePkgStatus;
  return onlinepkgstatus_;
}
inline ::vmsg::OnlinePkgStatus* CSCouponActStatusItem::release_onlinepkgstatus() {
  clear_has_onlinepkgstatus();
  ::vmsg::OnlinePkgStatus* temp = onlinepkgstatus_;
  onlinepkgstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_onlinepkgstatus(::vmsg::OnlinePkgStatus* onlinepkgstatus) {
  delete onlinepkgstatus_;
  onlinepkgstatus_ = onlinepkgstatus;
  if (onlinepkgstatus) {
    set_has_onlinepkgstatus();
  } else {
    clear_has_onlinepkgstatus();
  }
}

// optional .vmsg.NextDayPkgStatus NextDayPkgStatus = 14;
inline bool CSCouponActStatusItem::has_nextdaypkgstatus() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSCouponActStatusItem::set_has_nextdaypkgstatus() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSCouponActStatusItem::clear_has_nextdaypkgstatus() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSCouponActStatusItem::clear_nextdaypkgstatus() {
  if (nextdaypkgstatus_ != NULL) nextdaypkgstatus_->::vmsg::NextDayPkgStatus::Clear();
  clear_has_nextdaypkgstatus();
}
inline const ::vmsg::NextDayPkgStatus& CSCouponActStatusItem::nextdaypkgstatus() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return nextdaypkgstatus_ != NULL ? *nextdaypkgstatus_ : *default_instance().nextdaypkgstatus_;
#else
  return nextdaypkgstatus_ != NULL ? *nextdaypkgstatus_ : *default_instance_->nextdaypkgstatus_;
#endif
}
inline ::vmsg::NextDayPkgStatus* CSCouponActStatusItem::mutable_nextdaypkgstatus() {
  set_has_nextdaypkgstatus();
  if (nextdaypkgstatus_ == NULL) nextdaypkgstatus_ = new ::vmsg::NextDayPkgStatus;
  return nextdaypkgstatus_;
}
inline ::vmsg::NextDayPkgStatus* CSCouponActStatusItem::release_nextdaypkgstatus() {
  clear_has_nextdaypkgstatus();
  ::vmsg::NextDayPkgStatus* temp = nextdaypkgstatus_;
  nextdaypkgstatus_ = NULL;
  return temp;
}
inline void CSCouponActStatusItem::set_allocated_nextdaypkgstatus(::vmsg::NextDayPkgStatus* nextdaypkgstatus) {
  delete nextdaypkgstatus_;
  nextdaypkgstatus_ = nextdaypkgstatus;
  if (nextdaypkgstatus) {
    set_has_nextdaypkgstatus();
  } else {
    clear_has_nextdaypkgstatus();
  }
}

// -------------------------------------------------------------------

// CSClaimSpringPkgRqst

// required uint32 Day = 1;
inline bool CSClaimSpringPkgRqst::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSClaimSpringPkgRqst::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSClaimSpringPkgRqst::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSClaimSpringPkgRqst::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 CSClaimSpringPkgRqst::day() const {
  return day_;
}
inline void CSClaimSpringPkgRqst::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// CSClaimSpringPkgRsp

// required .vmsg.CSBagInfo BagInfo = 1;
inline bool CSClaimSpringPkgRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSClaimSpringPkgRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSClaimSpringPkgRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSClaimSpringPkgRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& CSClaimSpringPkgRsp::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* CSClaimSpringPkgRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* CSClaimSpringPkgRsp::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void CSClaimSpringPkgRsp::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// required uint32 PkgID = 2;
inline bool CSClaimSpringPkgRsp::has_pkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSClaimSpringPkgRsp::set_has_pkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSClaimSpringPkgRsp::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSClaimSpringPkgRsp::clear_pkgid() {
  pkgid_ = 0u;
  clear_has_pkgid();
}
inline ::google::protobuf::uint32 CSClaimSpringPkgRsp::pkgid() const {
  return pkgid_;
}
inline void CSClaimSpringPkgRsp::set_pkgid(::google::protobuf::uint32 value) {
  set_has_pkgid();
  pkgid_ = value;
}

// repeated .vmsg.CSAwardElement AwardLst = 3;
inline int CSClaimSpringPkgRsp::awardlst_size() const {
  return awardlst_.size();
}
inline void CSClaimSpringPkgRsp::clear_awardlst() {
  awardlst_.Clear();
}
inline const ::vmsg::CSAwardElement& CSClaimSpringPkgRsp::awardlst(int index) const {
  return awardlst_.Get(index);
}
inline ::vmsg::CSAwardElement* CSClaimSpringPkgRsp::mutable_awardlst(int index) {
  return awardlst_.Mutable(index);
}
inline ::vmsg::CSAwardElement* CSClaimSpringPkgRsp::add_awardlst() {
  return awardlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSAwardElement >&
CSClaimSpringPkgRsp::awardlst() const {
  return awardlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSAwardElement >*
CSClaimSpringPkgRsp::mutable_awardlst() {
  return &awardlst_;
}

// -------------------------------------------------------------------

// CSQueryAllPkgStatusRsp

// repeated .vmsg.CSCouponActStatusItem AllActs = 1;
inline int CSQueryAllPkgStatusRsp::allacts_size() const {
  return allacts_.size();
}
inline void CSQueryAllPkgStatusRsp::clear_allacts() {
  allacts_.Clear();
}
inline const ::vmsg::CSCouponActStatusItem& CSQueryAllPkgStatusRsp::allacts(int index) const {
  return allacts_.Get(index);
}
inline ::vmsg::CSCouponActStatusItem* CSQueryAllPkgStatusRsp::mutable_allacts(int index) {
  return allacts_.Mutable(index);
}
inline ::vmsg::CSCouponActStatusItem* CSQueryAllPkgStatusRsp::add_allacts() {
  return allacts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >&
CSQueryAllPkgStatusRsp::allacts() const {
  return allacts_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSCouponActStatusItem >*
CSQueryAllPkgStatusRsp::mutable_allacts() {
  return &allacts_;
}

// -------------------------------------------------------------------

// CSCouponRequest

// optional .vmsg.CSClaimCouponRqst Claim_Request = 1;
inline bool CSCouponRequest::has_claim_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCouponRequest::set_has_claim_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCouponRequest::clear_has_claim_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCouponRequest::clear_claim_request() {
  if (claim_request_ != NULL) claim_request_->::vmsg::CSClaimCouponRqst::Clear();
  clear_has_claim_request();
}
inline const ::vmsg::CSClaimCouponRqst& CSCouponRequest::claim_request() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return claim_request_ != NULL ? *claim_request_ : *default_instance().claim_request_;
#else
  return claim_request_ != NULL ? *claim_request_ : *default_instance_->claim_request_;
#endif
}
inline ::vmsg::CSClaimCouponRqst* CSCouponRequest::mutable_claim_request() {
  set_has_claim_request();
  if (claim_request_ == NULL) claim_request_ = new ::vmsg::CSClaimCouponRqst;
  return claim_request_;
}
inline ::vmsg::CSClaimCouponRqst* CSCouponRequest::release_claim_request() {
  clear_has_claim_request();
  ::vmsg::CSClaimCouponRqst* temp = claim_request_;
  claim_request_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_claim_request(::vmsg::CSClaimCouponRqst* claim_request) {
  delete claim_request_;
  claim_request_ = claim_request;
  if (claim_request) {
    set_has_claim_request();
  } else {
    clear_has_claim_request();
  }
}

// optional .vmsg.CSClaimSpringPkgRqst Claim_Spring_Pkg_Rqst = 2;
inline bool CSCouponRequest::has_claim_spring_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCouponRequest::set_has_claim_spring_pkg_rqst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCouponRequest::clear_has_claim_spring_pkg_rqst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCouponRequest::clear_claim_spring_pkg_rqst() {
  if (claim_spring_pkg_rqst_ != NULL) claim_spring_pkg_rqst_->::vmsg::CSClaimSpringPkgRqst::Clear();
  clear_has_claim_spring_pkg_rqst();
}
inline const ::vmsg::CSClaimSpringPkgRqst& CSCouponRequest::claim_spring_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return claim_spring_pkg_rqst_ != NULL ? *claim_spring_pkg_rqst_ : *default_instance().claim_spring_pkg_rqst_;
#else
  return claim_spring_pkg_rqst_ != NULL ? *claim_spring_pkg_rqst_ : *default_instance_->claim_spring_pkg_rqst_;
#endif
}
inline ::vmsg::CSClaimSpringPkgRqst* CSCouponRequest::mutable_claim_spring_pkg_rqst() {
  set_has_claim_spring_pkg_rqst();
  if (claim_spring_pkg_rqst_ == NULL) claim_spring_pkg_rqst_ = new ::vmsg::CSClaimSpringPkgRqst;
  return claim_spring_pkg_rqst_;
}
inline ::vmsg::CSClaimSpringPkgRqst* CSCouponRequest::release_claim_spring_pkg_rqst() {
  clear_has_claim_spring_pkg_rqst();
  ::vmsg::CSClaimSpringPkgRqst* temp = claim_spring_pkg_rqst_;
  claim_spring_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_claim_spring_pkg_rqst(::vmsg::CSClaimSpringPkgRqst* claim_spring_pkg_rqst) {
  delete claim_spring_pkg_rqst_;
  claim_spring_pkg_rqst_ = claim_spring_pkg_rqst;
  if (claim_spring_pkg_rqst) {
    set_has_claim_spring_pkg_rqst();
  } else {
    clear_has_claim_spring_pkg_rqst();
  }
}

// optional .vmsg.SumChargePkgRqst sumcharge_Pkg_Rqst = 3;
inline bool CSCouponRequest::has_sumcharge_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSCouponRequest::set_has_sumcharge_pkg_rqst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSCouponRequest::clear_has_sumcharge_pkg_rqst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSCouponRequest::clear_sumcharge_pkg_rqst() {
  if (sumcharge_pkg_rqst_ != NULL) sumcharge_pkg_rqst_->::vmsg::SumChargePkgRqst::Clear();
  clear_has_sumcharge_pkg_rqst();
}
inline const ::vmsg::SumChargePkgRqst& CSCouponRequest::sumcharge_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumcharge_pkg_rqst_ != NULL ? *sumcharge_pkg_rqst_ : *default_instance().sumcharge_pkg_rqst_;
#else
  return sumcharge_pkg_rqst_ != NULL ? *sumcharge_pkg_rqst_ : *default_instance_->sumcharge_pkg_rqst_;
#endif
}
inline ::vmsg::SumChargePkgRqst* CSCouponRequest::mutable_sumcharge_pkg_rqst() {
  set_has_sumcharge_pkg_rqst();
  if (sumcharge_pkg_rqst_ == NULL) sumcharge_pkg_rqst_ = new ::vmsg::SumChargePkgRqst;
  return sumcharge_pkg_rqst_;
}
inline ::vmsg::SumChargePkgRqst* CSCouponRequest::release_sumcharge_pkg_rqst() {
  clear_has_sumcharge_pkg_rqst();
  ::vmsg::SumChargePkgRqst* temp = sumcharge_pkg_rqst_;
  sumcharge_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_sumcharge_pkg_rqst(::vmsg::SumChargePkgRqst* sumcharge_pkg_rqst) {
  delete sumcharge_pkg_rqst_;
  sumcharge_pkg_rqst_ = sumcharge_pkg_rqst;
  if (sumcharge_pkg_rqst) {
    set_has_sumcharge_pkg_rqst();
  } else {
    clear_has_sumcharge_pkg_rqst();
  }
}

// optional .vmsg.DailyChargePkgRqst DailyCharge_Pkg_Rqst = 4;
inline bool CSCouponRequest::has_dailycharge_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSCouponRequest::set_has_dailycharge_pkg_rqst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSCouponRequest::clear_has_dailycharge_pkg_rqst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSCouponRequest::clear_dailycharge_pkg_rqst() {
  if (dailycharge_pkg_rqst_ != NULL) dailycharge_pkg_rqst_->::vmsg::DailyChargePkgRqst::Clear();
  clear_has_dailycharge_pkg_rqst();
}
inline const ::vmsg::DailyChargePkgRqst& CSCouponRequest::dailycharge_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailycharge_pkg_rqst_ != NULL ? *dailycharge_pkg_rqst_ : *default_instance().dailycharge_pkg_rqst_;
#else
  return dailycharge_pkg_rqst_ != NULL ? *dailycharge_pkg_rqst_ : *default_instance_->dailycharge_pkg_rqst_;
#endif
}
inline ::vmsg::DailyChargePkgRqst* CSCouponRequest::mutable_dailycharge_pkg_rqst() {
  set_has_dailycharge_pkg_rqst();
  if (dailycharge_pkg_rqst_ == NULL) dailycharge_pkg_rqst_ = new ::vmsg::DailyChargePkgRqst;
  return dailycharge_pkg_rqst_;
}
inline ::vmsg::DailyChargePkgRqst* CSCouponRequest::release_dailycharge_pkg_rqst() {
  clear_has_dailycharge_pkg_rqst();
  ::vmsg::DailyChargePkgRqst* temp = dailycharge_pkg_rqst_;
  dailycharge_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_dailycharge_pkg_rqst(::vmsg::DailyChargePkgRqst* dailycharge_pkg_rqst) {
  delete dailycharge_pkg_rqst_;
  dailycharge_pkg_rqst_ = dailycharge_pkg_rqst;
  if (dailycharge_pkg_rqst) {
    set_has_dailycharge_pkg_rqst();
  } else {
    clear_has_dailycharge_pkg_rqst();
  }
}

// optional .vmsg.GradeGeekPkgRqst GradeGeek_Pkg_Rqst = 5;
inline bool CSCouponRequest::has_gradegeek_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSCouponRequest::set_has_gradegeek_pkg_rqst() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSCouponRequest::clear_has_gradegeek_pkg_rqst() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSCouponRequest::clear_gradegeek_pkg_rqst() {
  if (gradegeek_pkg_rqst_ != NULL) gradegeek_pkg_rqst_->::vmsg::GradeGeekPkgRqst::Clear();
  clear_has_gradegeek_pkg_rqst();
}
inline const ::vmsg::GradeGeekPkgRqst& CSCouponRequest::gradegeek_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gradegeek_pkg_rqst_ != NULL ? *gradegeek_pkg_rqst_ : *default_instance().gradegeek_pkg_rqst_;
#else
  return gradegeek_pkg_rqst_ != NULL ? *gradegeek_pkg_rqst_ : *default_instance_->gradegeek_pkg_rqst_;
#endif
}
inline ::vmsg::GradeGeekPkgRqst* CSCouponRequest::mutable_gradegeek_pkg_rqst() {
  set_has_gradegeek_pkg_rqst();
  if (gradegeek_pkg_rqst_ == NULL) gradegeek_pkg_rqst_ = new ::vmsg::GradeGeekPkgRqst;
  return gradegeek_pkg_rqst_;
}
inline ::vmsg::GradeGeekPkgRqst* CSCouponRequest::release_gradegeek_pkg_rqst() {
  clear_has_gradegeek_pkg_rqst();
  ::vmsg::GradeGeekPkgRqst* temp = gradegeek_pkg_rqst_;
  gradegeek_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_gradegeek_pkg_rqst(::vmsg::GradeGeekPkgRqst* gradegeek_pkg_rqst) {
  delete gradegeek_pkg_rqst_;
  gradegeek_pkg_rqst_ = gradegeek_pkg_rqst;
  if (gradegeek_pkg_rqst) {
    set_has_gradegeek_pkg_rqst();
  } else {
    clear_has_gradegeek_pkg_rqst();
  }
}

// optional .vmsg.FightGeekPkgRqst FightGeek_Pkg_Rqst = 6;
inline bool CSCouponRequest::has_fightgeek_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSCouponRequest::set_has_fightgeek_pkg_rqst() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSCouponRequest::clear_has_fightgeek_pkg_rqst() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSCouponRequest::clear_fightgeek_pkg_rqst() {
  if (fightgeek_pkg_rqst_ != NULL) fightgeek_pkg_rqst_->::vmsg::FightGeekPkgRqst::Clear();
  clear_has_fightgeek_pkg_rqst();
}
inline const ::vmsg::FightGeekPkgRqst& CSCouponRequest::fightgeek_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return fightgeek_pkg_rqst_ != NULL ? *fightgeek_pkg_rqst_ : *default_instance().fightgeek_pkg_rqst_;
#else
  return fightgeek_pkg_rqst_ != NULL ? *fightgeek_pkg_rqst_ : *default_instance_->fightgeek_pkg_rqst_;
#endif
}
inline ::vmsg::FightGeekPkgRqst* CSCouponRequest::mutable_fightgeek_pkg_rqst() {
  set_has_fightgeek_pkg_rqst();
  if (fightgeek_pkg_rqst_ == NULL) fightgeek_pkg_rqst_ = new ::vmsg::FightGeekPkgRqst;
  return fightgeek_pkg_rqst_;
}
inline ::vmsg::FightGeekPkgRqst* CSCouponRequest::release_fightgeek_pkg_rqst() {
  clear_has_fightgeek_pkg_rqst();
  ::vmsg::FightGeekPkgRqst* temp = fightgeek_pkg_rqst_;
  fightgeek_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_fightgeek_pkg_rqst(::vmsg::FightGeekPkgRqst* fightgeek_pkg_rqst) {
  delete fightgeek_pkg_rqst_;
  fightgeek_pkg_rqst_ = fightgeek_pkg_rqst;
  if (fightgeek_pkg_rqst) {
    set_has_fightgeek_pkg_rqst();
  } else {
    clear_has_fightgeek_pkg_rqst();
  }
}

// optional .vmsg.DailyLoginPkgRqst DailyLogin_Pkg_Rqst = 7;
inline bool CSCouponRequest::has_dailylogin_pkg_rqst() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSCouponRequest::set_has_dailylogin_pkg_rqst() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSCouponRequest::clear_has_dailylogin_pkg_rqst() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSCouponRequest::clear_dailylogin_pkg_rqst() {
  if (dailylogin_pkg_rqst_ != NULL) dailylogin_pkg_rqst_->::vmsg::DailyLoginPkgRqst::Clear();
  clear_has_dailylogin_pkg_rqst();
}
inline const ::vmsg::DailyLoginPkgRqst& CSCouponRequest::dailylogin_pkg_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailylogin_pkg_rqst_ != NULL ? *dailylogin_pkg_rqst_ : *default_instance().dailylogin_pkg_rqst_;
#else
  return dailylogin_pkg_rqst_ != NULL ? *dailylogin_pkg_rqst_ : *default_instance_->dailylogin_pkg_rqst_;
#endif
}
inline ::vmsg::DailyLoginPkgRqst* CSCouponRequest::mutable_dailylogin_pkg_rqst() {
  set_has_dailylogin_pkg_rqst();
  if (dailylogin_pkg_rqst_ == NULL) dailylogin_pkg_rqst_ = new ::vmsg::DailyLoginPkgRqst;
  return dailylogin_pkg_rqst_;
}
inline ::vmsg::DailyLoginPkgRqst* CSCouponRequest::release_dailylogin_pkg_rqst() {
  clear_has_dailylogin_pkg_rqst();
  ::vmsg::DailyLoginPkgRqst* temp = dailylogin_pkg_rqst_;
  dailylogin_pkg_rqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_dailylogin_pkg_rqst(::vmsg::DailyLoginPkgRqst* dailylogin_pkg_rqst) {
  delete dailylogin_pkg_rqst_;
  dailylogin_pkg_rqst_ = dailylogin_pkg_rqst;
  if (dailylogin_pkg_rqst) {
    set_has_dailylogin_pkg_rqst();
  } else {
    clear_has_dailylogin_pkg_rqst();
  }
}

// optional .vmsg.VipGiftPkgRqst VipGiftPkgRqst = 8;
inline bool CSCouponRequest::has_vipgiftpkgrqst() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSCouponRequest::set_has_vipgiftpkgrqst() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSCouponRequest::clear_has_vipgiftpkgrqst() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSCouponRequest::clear_vipgiftpkgrqst() {
  if (vipgiftpkgrqst_ != NULL) vipgiftpkgrqst_->::vmsg::VipGiftPkgRqst::Clear();
  clear_has_vipgiftpkgrqst();
}
inline const ::vmsg::VipGiftPkgRqst& CSCouponRequest::vipgiftpkgrqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return vipgiftpkgrqst_ != NULL ? *vipgiftpkgrqst_ : *default_instance().vipgiftpkgrqst_;
#else
  return vipgiftpkgrqst_ != NULL ? *vipgiftpkgrqst_ : *default_instance_->vipgiftpkgrqst_;
#endif
}
inline ::vmsg::VipGiftPkgRqst* CSCouponRequest::mutable_vipgiftpkgrqst() {
  set_has_vipgiftpkgrqst();
  if (vipgiftpkgrqst_ == NULL) vipgiftpkgrqst_ = new ::vmsg::VipGiftPkgRqst;
  return vipgiftpkgrqst_;
}
inline ::vmsg::VipGiftPkgRqst* CSCouponRequest::release_vipgiftpkgrqst() {
  clear_has_vipgiftpkgrqst();
  ::vmsg::VipGiftPkgRqst* temp = vipgiftpkgrqst_;
  vipgiftpkgrqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_vipgiftpkgrqst(::vmsg::VipGiftPkgRqst* vipgiftpkgrqst) {
  delete vipgiftpkgrqst_;
  vipgiftpkgrqst_ = vipgiftpkgrqst;
  if (vipgiftpkgrqst) {
    set_has_vipgiftpkgrqst();
  } else {
    clear_has_vipgiftpkgrqst();
  }
}

// optional .vmsg.DailyConsumePkgRqst DailyConsumePkgRqst = 9;
inline bool CSCouponRequest::has_dailyconsumepkgrqst() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSCouponRequest::set_has_dailyconsumepkgrqst() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSCouponRequest::clear_has_dailyconsumepkgrqst() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSCouponRequest::clear_dailyconsumepkgrqst() {
  if (dailyconsumepkgrqst_ != NULL) dailyconsumepkgrqst_->::vmsg::DailyConsumePkgRqst::Clear();
  clear_has_dailyconsumepkgrqst();
}
inline const ::vmsg::DailyConsumePkgRqst& CSCouponRequest::dailyconsumepkgrqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailyconsumepkgrqst_ != NULL ? *dailyconsumepkgrqst_ : *default_instance().dailyconsumepkgrqst_;
#else
  return dailyconsumepkgrqst_ != NULL ? *dailyconsumepkgrqst_ : *default_instance_->dailyconsumepkgrqst_;
#endif
}
inline ::vmsg::DailyConsumePkgRqst* CSCouponRequest::mutable_dailyconsumepkgrqst() {
  set_has_dailyconsumepkgrqst();
  if (dailyconsumepkgrqst_ == NULL) dailyconsumepkgrqst_ = new ::vmsg::DailyConsumePkgRqst;
  return dailyconsumepkgrqst_;
}
inline ::vmsg::DailyConsumePkgRqst* CSCouponRequest::release_dailyconsumepkgrqst() {
  clear_has_dailyconsumepkgrqst();
  ::vmsg::DailyConsumePkgRqst* temp = dailyconsumepkgrqst_;
  dailyconsumepkgrqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_dailyconsumepkgrqst(::vmsg::DailyConsumePkgRqst* dailyconsumepkgrqst) {
  delete dailyconsumepkgrqst_;
  dailyconsumepkgrqst_ = dailyconsumepkgrqst;
  if (dailyconsumepkgrqst) {
    set_has_dailyconsumepkgrqst();
  } else {
    clear_has_dailyconsumepkgrqst();
  }
}

// optional .vmsg.SumConsumePkgRqst SumConsumePkgRqst = 10;
inline bool CSCouponRequest::has_sumconsumepkgrqst() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSCouponRequest::set_has_sumconsumepkgrqst() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSCouponRequest::clear_has_sumconsumepkgrqst() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSCouponRequest::clear_sumconsumepkgrqst() {
  if (sumconsumepkgrqst_ != NULL) sumconsumepkgrqst_->::vmsg::SumConsumePkgRqst::Clear();
  clear_has_sumconsumepkgrqst();
}
inline const ::vmsg::SumConsumePkgRqst& CSCouponRequest::sumconsumepkgrqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumconsumepkgrqst_ != NULL ? *sumconsumepkgrqst_ : *default_instance().sumconsumepkgrqst_;
#else
  return sumconsumepkgrqst_ != NULL ? *sumconsumepkgrqst_ : *default_instance_->sumconsumepkgrqst_;
#endif
}
inline ::vmsg::SumConsumePkgRqst* CSCouponRequest::mutable_sumconsumepkgrqst() {
  set_has_sumconsumepkgrqst();
  if (sumconsumepkgrqst_ == NULL) sumconsumepkgrqst_ = new ::vmsg::SumConsumePkgRqst;
  return sumconsumepkgrqst_;
}
inline ::vmsg::SumConsumePkgRqst* CSCouponRequest::release_sumconsumepkgrqst() {
  clear_has_sumconsumepkgrqst();
  ::vmsg::SumConsumePkgRqst* temp = sumconsumepkgrqst_;
  sumconsumepkgrqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_sumconsumepkgrqst(::vmsg::SumConsumePkgRqst* sumconsumepkgrqst) {
  delete sumconsumepkgrqst_;
  sumconsumepkgrqst_ = sumconsumepkgrqst;
  if (sumconsumepkgrqst) {
    set_has_sumconsumepkgrqst();
  } else {
    clear_has_sumconsumepkgrqst();
  }
}

// optional .vmsg.OnlinePkgRqst OnlinePkgRqst = 11;
inline bool CSCouponRequest::has_onlinepkgrqst() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSCouponRequest::set_has_onlinepkgrqst() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSCouponRequest::clear_has_onlinepkgrqst() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSCouponRequest::clear_onlinepkgrqst() {
  if (onlinepkgrqst_ != NULL) onlinepkgrqst_->::vmsg::OnlinePkgRqst::Clear();
  clear_has_onlinepkgrqst();
}
inline const ::vmsg::OnlinePkgRqst& CSCouponRequest::onlinepkgrqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return onlinepkgrqst_ != NULL ? *onlinepkgrqst_ : *default_instance().onlinepkgrqst_;
#else
  return onlinepkgrqst_ != NULL ? *onlinepkgrqst_ : *default_instance_->onlinepkgrqst_;
#endif
}
inline ::vmsg::OnlinePkgRqst* CSCouponRequest::mutable_onlinepkgrqst() {
  set_has_onlinepkgrqst();
  if (onlinepkgrqst_ == NULL) onlinepkgrqst_ = new ::vmsg::OnlinePkgRqst;
  return onlinepkgrqst_;
}
inline ::vmsg::OnlinePkgRqst* CSCouponRequest::release_onlinepkgrqst() {
  clear_has_onlinepkgrqst();
  ::vmsg::OnlinePkgRqst* temp = onlinepkgrqst_;
  onlinepkgrqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_onlinepkgrqst(::vmsg::OnlinePkgRqst* onlinepkgrqst) {
  delete onlinepkgrqst_;
  onlinepkgrqst_ = onlinepkgrqst;
  if (onlinepkgrqst) {
    set_has_onlinepkgrqst();
  } else {
    clear_has_onlinepkgrqst();
  }
}

// optional .vmsg.NextDayPkgRqst NextDayPkgRqst = 12;
inline bool CSCouponRequest::has_nextdaypkgrqst() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSCouponRequest::set_has_nextdaypkgrqst() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSCouponRequest::clear_has_nextdaypkgrqst() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSCouponRequest::clear_nextdaypkgrqst() {
  if (nextdaypkgrqst_ != NULL) nextdaypkgrqst_->::vmsg::NextDayPkgRqst::Clear();
  clear_has_nextdaypkgrqst();
}
inline const ::vmsg::NextDayPkgRqst& CSCouponRequest::nextdaypkgrqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return nextdaypkgrqst_ != NULL ? *nextdaypkgrqst_ : *default_instance().nextdaypkgrqst_;
#else
  return nextdaypkgrqst_ != NULL ? *nextdaypkgrqst_ : *default_instance_->nextdaypkgrqst_;
#endif
}
inline ::vmsg::NextDayPkgRqst* CSCouponRequest::mutable_nextdaypkgrqst() {
  set_has_nextdaypkgrqst();
  if (nextdaypkgrqst_ == NULL) nextdaypkgrqst_ = new ::vmsg::NextDayPkgRqst;
  return nextdaypkgrqst_;
}
inline ::vmsg::NextDayPkgRqst* CSCouponRequest::release_nextdaypkgrqst() {
  clear_has_nextdaypkgrqst();
  ::vmsg::NextDayPkgRqst* temp = nextdaypkgrqst_;
  nextdaypkgrqst_ = NULL;
  return temp;
}
inline void CSCouponRequest::set_allocated_nextdaypkgrqst(::vmsg::NextDayPkgRqst* nextdaypkgrqst) {
  delete nextdaypkgrqst_;
  nextdaypkgrqst_ = nextdaypkgrqst;
  if (nextdaypkgrqst) {
    set_has_nextdaypkgrqst();
  } else {
    clear_has_nextdaypkgrqst();
  }
}

// -------------------------------------------------------------------

// CSCouponRespond

// optional .vmsg.CSClaimCouponRsp Claim_Response = 1;
inline bool CSCouponRespond::has_claim_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCouponRespond::set_has_claim_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCouponRespond::clear_has_claim_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCouponRespond::clear_claim_response() {
  if (claim_response_ != NULL) claim_response_->::vmsg::CSClaimCouponRsp::Clear();
  clear_has_claim_response();
}
inline const ::vmsg::CSClaimCouponRsp& CSCouponRespond::claim_response() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return claim_response_ != NULL ? *claim_response_ : *default_instance().claim_response_;
#else
  return claim_response_ != NULL ? *claim_response_ : *default_instance_->claim_response_;
#endif
}
inline ::vmsg::CSClaimCouponRsp* CSCouponRespond::mutable_claim_response() {
  set_has_claim_response();
  if (claim_response_ == NULL) claim_response_ = new ::vmsg::CSClaimCouponRsp;
  return claim_response_;
}
inline ::vmsg::CSClaimCouponRsp* CSCouponRespond::release_claim_response() {
  clear_has_claim_response();
  ::vmsg::CSClaimCouponRsp* temp = claim_response_;
  claim_response_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_claim_response(::vmsg::CSClaimCouponRsp* claim_response) {
  delete claim_response_;
  claim_response_ = claim_response;
  if (claim_response) {
    set_has_claim_response();
  } else {
    clear_has_claim_response();
  }
}

// optional .vmsg.CSClaimFirstChargePkgRsp Claim_First_Charge_Response = 2;
inline bool CSCouponRespond::has_claim_first_charge_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCouponRespond::set_has_claim_first_charge_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCouponRespond::clear_has_claim_first_charge_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCouponRespond::clear_claim_first_charge_response() {
  if (claim_first_charge_response_ != NULL) claim_first_charge_response_->::vmsg::CSClaimFirstChargePkgRsp::Clear();
  clear_has_claim_first_charge_response();
}
inline const ::vmsg::CSClaimFirstChargePkgRsp& CSCouponRespond::claim_first_charge_response() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return claim_first_charge_response_ != NULL ? *claim_first_charge_response_ : *default_instance().claim_first_charge_response_;
#else
  return claim_first_charge_response_ != NULL ? *claim_first_charge_response_ : *default_instance_->claim_first_charge_response_;
#endif
}
inline ::vmsg::CSClaimFirstChargePkgRsp* CSCouponRespond::mutable_claim_first_charge_response() {
  set_has_claim_first_charge_response();
  if (claim_first_charge_response_ == NULL) claim_first_charge_response_ = new ::vmsg::CSClaimFirstChargePkgRsp;
  return claim_first_charge_response_;
}
inline ::vmsg::CSClaimFirstChargePkgRsp* CSCouponRespond::release_claim_first_charge_response() {
  clear_has_claim_first_charge_response();
  ::vmsg::CSClaimFirstChargePkgRsp* temp = claim_first_charge_response_;
  claim_first_charge_response_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_claim_first_charge_response(::vmsg::CSClaimFirstChargePkgRsp* claim_first_charge_response) {
  delete claim_first_charge_response_;
  claim_first_charge_response_ = claim_first_charge_response;
  if (claim_first_charge_response) {
    set_has_claim_first_charge_response();
  } else {
    clear_has_claim_first_charge_response();
  }
}

// optional .vmsg.CSQueryAllPkgStatusRsp All_Pkg_Status = 3;
inline bool CSCouponRespond::has_all_pkg_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSCouponRespond::set_has_all_pkg_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSCouponRespond::clear_has_all_pkg_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSCouponRespond::clear_all_pkg_status() {
  if (all_pkg_status_ != NULL) all_pkg_status_->::vmsg::CSQueryAllPkgStatusRsp::Clear();
  clear_has_all_pkg_status();
}
inline const ::vmsg::CSQueryAllPkgStatusRsp& CSCouponRespond::all_pkg_status() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return all_pkg_status_ != NULL ? *all_pkg_status_ : *default_instance().all_pkg_status_;
#else
  return all_pkg_status_ != NULL ? *all_pkg_status_ : *default_instance_->all_pkg_status_;
#endif
}
inline ::vmsg::CSQueryAllPkgStatusRsp* CSCouponRespond::mutable_all_pkg_status() {
  set_has_all_pkg_status();
  if (all_pkg_status_ == NULL) all_pkg_status_ = new ::vmsg::CSQueryAllPkgStatusRsp;
  return all_pkg_status_;
}
inline ::vmsg::CSQueryAllPkgStatusRsp* CSCouponRespond::release_all_pkg_status() {
  clear_has_all_pkg_status();
  ::vmsg::CSQueryAllPkgStatusRsp* temp = all_pkg_status_;
  all_pkg_status_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_all_pkg_status(::vmsg::CSQueryAllPkgStatusRsp* all_pkg_status) {
  delete all_pkg_status_;
  all_pkg_status_ = all_pkg_status;
  if (all_pkg_status) {
    set_has_all_pkg_status();
  } else {
    clear_has_all_pkg_status();
  }
}

// optional .vmsg.CSClaimSpringPkgRsp ClaimSpringPkg_Rsp = 4;
inline bool CSCouponRespond::has_claimspringpkg_rsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSCouponRespond::set_has_claimspringpkg_rsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSCouponRespond::clear_has_claimspringpkg_rsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSCouponRespond::clear_claimspringpkg_rsp() {
  if (claimspringpkg_rsp_ != NULL) claimspringpkg_rsp_->::vmsg::CSClaimSpringPkgRsp::Clear();
  clear_has_claimspringpkg_rsp();
}
inline const ::vmsg::CSClaimSpringPkgRsp& CSCouponRespond::claimspringpkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return claimspringpkg_rsp_ != NULL ? *claimspringpkg_rsp_ : *default_instance().claimspringpkg_rsp_;
#else
  return claimspringpkg_rsp_ != NULL ? *claimspringpkg_rsp_ : *default_instance_->claimspringpkg_rsp_;
#endif
}
inline ::vmsg::CSClaimSpringPkgRsp* CSCouponRespond::mutable_claimspringpkg_rsp() {
  set_has_claimspringpkg_rsp();
  if (claimspringpkg_rsp_ == NULL) claimspringpkg_rsp_ = new ::vmsg::CSClaimSpringPkgRsp;
  return claimspringpkg_rsp_;
}
inline ::vmsg::CSClaimSpringPkgRsp* CSCouponRespond::release_claimspringpkg_rsp() {
  clear_has_claimspringpkg_rsp();
  ::vmsg::CSClaimSpringPkgRsp* temp = claimspringpkg_rsp_;
  claimspringpkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_claimspringpkg_rsp(::vmsg::CSClaimSpringPkgRsp* claimspringpkg_rsp) {
  delete claimspringpkg_rsp_;
  claimspringpkg_rsp_ = claimspringpkg_rsp;
  if (claimspringpkg_rsp) {
    set_has_claimspringpkg_rsp();
  } else {
    clear_has_claimspringpkg_rsp();
  }
}

// optional .vmsg.SumChargePkgPkgRsp Sumcharge_Pkg_Rsp = 5;
inline bool CSCouponRespond::has_sumcharge_pkg_rsp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSCouponRespond::set_has_sumcharge_pkg_rsp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSCouponRespond::clear_has_sumcharge_pkg_rsp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSCouponRespond::clear_sumcharge_pkg_rsp() {
  if (sumcharge_pkg_rsp_ != NULL) sumcharge_pkg_rsp_->::vmsg::SumChargePkgPkgRsp::Clear();
  clear_has_sumcharge_pkg_rsp();
}
inline const ::vmsg::SumChargePkgPkgRsp& CSCouponRespond::sumcharge_pkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumcharge_pkg_rsp_ != NULL ? *sumcharge_pkg_rsp_ : *default_instance().sumcharge_pkg_rsp_;
#else
  return sumcharge_pkg_rsp_ != NULL ? *sumcharge_pkg_rsp_ : *default_instance_->sumcharge_pkg_rsp_;
#endif
}
inline ::vmsg::SumChargePkgPkgRsp* CSCouponRespond::mutable_sumcharge_pkg_rsp() {
  set_has_sumcharge_pkg_rsp();
  if (sumcharge_pkg_rsp_ == NULL) sumcharge_pkg_rsp_ = new ::vmsg::SumChargePkgPkgRsp;
  return sumcharge_pkg_rsp_;
}
inline ::vmsg::SumChargePkgPkgRsp* CSCouponRespond::release_sumcharge_pkg_rsp() {
  clear_has_sumcharge_pkg_rsp();
  ::vmsg::SumChargePkgPkgRsp* temp = sumcharge_pkg_rsp_;
  sumcharge_pkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_sumcharge_pkg_rsp(::vmsg::SumChargePkgPkgRsp* sumcharge_pkg_rsp) {
  delete sumcharge_pkg_rsp_;
  sumcharge_pkg_rsp_ = sumcharge_pkg_rsp;
  if (sumcharge_pkg_rsp) {
    set_has_sumcharge_pkg_rsp();
  } else {
    clear_has_sumcharge_pkg_rsp();
  }
}

// optional .vmsg.DailyChargePkgRsp DailyCharge_Pkg_Rsp = 6;
inline bool CSCouponRespond::has_dailycharge_pkg_rsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSCouponRespond::set_has_dailycharge_pkg_rsp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSCouponRespond::clear_has_dailycharge_pkg_rsp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSCouponRespond::clear_dailycharge_pkg_rsp() {
  if (dailycharge_pkg_rsp_ != NULL) dailycharge_pkg_rsp_->::vmsg::DailyChargePkgRsp::Clear();
  clear_has_dailycharge_pkg_rsp();
}
inline const ::vmsg::DailyChargePkgRsp& CSCouponRespond::dailycharge_pkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailycharge_pkg_rsp_ != NULL ? *dailycharge_pkg_rsp_ : *default_instance().dailycharge_pkg_rsp_;
#else
  return dailycharge_pkg_rsp_ != NULL ? *dailycharge_pkg_rsp_ : *default_instance_->dailycharge_pkg_rsp_;
#endif
}
inline ::vmsg::DailyChargePkgRsp* CSCouponRespond::mutable_dailycharge_pkg_rsp() {
  set_has_dailycharge_pkg_rsp();
  if (dailycharge_pkg_rsp_ == NULL) dailycharge_pkg_rsp_ = new ::vmsg::DailyChargePkgRsp;
  return dailycharge_pkg_rsp_;
}
inline ::vmsg::DailyChargePkgRsp* CSCouponRespond::release_dailycharge_pkg_rsp() {
  clear_has_dailycharge_pkg_rsp();
  ::vmsg::DailyChargePkgRsp* temp = dailycharge_pkg_rsp_;
  dailycharge_pkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_dailycharge_pkg_rsp(::vmsg::DailyChargePkgRsp* dailycharge_pkg_rsp) {
  delete dailycharge_pkg_rsp_;
  dailycharge_pkg_rsp_ = dailycharge_pkg_rsp;
  if (dailycharge_pkg_rsp) {
    set_has_dailycharge_pkg_rsp();
  } else {
    clear_has_dailycharge_pkg_rsp();
  }
}

// optional .vmsg.DailyLoginPkgRsp DailyLogin_Pkg_Rsp = 7;
inline bool CSCouponRespond::has_dailylogin_pkg_rsp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSCouponRespond::set_has_dailylogin_pkg_rsp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSCouponRespond::clear_has_dailylogin_pkg_rsp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSCouponRespond::clear_dailylogin_pkg_rsp() {
  if (dailylogin_pkg_rsp_ != NULL) dailylogin_pkg_rsp_->::vmsg::DailyLoginPkgRsp::Clear();
  clear_has_dailylogin_pkg_rsp();
}
inline const ::vmsg::DailyLoginPkgRsp& CSCouponRespond::dailylogin_pkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailylogin_pkg_rsp_ != NULL ? *dailylogin_pkg_rsp_ : *default_instance().dailylogin_pkg_rsp_;
#else
  return dailylogin_pkg_rsp_ != NULL ? *dailylogin_pkg_rsp_ : *default_instance_->dailylogin_pkg_rsp_;
#endif
}
inline ::vmsg::DailyLoginPkgRsp* CSCouponRespond::mutable_dailylogin_pkg_rsp() {
  set_has_dailylogin_pkg_rsp();
  if (dailylogin_pkg_rsp_ == NULL) dailylogin_pkg_rsp_ = new ::vmsg::DailyLoginPkgRsp;
  return dailylogin_pkg_rsp_;
}
inline ::vmsg::DailyLoginPkgRsp* CSCouponRespond::release_dailylogin_pkg_rsp() {
  clear_has_dailylogin_pkg_rsp();
  ::vmsg::DailyLoginPkgRsp* temp = dailylogin_pkg_rsp_;
  dailylogin_pkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_dailylogin_pkg_rsp(::vmsg::DailyLoginPkgRsp* dailylogin_pkg_rsp) {
  delete dailylogin_pkg_rsp_;
  dailylogin_pkg_rsp_ = dailylogin_pkg_rsp;
  if (dailylogin_pkg_rsp) {
    set_has_dailylogin_pkg_rsp();
  } else {
    clear_has_dailylogin_pkg_rsp();
  }
}

// optional .vmsg.GradeGeekPkgRsp GradeGeek_Pkg_Rsp = 8;
inline bool CSCouponRespond::has_gradegeek_pkg_rsp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSCouponRespond::set_has_gradegeek_pkg_rsp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSCouponRespond::clear_has_gradegeek_pkg_rsp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSCouponRespond::clear_gradegeek_pkg_rsp() {
  if (gradegeek_pkg_rsp_ != NULL) gradegeek_pkg_rsp_->::vmsg::GradeGeekPkgRsp::Clear();
  clear_has_gradegeek_pkg_rsp();
}
inline const ::vmsg::GradeGeekPkgRsp& CSCouponRespond::gradegeek_pkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gradegeek_pkg_rsp_ != NULL ? *gradegeek_pkg_rsp_ : *default_instance().gradegeek_pkg_rsp_;
#else
  return gradegeek_pkg_rsp_ != NULL ? *gradegeek_pkg_rsp_ : *default_instance_->gradegeek_pkg_rsp_;
#endif
}
inline ::vmsg::GradeGeekPkgRsp* CSCouponRespond::mutable_gradegeek_pkg_rsp() {
  set_has_gradegeek_pkg_rsp();
  if (gradegeek_pkg_rsp_ == NULL) gradegeek_pkg_rsp_ = new ::vmsg::GradeGeekPkgRsp;
  return gradegeek_pkg_rsp_;
}
inline ::vmsg::GradeGeekPkgRsp* CSCouponRespond::release_gradegeek_pkg_rsp() {
  clear_has_gradegeek_pkg_rsp();
  ::vmsg::GradeGeekPkgRsp* temp = gradegeek_pkg_rsp_;
  gradegeek_pkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_gradegeek_pkg_rsp(::vmsg::GradeGeekPkgRsp* gradegeek_pkg_rsp) {
  delete gradegeek_pkg_rsp_;
  gradegeek_pkg_rsp_ = gradegeek_pkg_rsp;
  if (gradegeek_pkg_rsp) {
    set_has_gradegeek_pkg_rsp();
  } else {
    clear_has_gradegeek_pkg_rsp();
  }
}

// optional .vmsg.FightGeekPkgRsp FightGeek_Pkg_Rsp = 9;
inline bool CSCouponRespond::has_fightgeek_pkg_rsp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSCouponRespond::set_has_fightgeek_pkg_rsp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSCouponRespond::clear_has_fightgeek_pkg_rsp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSCouponRespond::clear_fightgeek_pkg_rsp() {
  if (fightgeek_pkg_rsp_ != NULL) fightgeek_pkg_rsp_->::vmsg::FightGeekPkgRsp::Clear();
  clear_has_fightgeek_pkg_rsp();
}
inline const ::vmsg::FightGeekPkgRsp& CSCouponRespond::fightgeek_pkg_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return fightgeek_pkg_rsp_ != NULL ? *fightgeek_pkg_rsp_ : *default_instance().fightgeek_pkg_rsp_;
#else
  return fightgeek_pkg_rsp_ != NULL ? *fightgeek_pkg_rsp_ : *default_instance_->fightgeek_pkg_rsp_;
#endif
}
inline ::vmsg::FightGeekPkgRsp* CSCouponRespond::mutable_fightgeek_pkg_rsp() {
  set_has_fightgeek_pkg_rsp();
  if (fightgeek_pkg_rsp_ == NULL) fightgeek_pkg_rsp_ = new ::vmsg::FightGeekPkgRsp;
  return fightgeek_pkg_rsp_;
}
inline ::vmsg::FightGeekPkgRsp* CSCouponRespond::release_fightgeek_pkg_rsp() {
  clear_has_fightgeek_pkg_rsp();
  ::vmsg::FightGeekPkgRsp* temp = fightgeek_pkg_rsp_;
  fightgeek_pkg_rsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_fightgeek_pkg_rsp(::vmsg::FightGeekPkgRsp* fightgeek_pkg_rsp) {
  delete fightgeek_pkg_rsp_;
  fightgeek_pkg_rsp_ = fightgeek_pkg_rsp;
  if (fightgeek_pkg_rsp) {
    set_has_fightgeek_pkg_rsp();
  } else {
    clear_has_fightgeek_pkg_rsp();
  }
}

// optional .vmsg.VipGiftPkgRsp VipGiftPkgRsp = 10;
inline bool CSCouponRespond::has_vipgiftpkgrsp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSCouponRespond::set_has_vipgiftpkgrsp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSCouponRespond::clear_has_vipgiftpkgrsp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSCouponRespond::clear_vipgiftpkgrsp() {
  if (vipgiftpkgrsp_ != NULL) vipgiftpkgrsp_->::vmsg::VipGiftPkgRsp::Clear();
  clear_has_vipgiftpkgrsp();
}
inline const ::vmsg::VipGiftPkgRsp& CSCouponRespond::vipgiftpkgrsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return vipgiftpkgrsp_ != NULL ? *vipgiftpkgrsp_ : *default_instance().vipgiftpkgrsp_;
#else
  return vipgiftpkgrsp_ != NULL ? *vipgiftpkgrsp_ : *default_instance_->vipgiftpkgrsp_;
#endif
}
inline ::vmsg::VipGiftPkgRsp* CSCouponRespond::mutable_vipgiftpkgrsp() {
  set_has_vipgiftpkgrsp();
  if (vipgiftpkgrsp_ == NULL) vipgiftpkgrsp_ = new ::vmsg::VipGiftPkgRsp;
  return vipgiftpkgrsp_;
}
inline ::vmsg::VipGiftPkgRsp* CSCouponRespond::release_vipgiftpkgrsp() {
  clear_has_vipgiftpkgrsp();
  ::vmsg::VipGiftPkgRsp* temp = vipgiftpkgrsp_;
  vipgiftpkgrsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_vipgiftpkgrsp(::vmsg::VipGiftPkgRsp* vipgiftpkgrsp) {
  delete vipgiftpkgrsp_;
  vipgiftpkgrsp_ = vipgiftpkgrsp;
  if (vipgiftpkgrsp) {
    set_has_vipgiftpkgrsp();
  } else {
    clear_has_vipgiftpkgrsp();
  }
}

// optional .vmsg.DailyConsumePkgRsp DailyConsumePkgRsp = 11;
inline bool CSCouponRespond::has_dailyconsumepkgrsp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSCouponRespond::set_has_dailyconsumepkgrsp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSCouponRespond::clear_has_dailyconsumepkgrsp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSCouponRespond::clear_dailyconsumepkgrsp() {
  if (dailyconsumepkgrsp_ != NULL) dailyconsumepkgrsp_->::vmsg::DailyConsumePkgRsp::Clear();
  clear_has_dailyconsumepkgrsp();
}
inline const ::vmsg::DailyConsumePkgRsp& CSCouponRespond::dailyconsumepkgrsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailyconsumepkgrsp_ != NULL ? *dailyconsumepkgrsp_ : *default_instance().dailyconsumepkgrsp_;
#else
  return dailyconsumepkgrsp_ != NULL ? *dailyconsumepkgrsp_ : *default_instance_->dailyconsumepkgrsp_;
#endif
}
inline ::vmsg::DailyConsumePkgRsp* CSCouponRespond::mutable_dailyconsumepkgrsp() {
  set_has_dailyconsumepkgrsp();
  if (dailyconsumepkgrsp_ == NULL) dailyconsumepkgrsp_ = new ::vmsg::DailyConsumePkgRsp;
  return dailyconsumepkgrsp_;
}
inline ::vmsg::DailyConsumePkgRsp* CSCouponRespond::release_dailyconsumepkgrsp() {
  clear_has_dailyconsumepkgrsp();
  ::vmsg::DailyConsumePkgRsp* temp = dailyconsumepkgrsp_;
  dailyconsumepkgrsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_dailyconsumepkgrsp(::vmsg::DailyConsumePkgRsp* dailyconsumepkgrsp) {
  delete dailyconsumepkgrsp_;
  dailyconsumepkgrsp_ = dailyconsumepkgrsp;
  if (dailyconsumepkgrsp) {
    set_has_dailyconsumepkgrsp();
  } else {
    clear_has_dailyconsumepkgrsp();
  }
}

// optional .vmsg.SumConsumePkgRsp SumConsumePkgRsp = 12;
inline bool CSCouponRespond::has_sumconsumepkgrsp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSCouponRespond::set_has_sumconsumepkgrsp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSCouponRespond::clear_has_sumconsumepkgrsp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSCouponRespond::clear_sumconsumepkgrsp() {
  if (sumconsumepkgrsp_ != NULL) sumconsumepkgrsp_->::vmsg::SumConsumePkgRsp::Clear();
  clear_has_sumconsumepkgrsp();
}
inline const ::vmsg::SumConsumePkgRsp& CSCouponRespond::sumconsumepkgrsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sumconsumepkgrsp_ != NULL ? *sumconsumepkgrsp_ : *default_instance().sumconsumepkgrsp_;
#else
  return sumconsumepkgrsp_ != NULL ? *sumconsumepkgrsp_ : *default_instance_->sumconsumepkgrsp_;
#endif
}
inline ::vmsg::SumConsumePkgRsp* CSCouponRespond::mutable_sumconsumepkgrsp() {
  set_has_sumconsumepkgrsp();
  if (sumconsumepkgrsp_ == NULL) sumconsumepkgrsp_ = new ::vmsg::SumConsumePkgRsp;
  return sumconsumepkgrsp_;
}
inline ::vmsg::SumConsumePkgRsp* CSCouponRespond::release_sumconsumepkgrsp() {
  clear_has_sumconsumepkgrsp();
  ::vmsg::SumConsumePkgRsp* temp = sumconsumepkgrsp_;
  sumconsumepkgrsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_sumconsumepkgrsp(::vmsg::SumConsumePkgRsp* sumconsumepkgrsp) {
  delete sumconsumepkgrsp_;
  sumconsumepkgrsp_ = sumconsumepkgrsp;
  if (sumconsumepkgrsp) {
    set_has_sumconsumepkgrsp();
  } else {
    clear_has_sumconsumepkgrsp();
  }
}

// optional .vmsg.OnlinePkgRsp OnlinePkgRsp = 13;
inline bool CSCouponRespond::has_onlinepkgrsp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSCouponRespond::set_has_onlinepkgrsp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSCouponRespond::clear_has_onlinepkgrsp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSCouponRespond::clear_onlinepkgrsp() {
  if (onlinepkgrsp_ != NULL) onlinepkgrsp_->::vmsg::OnlinePkgRsp::Clear();
  clear_has_onlinepkgrsp();
}
inline const ::vmsg::OnlinePkgRsp& CSCouponRespond::onlinepkgrsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return onlinepkgrsp_ != NULL ? *onlinepkgrsp_ : *default_instance().onlinepkgrsp_;
#else
  return onlinepkgrsp_ != NULL ? *onlinepkgrsp_ : *default_instance_->onlinepkgrsp_;
#endif
}
inline ::vmsg::OnlinePkgRsp* CSCouponRespond::mutable_onlinepkgrsp() {
  set_has_onlinepkgrsp();
  if (onlinepkgrsp_ == NULL) onlinepkgrsp_ = new ::vmsg::OnlinePkgRsp;
  return onlinepkgrsp_;
}
inline ::vmsg::OnlinePkgRsp* CSCouponRespond::release_onlinepkgrsp() {
  clear_has_onlinepkgrsp();
  ::vmsg::OnlinePkgRsp* temp = onlinepkgrsp_;
  onlinepkgrsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_onlinepkgrsp(::vmsg::OnlinePkgRsp* onlinepkgrsp) {
  delete onlinepkgrsp_;
  onlinepkgrsp_ = onlinepkgrsp;
  if (onlinepkgrsp) {
    set_has_onlinepkgrsp();
  } else {
    clear_has_onlinepkgrsp();
  }
}

// optional .vmsg.NextDayPkgRsp NextDayPkgRsp = 14;
inline bool CSCouponRespond::has_nextdaypkgrsp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSCouponRespond::set_has_nextdaypkgrsp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSCouponRespond::clear_has_nextdaypkgrsp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSCouponRespond::clear_nextdaypkgrsp() {
  if (nextdaypkgrsp_ != NULL) nextdaypkgrsp_->::vmsg::NextDayPkgRsp::Clear();
  clear_has_nextdaypkgrsp();
}
inline const ::vmsg::NextDayPkgRsp& CSCouponRespond::nextdaypkgrsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return nextdaypkgrsp_ != NULL ? *nextdaypkgrsp_ : *default_instance().nextdaypkgrsp_;
#else
  return nextdaypkgrsp_ != NULL ? *nextdaypkgrsp_ : *default_instance_->nextdaypkgrsp_;
#endif
}
inline ::vmsg::NextDayPkgRsp* CSCouponRespond::mutable_nextdaypkgrsp() {
  set_has_nextdaypkgrsp();
  if (nextdaypkgrsp_ == NULL) nextdaypkgrsp_ = new ::vmsg::NextDayPkgRsp;
  return nextdaypkgrsp_;
}
inline ::vmsg::NextDayPkgRsp* CSCouponRespond::release_nextdaypkgrsp() {
  clear_has_nextdaypkgrsp();
  ::vmsg::NextDayPkgRsp* temp = nextdaypkgrsp_;
  nextdaypkgrsp_ = NULL;
  return temp;
}
inline void CSCouponRespond::set_allocated_nextdaypkgrsp(::vmsg::NextDayPkgRsp* nextdaypkgrsp) {
  delete nextdaypkgrsp_;
  nextdaypkgrsp_ = nextdaypkgrsp;
  if (nextdaypkgrsp) {
    set_has_nextdaypkgrsp();
  } else {
    clear_has_nextdaypkgrsp();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vmsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSCouponMsg_2eproto__INCLUDED
