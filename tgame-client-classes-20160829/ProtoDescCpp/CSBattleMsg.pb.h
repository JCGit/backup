// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSBattleMsg.proto

#ifndef PROTOBUF_CSBattleMsg_2eproto__INCLUDED
#define PROTOBUF_CSBattleMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSBattleMsg_2eproto();
void protobuf_AssignDesc_CSBattleMsg_2eproto();
void protobuf_ShutdownFile_CSBattleMsg_2eproto();

class Armors;
class JinkSkill;
class BattlePlayerUnit;

// ===================================================================

class Armors : public ::google::protobuf::MessageLite {
 public:
  Armors();
  virtual ~Armors();

  Armors(const Armors& from);

  inline Armors& operator=(const Armors& from) {
    CopyFrom(from);
    return *this;
  }

  static const Armors& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Armors* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Armors* other);

  // implements Message ----------------------------------------------

  Armors* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Armors& from);
  void MergeFrom(const Armors& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 ArmorIDs = 1;
  inline int armorids_size() const;
  inline void clear_armorids();
  static const int kArmorIDsFieldNumber = 1;
  inline ::google::protobuf::uint64 armorids(int index) const;
  inline void set_armorids(int index, ::google::protobuf::uint64 value);
  inline void add_armorids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      armorids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_armorids();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.Armors)
 private:

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > armorids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSBattleMsg_2eproto();
  friend void protobuf_ShutdownFile_CSBattleMsg_2eproto();

  void InitAsDefaultInstance();
  static Armors* default_instance_;
};
// -------------------------------------------------------------------

class JinkSkill : public ::google::protobuf::MessageLite {
 public:
  JinkSkill();
  virtual ~JinkSkill();

  JinkSkill(const JinkSkill& from);

  inline JinkSkill& operator=(const JinkSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const JinkSkill& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const JinkSkill* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(JinkSkill* other);

  // implements Message ----------------------------------------------

  JinkSkill* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const JinkSkill& from);
  void MergeFrom(const JinkSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 EffectSpan = 1;
  inline bool has_effectspan() const;
  inline void clear_effectspan();
  static const int kEffectSpanFieldNumber = 1;
  inline ::google::protobuf::uint32 effectspan() const;
  inline void set_effectspan(::google::protobuf::uint32 value);

  // required uint32 CD = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCDFieldNumber = 2;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.JinkSkill)
 private:
  inline void set_has_effectspan();
  inline void clear_has_effectspan();
  inline void set_has_cd();
  inline void clear_has_cd();

  ::google::protobuf::uint32 effectspan_;
  ::google::protobuf::uint32 cd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSBattleMsg_2eproto();
  friend void protobuf_ShutdownFile_CSBattleMsg_2eproto();

  void InitAsDefaultInstance();
  static JinkSkill* default_instance_;
};
// -------------------------------------------------------------------

class BattlePlayerUnit : public ::google::protobuf::MessageLite {
 public:
  BattlePlayerUnit();
  virtual ~BattlePlayerUnit();

  BattlePlayerUnit(const BattlePlayerUnit& from);

  inline BattlePlayerUnit& operator=(const BattlePlayerUnit& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattlePlayerUnit& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattlePlayerUnit* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattlePlayerUnit* other);

  // implements Message ----------------------------------------------

  BattlePlayerUnit* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattlePlayerUnit& from);
  void MergeFrom(const BattlePlayerUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 HPMax = 1;
  inline bool has_hpmax() const;
  inline void clear_hpmax();
  static const int kHPMaxFieldNumber = 1;
  inline ::google::protobuf::uint32 hpmax() const;
  inline void set_hpmax(::google::protobuf::uint32 value);

  // required uint32 HP = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 EPMax = 3;
  inline bool has_epmax() const;
  inline void clear_epmax();
  static const int kEPMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 epmax() const;
  inline void set_epmax(::google::protobuf::uint32 value);

  // required uint32 EP = 4;
  inline bool has_ep() const;
  inline void clear_ep();
  static const int kEPFieldNumber = 4;
  inline ::google::protobuf::uint32 ep() const;
  inline void set_ep(::google::protobuf::uint32 value);

  // repeated uint64 Guns = 5;
  inline int guns_size() const;
  inline void clear_guns();
  static const int kGunsFieldNumber = 5;
  inline ::google::protobuf::uint64 guns(int index) const;
  inline void set_guns(int index, ::google::protobuf::uint64 value);
  inline void add_guns(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guns() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guns();

  // required uint64 ArmedGun = 6;
  inline bool has_armedgun() const;
  inline void clear_armedgun();
  static const int kArmedGunFieldNumber = 6;
  inline ::google::protobuf::uint64 armedgun() const;
  inline void set_armedgun(::google::protobuf::uint64 value);

  // required uint64 BasicAtkVal = 8;
  inline bool has_basicatkval() const;
  inline void clear_basicatkval();
  static const int kBasicAtkValFieldNumber = 8;
  inline ::google::protobuf::uint64 basicatkval() const;
  inline void set_basicatkval(::google::protobuf::uint64 value);

  // required uint64 BasicDefVal = 9;
  inline bool has_basicdefval() const;
  inline void clear_basicdefval();
  static const int kBasicDefValFieldNumber = 9;
  inline ::google::protobuf::uint64 basicdefval() const;
  inline void set_basicdefval(::google::protobuf::uint64 value);

  // repeated .com.cfg.vo.Armors armor = 10;
  inline int armor_size() const;
  inline void clear_armor();
  static const int kArmorFieldNumber = 10;
  inline const ::com::cfg::vo::Armors& armor(int index) const;
  inline ::com::cfg::vo::Armors* mutable_armor(int index);
  inline ::com::cfg::vo::Armors* add_armor();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::Armors >&
      armor() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::Armors >*
      mutable_armor();

  // required uint32 ArmedArmor = 11;
  inline bool has_armedarmor() const;
  inline void clear_armedarmor();
  static const int kArmedArmorFieldNumber = 11;
  inline ::google::protobuf::uint32 armedarmor() const;
  inline void set_armedarmor(::google::protobuf::uint32 value);

  // required uint32 WalkSpeed = 12;
  inline bool has_walkspeed() const;
  inline void clear_walkspeed();
  static const int kWalkSpeedFieldNumber = 12;
  inline ::google::protobuf::uint32 walkspeed() const;
  inline void set_walkspeed(::google::protobuf::uint32 value);

  // required uint32 DashSpeed = 13;
  inline bool has_dashspeed() const;
  inline void clear_dashspeed();
  static const int kDashSpeedFieldNumber = 13;
  inline ::google::protobuf::uint32 dashspeed() const;
  inline void set_dashspeed(::google::protobuf::uint32 value);

  // required uint32 BasicAtkSpeed = 14;
  inline bool has_basicatkspeed() const;
  inline void clear_basicatkspeed();
  static const int kBasicAtkSpeedFieldNumber = 14;
  inline ::google::protobuf::uint32 basicatkspeed() const;
  inline void set_basicatkspeed(::google::protobuf::uint32 value);

  // required .com.cfg.vo.JinkSkill jSkill = 15;
  inline bool has_jskill() const;
  inline void clear_jskill();
  static const int kJSkillFieldNumber = 15;
  inline const ::com::cfg::vo::JinkSkill& jskill() const;
  inline ::com::cfg::vo::JinkSkill* mutable_jskill();
  inline ::com::cfg::vo::JinkSkill* release_jskill();
  inline void set_allocated_jskill(::com::cfg::vo::JinkSkill* jskill);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BattlePlayerUnit)
 private:
  inline void set_has_hpmax();
  inline void clear_has_hpmax();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_epmax();
  inline void clear_has_epmax();
  inline void set_has_ep();
  inline void clear_has_ep();
  inline void set_has_armedgun();
  inline void clear_has_armedgun();
  inline void set_has_basicatkval();
  inline void clear_has_basicatkval();
  inline void set_has_basicdefval();
  inline void clear_has_basicdefval();
  inline void set_has_armedarmor();
  inline void clear_has_armedarmor();
  inline void set_has_walkspeed();
  inline void clear_has_walkspeed();
  inline void set_has_dashspeed();
  inline void clear_has_dashspeed();
  inline void set_has_basicatkspeed();
  inline void clear_has_basicatkspeed();
  inline void set_has_jskill();
  inline void clear_has_jskill();

  ::google::protobuf::uint32 hpmax_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 epmax_;
  ::google::protobuf::uint32 ep_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guns_;
  ::google::protobuf::uint64 armedgun_;
  ::google::protobuf::uint64 basicatkval_;
  ::google::protobuf::uint64 basicdefval_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::Armors > armor_;
  ::google::protobuf::uint32 armedarmor_;
  ::google::protobuf::uint32 walkspeed_;
  ::google::protobuf::uint32 dashspeed_;
  ::google::protobuf::uint32 basicatkspeed_;
  ::com::cfg::vo::JinkSkill* jskill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSBattleMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSBattleMsg_2eproto();
  friend void protobuf_ShutdownFile_CSBattleMsg_2eproto();

  void InitAsDefaultInstance();
  static BattlePlayerUnit* default_instance_;
};
// ===================================================================


// ===================================================================

// Armors

// repeated uint64 ArmorIDs = 1;
inline int Armors::armorids_size() const {
  return armorids_.size();
}
inline void Armors::clear_armorids() {
  armorids_.Clear();
}
inline ::google::protobuf::uint64 Armors::armorids(int index) const {
  return armorids_.Get(index);
}
inline void Armors::set_armorids(int index, ::google::protobuf::uint64 value) {
  armorids_.Set(index, value);
}
inline void Armors::add_armorids(::google::protobuf::uint64 value) {
  armorids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Armors::armorids() const {
  return armorids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Armors::mutable_armorids() {
  return &armorids_;
}

// -------------------------------------------------------------------

// JinkSkill

// required uint32 EffectSpan = 1;
inline bool JinkSkill::has_effectspan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JinkSkill::set_has_effectspan() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JinkSkill::clear_has_effectspan() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JinkSkill::clear_effectspan() {
  effectspan_ = 0u;
  clear_has_effectspan();
}
inline ::google::protobuf::uint32 JinkSkill::effectspan() const {
  return effectspan_;
}
inline void JinkSkill::set_effectspan(::google::protobuf::uint32 value) {
  set_has_effectspan();
  effectspan_ = value;
}

// required uint32 CD = 2;
inline bool JinkSkill::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JinkSkill::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JinkSkill::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JinkSkill::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 JinkSkill::cd() const {
  return cd_;
}
inline void JinkSkill::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
}

// -------------------------------------------------------------------

// BattlePlayerUnit

// required uint32 HPMax = 1;
inline bool BattlePlayerUnit::has_hpmax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattlePlayerUnit::set_has_hpmax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattlePlayerUnit::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattlePlayerUnit::clear_hpmax() {
  hpmax_ = 0u;
  clear_has_hpmax();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::hpmax() const {
  return hpmax_;
}
inline void BattlePlayerUnit::set_hpmax(::google::protobuf::uint32 value) {
  set_has_hpmax();
  hpmax_ = value;
}

// required uint32 HP = 2;
inline bool BattlePlayerUnit::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattlePlayerUnit::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattlePlayerUnit::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattlePlayerUnit::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::hp() const {
  return hp_;
}
inline void BattlePlayerUnit::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 EPMax = 3;
inline bool BattlePlayerUnit::has_epmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattlePlayerUnit::set_has_epmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattlePlayerUnit::clear_has_epmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattlePlayerUnit::clear_epmax() {
  epmax_ = 0u;
  clear_has_epmax();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::epmax() const {
  return epmax_;
}
inline void BattlePlayerUnit::set_epmax(::google::protobuf::uint32 value) {
  set_has_epmax();
  epmax_ = value;
}

// required uint32 EP = 4;
inline bool BattlePlayerUnit::has_ep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattlePlayerUnit::set_has_ep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattlePlayerUnit::clear_has_ep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattlePlayerUnit::clear_ep() {
  ep_ = 0u;
  clear_has_ep();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::ep() const {
  return ep_;
}
inline void BattlePlayerUnit::set_ep(::google::protobuf::uint32 value) {
  set_has_ep();
  ep_ = value;
}

// repeated uint64 Guns = 5;
inline int BattlePlayerUnit::guns_size() const {
  return guns_.size();
}
inline void BattlePlayerUnit::clear_guns() {
  guns_.Clear();
}
inline ::google::protobuf::uint64 BattlePlayerUnit::guns(int index) const {
  return guns_.Get(index);
}
inline void BattlePlayerUnit::set_guns(int index, ::google::protobuf::uint64 value) {
  guns_.Set(index, value);
}
inline void BattlePlayerUnit::add_guns(::google::protobuf::uint64 value) {
  guns_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BattlePlayerUnit::guns() const {
  return guns_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BattlePlayerUnit::mutable_guns() {
  return &guns_;
}

// required uint64 ArmedGun = 6;
inline bool BattlePlayerUnit::has_armedgun() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattlePlayerUnit::set_has_armedgun() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattlePlayerUnit::clear_has_armedgun() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattlePlayerUnit::clear_armedgun() {
  armedgun_ = GOOGLE_ULONGLONG(0);
  clear_has_armedgun();
}
inline ::google::protobuf::uint64 BattlePlayerUnit::armedgun() const {
  return armedgun_;
}
inline void BattlePlayerUnit::set_armedgun(::google::protobuf::uint64 value) {
  set_has_armedgun();
  armedgun_ = value;
}

// required uint64 BasicAtkVal = 8;
inline bool BattlePlayerUnit::has_basicatkval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattlePlayerUnit::set_has_basicatkval() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattlePlayerUnit::clear_has_basicatkval() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattlePlayerUnit::clear_basicatkval() {
  basicatkval_ = GOOGLE_ULONGLONG(0);
  clear_has_basicatkval();
}
inline ::google::protobuf::uint64 BattlePlayerUnit::basicatkval() const {
  return basicatkval_;
}
inline void BattlePlayerUnit::set_basicatkval(::google::protobuf::uint64 value) {
  set_has_basicatkval();
  basicatkval_ = value;
}

// required uint64 BasicDefVal = 9;
inline bool BattlePlayerUnit::has_basicdefval() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattlePlayerUnit::set_has_basicdefval() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattlePlayerUnit::clear_has_basicdefval() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattlePlayerUnit::clear_basicdefval() {
  basicdefval_ = GOOGLE_ULONGLONG(0);
  clear_has_basicdefval();
}
inline ::google::protobuf::uint64 BattlePlayerUnit::basicdefval() const {
  return basicdefval_;
}
inline void BattlePlayerUnit::set_basicdefval(::google::protobuf::uint64 value) {
  set_has_basicdefval();
  basicdefval_ = value;
}

// repeated .com.cfg.vo.Armors armor = 10;
inline int BattlePlayerUnit::armor_size() const {
  return armor_.size();
}
inline void BattlePlayerUnit::clear_armor() {
  armor_.Clear();
}
inline const ::com::cfg::vo::Armors& BattlePlayerUnit::armor(int index) const {
  return armor_.Get(index);
}
inline ::com::cfg::vo::Armors* BattlePlayerUnit::mutable_armor(int index) {
  return armor_.Mutable(index);
}
inline ::com::cfg::vo::Armors* BattlePlayerUnit::add_armor() {
  return armor_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::Armors >&
BattlePlayerUnit::armor() const {
  return armor_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::Armors >*
BattlePlayerUnit::mutable_armor() {
  return &armor_;
}

// required uint32 ArmedArmor = 11;
inline bool BattlePlayerUnit::has_armedarmor() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BattlePlayerUnit::set_has_armedarmor() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BattlePlayerUnit::clear_has_armedarmor() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BattlePlayerUnit::clear_armedarmor() {
  armedarmor_ = 0u;
  clear_has_armedarmor();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::armedarmor() const {
  return armedarmor_;
}
inline void BattlePlayerUnit::set_armedarmor(::google::protobuf::uint32 value) {
  set_has_armedarmor();
  armedarmor_ = value;
}

// required uint32 WalkSpeed = 12;
inline bool BattlePlayerUnit::has_walkspeed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BattlePlayerUnit::set_has_walkspeed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BattlePlayerUnit::clear_has_walkspeed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BattlePlayerUnit::clear_walkspeed() {
  walkspeed_ = 0u;
  clear_has_walkspeed();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::walkspeed() const {
  return walkspeed_;
}
inline void BattlePlayerUnit::set_walkspeed(::google::protobuf::uint32 value) {
  set_has_walkspeed();
  walkspeed_ = value;
}

// required uint32 DashSpeed = 13;
inline bool BattlePlayerUnit::has_dashspeed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BattlePlayerUnit::set_has_dashspeed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BattlePlayerUnit::clear_has_dashspeed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BattlePlayerUnit::clear_dashspeed() {
  dashspeed_ = 0u;
  clear_has_dashspeed();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::dashspeed() const {
  return dashspeed_;
}
inline void BattlePlayerUnit::set_dashspeed(::google::protobuf::uint32 value) {
  set_has_dashspeed();
  dashspeed_ = value;
}

// required uint32 BasicAtkSpeed = 14;
inline bool BattlePlayerUnit::has_basicatkspeed() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BattlePlayerUnit::set_has_basicatkspeed() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BattlePlayerUnit::clear_has_basicatkspeed() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BattlePlayerUnit::clear_basicatkspeed() {
  basicatkspeed_ = 0u;
  clear_has_basicatkspeed();
}
inline ::google::protobuf::uint32 BattlePlayerUnit::basicatkspeed() const {
  return basicatkspeed_;
}
inline void BattlePlayerUnit::set_basicatkspeed(::google::protobuf::uint32 value) {
  set_has_basicatkspeed();
  basicatkspeed_ = value;
}

// required .com.cfg.vo.JinkSkill jSkill = 15;
inline bool BattlePlayerUnit::has_jskill() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BattlePlayerUnit::set_has_jskill() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BattlePlayerUnit::clear_has_jskill() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BattlePlayerUnit::clear_jskill() {
  if (jskill_ != NULL) jskill_->::com::cfg::vo::JinkSkill::Clear();
  clear_has_jskill();
}
inline const ::com::cfg::vo::JinkSkill& BattlePlayerUnit::jskill() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return jskill_ != NULL ? *jskill_ : *default_instance().jskill_;
#else
  return jskill_ != NULL ? *jskill_ : *default_instance_->jskill_;
#endif
}
inline ::com::cfg::vo::JinkSkill* BattlePlayerUnit::mutable_jskill() {
  set_has_jskill();
  if (jskill_ == NULL) jskill_ = new ::com::cfg::vo::JinkSkill;
  return jskill_;
}
inline ::com::cfg::vo::JinkSkill* BattlePlayerUnit::release_jskill() {
  clear_has_jskill();
  ::com::cfg::vo::JinkSkill* temp = jskill_;
  jskill_ = NULL;
  return temp;
}
inline void BattlePlayerUnit::set_allocated_jskill(::com::cfg::vo::JinkSkill* jskill) {
  delete jskill_;
  jskill_ = jskill;
  if (jskill) {
    set_has_jskill();
  } else {
    clear_has_jskill();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSBattleMsg_2eproto__INCLUDED
