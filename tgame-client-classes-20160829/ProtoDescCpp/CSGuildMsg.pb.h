// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSGuildMsg.proto

#ifndef PROTOBUF_CSGuildMsg_2eproto__INCLUDED
#define PROTOBUF_CSGuildMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MsgBase.pb.h"
#include "ShareByClient.pb.h"
#include "CSPlayerMsg.pb.h"
// @@protoc_insertion_point(includes)

namespace vmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSGuildMsg_2eproto();
void protobuf_AssignDesc_CSGuildMsg_2eproto();
void protobuf_ShutdownFile_CSGuildMsg_2eproto();

class CSGuildBrief;
class CSGuildMemberBrief;
class CSGuildMember;
class CSGuildReq;
class CSGuildCreateRqst;
class CSGuildInfoRsp;
class CSGuildMemberLstRsp;
class CSMyGuildReqRsp;
class CSAllGuildReqRsp;
class CSGuildChgPriviRqst;
class CSGuildChgPriviRsp;
class CSGuildChgNoticeRqst;
class CSGuildJoinReplyRqst;
class CSGuildJoinReplyRsp;
class CSGuildJoinInNotify;
class CSGuildInviteReplyRqst;
class CSOtherGuildRsp;
class CSQueryGuildLstRsp;
class CSGuildSearchRqst;
class CSGuildSearchRsp;
class CSGuildDailyActRsp;
class CSGuildInviteMemberRsp;
class CSGuildBunEndRsp;
class CSGuildActInviteRqst;
class CSGuildThiefRqst;
class CSGuildActBlockEndRqst;
class CSGuildStatNotify;
class CSGuildRequest;
class CSGuildRespond;

enum GuildPriviType {
  GUILD_PRIVI_CHAIRMAN = 1,
  GUILD_PRIVI_DEPUTY = 2,
  GUILD_PRIVI_MEMBER = 3
};
bool GuildPriviType_IsValid(int value);
const GuildPriviType GuildPriviType_MIN = GUILD_PRIVI_CHAIRMAN;
const GuildPriviType GuildPriviType_MAX = GUILD_PRIVI_MEMBER;
const int GuildPriviType_ARRAYSIZE = GuildPriviType_MAX + 1;

enum GuildReplyJoinType {
  GUILD_REPLY_JOIN_DENY = 1,
  GUILD_REPLY_JOIN_AGREE = 2
};
bool GuildReplyJoinType_IsValid(int value);
const GuildReplyJoinType GuildReplyJoinType_MIN = GUILD_REPLY_JOIN_DENY;
const GuildReplyJoinType GuildReplyJoinType_MAX = GUILD_REPLY_JOIN_AGREE;
const int GuildReplyJoinType_ARRAYSIZE = GuildReplyJoinType_MAX + 1;

enum GuildDailyActType {
  GUILD_DAILY_ACT_THIEF = 0,
  GUILD_DAILY_ACT_BLOCK = 1,
  GUILD_DAILY_ACT_BUN = 2
};
bool GuildDailyActType_IsValid(int value);
const GuildDailyActType GuildDailyActType_MIN = GUILD_DAILY_ACT_THIEF;
const GuildDailyActType GuildDailyActType_MAX = GUILD_DAILY_ACT_BUN;
const int GuildDailyActType_ARRAYSIZE = GuildDailyActType_MAX + 1;

enum GuildStatNotifyType {
  GUILD_NOTIFY_APPLY_JOIN = 1,
  GUILD_NOTIFY_DISMISS = 2,
  GUILD_NOTIFY_KICK = 3
};
bool GuildStatNotifyType_IsValid(int value);
const GuildStatNotifyType GuildStatNotifyType_MIN = GUILD_NOTIFY_APPLY_JOIN;
const GuildStatNotifyType GuildStatNotifyType_MAX = GUILD_NOTIFY_KICK;
const int GuildStatNotifyType_ARRAYSIZE = GuildStatNotifyType_MAX + 1;

// ===================================================================

class CSGuildBrief : public ::google::protobuf::MessageLite {
 public:
  CSGuildBrief();
  virtual ~CSGuildBrief();

  CSGuildBrief(const CSGuildBrief& from);

  inline CSGuildBrief& operator=(const CSGuildBrief& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildBrief& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildBrief* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildBrief* other);

  // implements Message ----------------------------------------------

  CSGuildBrief* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildBrief& from);
  void MergeFrom(const CSGuildBrief& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 GuildID = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIDFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required string GuildName = 2;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 2;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // required uint32 MemberNum = 3;
  inline bool has_membernum() const;
  inline void clear_membernum();
  static const int kMemberNumFieldNumber = 3;
  inline ::google::protobuf::uint32 membernum() const;
  inline void set_membernum(::google::protobuf::uint32 value);

  // required uint32 Rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 Exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string ChairManName = 7;
  inline bool has_chairmanname() const;
  inline void clear_chairmanname();
  static const int kChairManNameFieldNumber = 7;
  inline const ::std::string& chairmanname() const;
  inline void set_chairmanname(const ::std::string& value);
  inline void set_chairmanname(const char* value);
  inline void set_chairmanname(const char* value, size_t size);
  inline ::std::string* mutable_chairmanname();
  inline ::std::string* release_chairmanname();
  inline void set_allocated_chairmanname(::std::string* chairmanname);

  // required string Notice = 8;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 8;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildBrief)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_membernum();
  inline void clear_has_membernum();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_chairmanname();
  inline void clear_has_chairmanname();
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::uint64 guildid_;
  ::std::string* guildname_;
  ::google::protobuf::uint32 membernum_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 level_;
  ::std::string* chairmanname_;
  ::std::string* notice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildBrief* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildMemberBrief : public ::google::protobuf::MessageLite {
 public:
  CSGuildMemberBrief();
  virtual ~CSGuildMemberBrief();

  CSGuildMemberBrief(const CSGuildMemberBrief& from);

  inline CSGuildMemberBrief& operator=(const CSGuildMemberBrief& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildMemberBrief& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildMemberBrief* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildMemberBrief* other);

  // implements Message ----------------------------------------------

  CSGuildMemberBrief* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildMemberBrief& from);
  void MergeFrom(const CSGuildMemberBrief& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 Uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint64 uin() const;
  inline void set_uin(::google::protobuf::uint64 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 ShowID = 5;
  inline bool has_showid() const;
  inline void clear_showid();
  static const int kShowIDFieldNumber = 5;
  inline ::google::protobuf::uint32 showid() const;
  inline void set_showid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildMemberBrief)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_showid();
  inline void clear_has_showid();

  ::google::protobuf::uint64 uin_;
  ::std::string* name_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 showid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildMemberBrief* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildMember : public ::google::protobuf::MessageLite {
 public:
  CSGuildMember();
  virtual ~CSGuildMember();

  CSGuildMember(const CSGuildMember& from);

  inline CSGuildMember& operator=(const CSGuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildMember* other);

  // implements Message ----------------------------------------------

  CSGuildMember* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildMember& from);
  void MergeFrom(const CSGuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSGuildMemberBrief Brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::vmsg::CSGuildMemberBrief& brief() const;
  inline ::vmsg::CSGuildMemberBrief* mutable_brief();
  inline ::vmsg::CSGuildMemberBrief* release_brief();
  inline void set_allocated_brief(::vmsg::CSGuildMemberBrief* brief);

  // required uint32 LastLogin = 4;
  inline bool has_lastlogin() const;
  inline void clear_lastlogin();
  static const int kLastLoginFieldNumber = 4;
  inline ::google::protobuf::uint32 lastlogin() const;
  inline void set_lastlogin(::google::protobuf::uint32 value);

  // required uint32 IsOnline = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsOnlineFieldNumber = 5;
  inline ::google::protobuf::uint32 isonline() const;
  inline void set_isonline(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildMember)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_lastlogin();
  inline void clear_has_lastlogin();
  inline void set_has_isonline();
  inline void clear_has_isonline();

  ::vmsg::CSGuildMemberBrief* brief_;
  ::google::protobuf::uint32 lastlogin_;
  ::google::protobuf::uint32 isonline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildMember* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildReq : public ::google::protobuf::MessageLite {
 public:
  CSGuildReq();
  virtual ~CSGuildReq();

  CSGuildReq(const CSGuildReq& from);

  inline CSGuildReq& operator=(const CSGuildReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildReq* other);

  // implements Message ----------------------------------------------

  CSGuildReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildReq& from);
  void MergeFrom(const CSGuildReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ReqTime = 1;
  inline bool has_reqtime() const;
  inline void clear_reqtime();
  static const int kReqTimeFieldNumber = 1;
  inline ::google::protobuf::int32 reqtime() const;
  inline void set_reqtime(::google::protobuf::int32 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint64 Uin = 5;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 5;
  inline ::google::protobuf::uint64 uin() const;
  inline void set_uin(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildReq)
 private:
  inline void set_has_reqtime();
  inline void clear_has_reqtime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_uin();
  inline void clear_has_uin();

  ::std::string* name_;
  ::google::protobuf::int32 reqtime_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildCreateRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildCreateRqst();
  virtual ~CSGuildCreateRqst();

  CSGuildCreateRqst(const CSGuildCreateRqst& from);

  inline CSGuildCreateRqst& operator=(const CSGuildCreateRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildCreateRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildCreateRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildCreateRqst* other);

  // implements Message ----------------------------------------------

  CSGuildCreateRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildCreateRqst& from);
  void MergeFrom(const CSGuildCreateRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string GuildName = 1;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 1;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildCreateRqst)
 private:
  inline void set_has_guildname();
  inline void clear_has_guildname();

  ::std::string* guildname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildCreateRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildInfoRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildInfoRsp();
  virtual ~CSGuildInfoRsp();

  CSGuildInfoRsp(const CSGuildInfoRsp& from);

  inline CSGuildInfoRsp& operator=(const CSGuildInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildInfoRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildInfoRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildInfoRsp* other);

  // implements Message ----------------------------------------------

  CSGuildInfoRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildInfoRsp& from);
  void MergeFrom(const CSGuildInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSGuildBrief GuildBrief = 1;
  inline bool has_guildbrief() const;
  inline void clear_guildbrief();
  static const int kGuildBriefFieldNumber = 1;
  inline const ::vmsg::CSGuildBrief& guildbrief() const;
  inline ::vmsg::CSGuildBrief* mutable_guildbrief();
  inline ::vmsg::CSGuildBrief* release_guildbrief();
  inline void set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief);

  // repeated .vmsg.CSGuildMember GuildMemberLst = 2;
  inline int guildmemberlst_size() const;
  inline void clear_guildmemberlst();
  static const int kGuildMemberLstFieldNumber = 2;
  inline const ::vmsg::CSGuildMember& guildmemberlst(int index) const;
  inline ::vmsg::CSGuildMember* mutable_guildmemberlst(int index);
  inline ::vmsg::CSGuildMember* add_guildmemberlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >&
      guildmemberlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >*
      mutable_guildmemberlst();

  // required string Notice = 3;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // optional uint64 ImpeachUin = 4;
  inline bool has_impeachuin() const;
  inline void clear_impeachuin();
  static const int kImpeachUinFieldNumber = 4;
  inline ::google::protobuf::uint64 impeachuin() const;
  inline void set_impeachuin(::google::protobuf::uint64 value);

  // optional uint32 ImpeachTime = 5;
  inline bool has_impeachtime() const;
  inline void clear_impeachtime();
  static const int kImpeachTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 impeachtime() const;
  inline void set_impeachtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildInfoRsp)
 private:
  inline void set_has_guildbrief();
  inline void clear_has_guildbrief();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_impeachuin();
  inline void clear_has_impeachuin();
  inline void set_has_impeachtime();
  inline void clear_has_impeachtime();

  ::vmsg::CSGuildBrief* guildbrief_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember > guildmemberlst_;
  ::std::string* notice_;
  ::google::protobuf::uint64 impeachuin_;
  ::google::protobuf::uint32 impeachtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildMemberLstRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildMemberLstRsp();
  virtual ~CSGuildMemberLstRsp();

  CSGuildMemberLstRsp(const CSGuildMemberLstRsp& from);

  inline CSGuildMemberLstRsp& operator=(const CSGuildMemberLstRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildMemberLstRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildMemberLstRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildMemberLstRsp* other);

  // implements Message ----------------------------------------------

  CSGuildMemberLstRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildMemberLstRsp& from);
  void MergeFrom(const CSGuildMemberLstRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vmsg.CSGuildMember GuildMemberLst = 1;
  inline int guildmemberlst_size() const;
  inline void clear_guildmemberlst();
  static const int kGuildMemberLstFieldNumber = 1;
  inline const ::vmsg::CSGuildMember& guildmemberlst(int index) const;
  inline ::vmsg::CSGuildMember* mutable_guildmemberlst(int index);
  inline ::vmsg::CSGuildMember* add_guildmemberlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >&
      guildmemberlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >*
      mutable_guildmemberlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildMemberLstRsp)
 private:

  ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember > guildmemberlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildMemberLstRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMyGuildReqRsp : public ::google::protobuf::MessageLite {
 public:
  CSMyGuildReqRsp();
  virtual ~CSMyGuildReqRsp();

  CSMyGuildReqRsp(const CSMyGuildReqRsp& from);

  inline CSMyGuildReqRsp& operator=(const CSMyGuildReqRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSMyGuildReqRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSMyGuildReqRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSMyGuildReqRsp* other);

  // implements Message ----------------------------------------------

  CSMyGuildReqRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSMyGuildReqRsp& from);
  void MergeFrom(const CSMyGuildReqRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 GuildIDLst = 1;
  inline int guildidlst_size() const;
  inline void clear_guildidlst();
  static const int kGuildIDLstFieldNumber = 1;
  inline ::google::protobuf::uint64 guildidlst(int index) const;
  inline void set_guildidlst(int index, ::google::protobuf::uint64 value);
  inline void add_guildidlst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guildidlst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guildidlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSMyGuildReqRsp)
 private:

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guildidlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSMyGuildReqRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAllGuildReqRsp : public ::google::protobuf::MessageLite {
 public:
  CSAllGuildReqRsp();
  virtual ~CSAllGuildReqRsp();

  CSAllGuildReqRsp(const CSAllGuildReqRsp& from);

  inline CSAllGuildReqRsp& operator=(const CSAllGuildReqRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSAllGuildReqRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSAllGuildReqRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSAllGuildReqRsp* other);

  // implements Message ----------------------------------------------

  CSAllGuildReqRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSAllGuildReqRsp& from);
  void MergeFrom(const CSAllGuildReqRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vmsg.CSGuildReq GuildReqLst = 1;
  inline int guildreqlst_size() const;
  inline void clear_guildreqlst();
  static const int kGuildReqLstFieldNumber = 1;
  inline const ::vmsg::CSGuildReq& guildreqlst(int index) const;
  inline ::vmsg::CSGuildReq* mutable_guildreqlst(int index);
  inline ::vmsg::CSGuildReq* add_guildreqlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildReq >&
      guildreqlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildReq >*
      mutable_guildreqlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSAllGuildReqRsp)
 private:

  ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildReq > guildreqlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSAllGuildReqRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildChgPriviRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildChgPriviRqst();
  virtual ~CSGuildChgPriviRqst();

  CSGuildChgPriviRqst(const CSGuildChgPriviRqst& from);

  inline CSGuildChgPriviRqst& operator=(const CSGuildChgPriviRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildChgPriviRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildChgPriviRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildChgPriviRqst* other);

  // implements Message ----------------------------------------------

  CSGuildChgPriviRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildChgPriviRqst& from);
  void MergeFrom(const CSGuildChgPriviRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ChgUin = 1;
  inline bool has_chguin() const;
  inline void clear_chguin();
  static const int kChgUinFieldNumber = 1;
  inline ::google::protobuf::uint64 chguin() const;
  inline void set_chguin(::google::protobuf::uint64 value);

  // required uint32 NewPrivi = 2;
  inline bool has_newprivi() const;
  inline void clear_newprivi();
  static const int kNewPriviFieldNumber = 2;
  inline ::google::protobuf::uint32 newprivi() const;
  inline void set_newprivi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildChgPriviRqst)
 private:
  inline void set_has_chguin();
  inline void clear_has_chguin();
  inline void set_has_newprivi();
  inline void clear_has_newprivi();

  ::google::protobuf::uint64 chguin_;
  ::google::protobuf::uint32 newprivi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildChgPriviRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildChgPriviRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildChgPriviRsp();
  virtual ~CSGuildChgPriviRsp();

  CSGuildChgPriviRsp(const CSGuildChgPriviRsp& from);

  inline CSGuildChgPriviRsp& operator=(const CSGuildChgPriviRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildChgPriviRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildChgPriviRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildChgPriviRsp* other);

  // implements Message ----------------------------------------------

  CSGuildChgPriviRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildChgPriviRsp& from);
  void MergeFrom(const CSGuildChgPriviRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ChgUin = 1;
  inline bool has_chguin() const;
  inline void clear_chguin();
  static const int kChgUinFieldNumber = 1;
  inline ::google::protobuf::uint64 chguin() const;
  inline void set_chguin(::google::protobuf::uint64 value);

  // required uint32 NewPrivi = 2;
  inline bool has_newprivi() const;
  inline void clear_newprivi();
  static const int kNewPriviFieldNumber = 2;
  inline ::google::protobuf::uint32 newprivi() const;
  inline void set_newprivi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildChgPriviRsp)
 private:
  inline void set_has_chguin();
  inline void clear_has_chguin();
  inline void set_has_newprivi();
  inline void clear_has_newprivi();

  ::google::protobuf::uint64 chguin_;
  ::google::protobuf::uint32 newprivi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildChgPriviRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildChgNoticeRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildChgNoticeRqst();
  virtual ~CSGuildChgNoticeRqst();

  CSGuildChgNoticeRqst(const CSGuildChgNoticeRqst& from);

  inline CSGuildChgNoticeRqst& operator=(const CSGuildChgNoticeRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildChgNoticeRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildChgNoticeRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildChgNoticeRqst* other);

  // implements Message ----------------------------------------------

  CSGuildChgNoticeRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildChgNoticeRqst& from);
  void MergeFrom(const CSGuildChgNoticeRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildChgNoticeRqst)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();

  ::std::string* notice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildChgNoticeRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildJoinReplyRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildJoinReplyRqst();
  virtual ~CSGuildJoinReplyRqst();

  CSGuildJoinReplyRqst(const CSGuildJoinReplyRqst& from);

  inline CSGuildJoinReplyRqst& operator=(const CSGuildJoinReplyRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildJoinReplyRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildJoinReplyRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildJoinReplyRqst* other);

  // implements Message ----------------------------------------------

  CSGuildJoinReplyRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildJoinReplyRqst& from);
  void MergeFrom(const CSGuildJoinReplyRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 JoinUinLst = 1;
  inline int joinuinlst_size() const;
  inline void clear_joinuinlst();
  static const int kJoinUinLstFieldNumber = 1;
  inline ::google::protobuf::uint64 joinuinlst(int index) const;
  inline void set_joinuinlst(int index, ::google::protobuf::uint64 value);
  inline void add_joinuinlst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      joinuinlst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_joinuinlst();

  // required uint32 Reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline ::google::protobuf::uint32 reply() const;
  inline void set_reply(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildJoinReplyRqst)
 private:
  inline void set_has_reply();
  inline void clear_has_reply();

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > joinuinlst_;
  ::google::protobuf::uint32 reply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildJoinReplyRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildJoinReplyRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildJoinReplyRsp();
  virtual ~CSGuildJoinReplyRsp();

  CSGuildJoinReplyRsp(const CSGuildJoinReplyRsp& from);

  inline CSGuildJoinReplyRsp& operator=(const CSGuildJoinReplyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildJoinReplyRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildJoinReplyRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildJoinReplyRsp* other);

  // implements Message ----------------------------------------------

  CSGuildJoinReplyRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildJoinReplyRsp& from);
  void MergeFrom(const CSGuildJoinReplyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 JoinUinLst = 1;
  inline int joinuinlst_size() const;
  inline void clear_joinuinlst();
  static const int kJoinUinLstFieldNumber = 1;
  inline ::google::protobuf::uint64 joinuinlst(int index) const;
  inline void set_joinuinlst(int index, ::google::protobuf::uint64 value);
  inline void add_joinuinlst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      joinuinlst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_joinuinlst();

  // required uint32 Reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline ::google::protobuf::uint32 reply() const;
  inline void set_reply(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildJoinReplyRsp)
 private:
  inline void set_has_reply();
  inline void clear_has_reply();

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > joinuinlst_;
  ::google::protobuf::uint32 reply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildJoinReplyRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildJoinInNotify : public ::google::protobuf::MessageLite {
 public:
  CSGuildJoinInNotify();
  virtual ~CSGuildJoinInNotify();

  CSGuildJoinInNotify(const CSGuildJoinInNotify& from);

  inline CSGuildJoinInNotify& operator=(const CSGuildJoinInNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildJoinInNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildJoinInNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildJoinInNotify* other);

  // implements Message ----------------------------------------------

  CSGuildJoinInNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildJoinInNotify& from);
  void MergeFrom(const CSGuildJoinInNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 GuildID = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIDFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required string GuildNick = 2;
  inline bool has_guildnick() const;
  inline void clear_guildnick();
  static const int kGuildNickFieldNumber = 2;
  inline const ::std::string& guildnick() const;
  inline void set_guildnick(const ::std::string& value);
  inline void set_guildnick(const char* value);
  inline void set_guildnick(const char* value, size_t size);
  inline ::std::string* mutable_guildnick();
  inline ::std::string* release_guildnick();
  inline void set_allocated_guildnick(::std::string* guildnick);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildJoinInNotify)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_guildnick();
  inline void clear_has_guildnick();

  ::google::protobuf::uint64 guildid_;
  ::std::string* guildnick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildJoinInNotify* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildInviteReplyRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildInviteReplyRqst();
  virtual ~CSGuildInviteReplyRqst();

  CSGuildInviteReplyRqst(const CSGuildInviteReplyRqst& from);

  inline CSGuildInviteReplyRqst& operator=(const CSGuildInviteReplyRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildInviteReplyRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildInviteReplyRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildInviteReplyRqst* other);

  // implements Message ----------------------------------------------

  CSGuildInviteReplyRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildInviteReplyRqst& from);
  void MergeFrom(const CSGuildInviteReplyRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 InviteGuild = 1;
  inline bool has_inviteguild() const;
  inline void clear_inviteguild();
  static const int kInviteGuildFieldNumber = 1;
  inline ::google::protobuf::uint64 inviteguild() const;
  inline void set_inviteguild(::google::protobuf::uint64 value);

  // required uint32 Reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline ::google::protobuf::uint32 reply() const;
  inline void set_reply(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildInviteReplyRqst)
 private:
  inline void set_has_inviteguild();
  inline void clear_has_inviteguild();
  inline void set_has_reply();
  inline void clear_has_reply();

  ::google::protobuf::uint64 inviteguild_;
  ::google::protobuf::uint32 reply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildInviteReplyRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSOtherGuildRsp : public ::google::protobuf::MessageLite {
 public:
  CSOtherGuildRsp();
  virtual ~CSOtherGuildRsp();

  CSOtherGuildRsp(const CSOtherGuildRsp& from);

  inline CSOtherGuildRsp& operator=(const CSOtherGuildRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSOtherGuildRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSOtherGuildRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSOtherGuildRsp* other);

  // implements Message ----------------------------------------------

  CSOtherGuildRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSOtherGuildRsp& from);
  void MergeFrom(const CSOtherGuildRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSGuildBrief GuildBrief = 1;
  inline bool has_guildbrief() const;
  inline void clear_guildbrief();
  static const int kGuildBriefFieldNumber = 1;
  inline const ::vmsg::CSGuildBrief& guildbrief() const;
  inline ::vmsg::CSGuildBrief* mutable_guildbrief();
  inline ::vmsg::CSGuildBrief* release_guildbrief();
  inline void set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief);

  // repeated .vmsg.CSGuildMemberBrief GuildMemberLst = 2;
  inline int guildmemberlst_size() const;
  inline void clear_guildmemberlst();
  static const int kGuildMemberLstFieldNumber = 2;
  inline const ::vmsg::CSGuildMemberBrief& guildmemberlst(int index) const;
  inline ::vmsg::CSGuildMemberBrief* mutable_guildmemberlst(int index);
  inline ::vmsg::CSGuildMemberBrief* add_guildmemberlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMemberBrief >&
      guildmemberlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMemberBrief >*
      mutable_guildmemberlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSOtherGuildRsp)
 private:
  inline void set_has_guildbrief();
  inline void clear_has_guildbrief();

  ::vmsg::CSGuildBrief* guildbrief_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMemberBrief > guildmemberlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSOtherGuildRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryGuildLstRsp : public ::google::protobuf::MessageLite {
 public:
  CSQueryGuildLstRsp();
  virtual ~CSQueryGuildLstRsp();

  CSQueryGuildLstRsp(const CSQueryGuildLstRsp& from);

  inline CSQueryGuildLstRsp& operator=(const CSQueryGuildLstRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSQueryGuildLstRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSQueryGuildLstRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSQueryGuildLstRsp* other);

  // implements Message ----------------------------------------------

  CSQueryGuildLstRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSQueryGuildLstRsp& from);
  void MergeFrom(const CSQueryGuildLstRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vmsg.CSGuildBrief GuildLst = 3;
  inline int guildlst_size() const;
  inline void clear_guildlst();
  static const int kGuildLstFieldNumber = 3;
  inline const ::vmsg::CSGuildBrief& guildlst(int index) const;
  inline ::vmsg::CSGuildBrief* mutable_guildlst(int index);
  inline ::vmsg::CSGuildBrief* add_guildlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildBrief >&
      guildlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildBrief >*
      mutable_guildlst();

  // repeated uint64 GuildReqLst = 4;
  inline int guildreqlst_size() const;
  inline void clear_guildreqlst();
  static const int kGuildReqLstFieldNumber = 4;
  inline ::google::protobuf::uint64 guildreqlst(int index) const;
  inline void set_guildreqlst(int index, ::google::protobuf::uint64 value);
  inline void add_guildreqlst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guildreqlst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guildreqlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSQueryGuildLstRsp)
 private:

  ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildBrief > guildlst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guildreqlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSQueryGuildLstRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildSearchRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildSearchRqst();
  virtual ~CSGuildSearchRqst();

  CSGuildSearchRqst(const CSGuildSearchRqst& from);

  inline CSGuildSearchRqst& operator=(const CSGuildSearchRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildSearchRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildSearchRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildSearchRqst* other);

  // implements Message ----------------------------------------------

  CSGuildSearchRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildSearchRqst& from);
  void MergeFrom(const CSGuildSearchRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string SearchName = 1;
  inline bool has_searchname() const;
  inline void clear_searchname();
  static const int kSearchNameFieldNumber = 1;
  inline const ::std::string& searchname() const;
  inline void set_searchname(const ::std::string& value);
  inline void set_searchname(const char* value);
  inline void set_searchname(const char* value, size_t size);
  inline ::std::string* mutable_searchname();
  inline ::std::string* release_searchname();
  inline void set_allocated_searchname(::std::string* searchname);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildSearchRqst)
 private:
  inline void set_has_searchname();
  inline void clear_has_searchname();

  ::std::string* searchname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildSearchRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildSearchRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildSearchRsp();
  virtual ~CSGuildSearchRsp();

  CSGuildSearchRsp(const CSGuildSearchRsp& from);

  inline CSGuildSearchRsp& operator=(const CSGuildSearchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildSearchRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildSearchRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildSearchRsp* other);

  // implements Message ----------------------------------------------

  CSGuildSearchRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildSearchRsp& from);
  void MergeFrom(const CSGuildSearchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSGuildBrief GuildBrief = 1;
  inline bool has_guildbrief() const;
  inline void clear_guildbrief();
  static const int kGuildBriefFieldNumber = 1;
  inline const ::vmsg::CSGuildBrief& guildbrief() const;
  inline ::vmsg::CSGuildBrief* mutable_guildbrief();
  inline ::vmsg::CSGuildBrief* release_guildbrief();
  inline void set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildSearchRsp)
 private:
  inline void set_has_guildbrief();
  inline void clear_has_guildbrief();

  ::vmsg::CSGuildBrief* guildbrief_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildSearchRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildDailyActRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildDailyActRsp();
  virtual ~CSGuildDailyActRsp();

  CSGuildDailyActRsp(const CSGuildDailyActRsp& from);

  inline CSGuildDailyActRsp& operator=(const CSGuildDailyActRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildDailyActRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildDailyActRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildDailyActRsp* other);

  // implements Message ----------------------------------------------

  CSGuildDailyActRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildDailyActRsp& from);
  void MergeFrom(const CSGuildDailyActRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BunRemainNum = 1;
  inline bool has_bunremainnum() const;
  inline void clear_bunremainnum();
  static const int kBunRemainNumFieldNumber = 1;
  inline ::google::protobuf::uint32 bunremainnum() const;
  inline void set_bunremainnum(::google::protobuf::uint32 value);

  // required uint32 ThiefRemainNum = 2;
  inline bool has_thiefremainnum() const;
  inline void clear_thiefremainnum();
  static const int kThiefRemainNumFieldNumber = 2;
  inline ::google::protobuf::uint32 thiefremainnum() const;
  inline void set_thiefremainnum(::google::protobuf::uint32 value);

  // required uint32 BlockRemainNum = 3;
  inline bool has_blockremainnum() const;
  inline void clear_blockremainnum();
  static const int kBlockRemainNumFieldNumber = 3;
  inline ::google::protobuf::uint32 blockremainnum() const;
  inline void set_blockremainnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildDailyActRsp)
 private:
  inline void set_has_bunremainnum();
  inline void clear_has_bunremainnum();
  inline void set_has_thiefremainnum();
  inline void clear_has_thiefremainnum();
  inline void set_has_blockremainnum();
  inline void clear_has_blockremainnum();

  ::google::protobuf::uint32 bunremainnum_;
  ::google::protobuf::uint32 thiefremainnum_;
  ::google::protobuf::uint32 blockremainnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildDailyActRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildInviteMemberRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildInviteMemberRsp();
  virtual ~CSGuildInviteMemberRsp();

  CSGuildInviteMemberRsp(const CSGuildInviteMemberRsp& from);

  inline CSGuildInviteMemberRsp& operator=(const CSGuildInviteMemberRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildInviteMemberRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildInviteMemberRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildInviteMemberRsp* other);

  // implements Message ----------------------------------------------

  CSGuildInviteMemberRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildInviteMemberRsp& from);
  void MergeFrom(const CSGuildInviteMemberRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSGuildMemberBrief MemberInfo = 1;
  inline bool has_memberinfo() const;
  inline void clear_memberinfo();
  static const int kMemberInfoFieldNumber = 1;
  inline const ::vmsg::CSGuildMemberBrief& memberinfo() const;
  inline ::vmsg::CSGuildMemberBrief* mutable_memberinfo();
  inline ::vmsg::CSGuildMemberBrief* release_memberinfo();
  inline void set_allocated_memberinfo(::vmsg::CSGuildMemberBrief* memberinfo);

  // required uint32 ActType = 2;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildInviteMemberRsp)
 private:
  inline void set_has_memberinfo();
  inline void clear_has_memberinfo();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::vmsg::CSGuildMemberBrief* memberinfo_;
  ::google::protobuf::uint32 acttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildInviteMemberRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildBunEndRsp : public ::google::protobuf::MessageLite {
 public:
  CSGuildBunEndRsp();
  virtual ~CSGuildBunEndRsp();

  CSGuildBunEndRsp(const CSGuildBunEndRsp& from);

  inline CSGuildBunEndRsp& operator=(const CSGuildBunEndRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildBunEndRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildBunEndRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildBunEndRsp* other);

  // implements Message ----------------------------------------------

  CSGuildBunEndRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildBunEndRsp& from);
  void MergeFrom(const CSGuildBunEndRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 IsWin = 1;
  inline bool has_iswin() const;
  inline void clear_iswin();
  static const int kIsWinFieldNumber = 1;
  inline ::google::protobuf::uint32 iswin() const;
  inline void set_iswin(::google::protobuf::uint32 value);

  // required uint32 MyBunNum = 2;
  inline bool has_mybunnum() const;
  inline void clear_mybunnum();
  static const int kMyBunNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mybunnum() const;
  inline void set_mybunnum(::google::protobuf::uint32 value);

  // required uint32 MemberBunNum = 3;
  inline bool has_memberbunnum() const;
  inline void clear_memberbunnum();
  static const int kMemberBunNumFieldNumber = 3;
  inline ::google::protobuf::uint32 memberbunnum() const;
  inline void set_memberbunnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildBunEndRsp)
 private:
  inline void set_has_iswin();
  inline void clear_has_iswin();
  inline void set_has_mybunnum();
  inline void clear_has_mybunnum();
  inline void set_has_memberbunnum();
  inline void clear_has_memberbunnum();

  ::google::protobuf::uint32 iswin_;
  ::google::protobuf::uint32 mybunnum_;
  ::google::protobuf::uint32 memberbunnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildBunEndRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildActInviteRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildActInviteRqst();
  virtual ~CSGuildActInviteRqst();

  CSGuildActInviteRqst(const CSGuildActInviteRqst& from);

  inline CSGuildActInviteRqst& operator=(const CSGuildActInviteRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildActInviteRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildActInviteRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildActInviteRqst* other);

  // implements Message ----------------------------------------------

  CSGuildActInviteRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildActInviteRqst& from);
  void MergeFrom(const CSGuildActInviteRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 MemberUin = 1;
  inline bool has_memberuin() const;
  inline void clear_memberuin();
  static const int kMemberUinFieldNumber = 1;
  inline ::google::protobuf::uint64 memberuin() const;
  inline void set_memberuin(::google::protobuf::uint64 value);

  // required uint32 ActType = 2;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildActInviteRqst)
 private:
  inline void set_has_memberuin();
  inline void clear_has_memberuin();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::uint64 memberuin_;
  ::google::protobuf::uint32 acttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildActInviteRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildThiefRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildThiefRqst();
  virtual ~CSGuildThiefRqst();

  CSGuildThiefRqst(const CSGuildThiefRqst& from);

  inline CSGuildThiefRqst& operator=(const CSGuildThiefRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildThiefRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildThiefRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildThiefRqst* other);

  // implements Message ----------------------------------------------

  CSGuildThiefRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildThiefRqst& from);
  void MergeFrom(const CSGuildThiefRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 DamageHP = 1;
  inline bool has_damagehp() const;
  inline void clear_damagehp();
  static const int kDamageHPFieldNumber = 1;
  inline ::google::protobuf::uint32 damagehp() const;
  inline void set_damagehp(::google::protobuf::uint32 value);

  // required uint32 KillThiefNum = 2;
  inline bool has_killthiefnum() const;
  inline void clear_killthiefnum();
  static const int kKillThiefNumFieldNumber = 2;
  inline ::google::protobuf::uint32 killthiefnum() const;
  inline void set_killthiefnum(::google::protobuf::uint32 value);

  // repeated uint32 ThiefLst = 3;
  inline int thieflst_size() const;
  inline void clear_thieflst();
  static const int kThiefLstFieldNumber = 3;
  inline ::google::protobuf::uint32 thieflst(int index) const;
  inline void set_thieflst(int index, ::google::protobuf::uint32 value);
  inline void add_thieflst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      thieflst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_thieflst();

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildThiefRqst)
 private:
  inline void set_has_damagehp();
  inline void clear_has_damagehp();
  inline void set_has_killthiefnum();
  inline void clear_has_killthiefnum();

  ::google::protobuf::uint32 damagehp_;
  ::google::protobuf::uint32 killthiefnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > thieflst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildThiefRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildActBlockEndRqst : public ::google::protobuf::MessageLite {
 public:
  CSGuildActBlockEndRqst();
  virtual ~CSGuildActBlockEndRqst();

  CSGuildActBlockEndRqst(const CSGuildActBlockEndRqst& from);

  inline CSGuildActBlockEndRqst& operator=(const CSGuildActBlockEndRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildActBlockEndRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildActBlockEndRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildActBlockEndRqst* other);

  // implements Message ----------------------------------------------

  CSGuildActBlockEndRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildActBlockEndRqst& from);
  void MergeFrom(const CSGuildActBlockEndRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 DamageHP = 1;
  inline bool has_damagehp() const;
  inline void clear_damagehp();
  static const int kDamageHPFieldNumber = 1;
  inline ::google::protobuf::uint32 damagehp() const;
  inline void set_damagehp(::google::protobuf::uint32 value);

  // required uint32 BlockNum = 2;
  inline bool has_blocknum() const;
  inline void clear_blocknum();
  static const int kBlockNumFieldNumber = 2;
  inline ::google::protobuf::uint32 blocknum() const;
  inline void set_blocknum(::google::protobuf::uint32 value);

  // repeated uint32 BlockLst = 3;
  inline int blocklst_size() const;
  inline void clear_blocklst();
  static const int kBlockLstFieldNumber = 3;
  inline ::google::protobuf::uint32 blocklst(int index) const;
  inline void set_blocklst(int index, ::google::protobuf::uint32 value);
  inline void add_blocklst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      blocklst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_blocklst();

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildActBlockEndRqst)
 private:
  inline void set_has_damagehp();
  inline void clear_has_damagehp();
  inline void set_has_blocknum();
  inline void clear_has_blocknum();

  ::google::protobuf::uint32 damagehp_;
  ::google::protobuf::uint32 blocknum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > blocklst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildActBlockEndRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildStatNotify : public ::google::protobuf::MessageLite {
 public:
  CSGuildStatNotify();
  virtual ~CSGuildStatNotify();

  CSGuildStatNotify(const CSGuildStatNotify& from);

  inline CSGuildStatNotify& operator=(const CSGuildStatNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildStatNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildStatNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildStatNotify* other);

  // implements Message ----------------------------------------------

  CSGuildStatNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildStatNotify& from);
  void MergeFrom(const CSGuildStatNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 GuildID = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildIDFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required uint32 Reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildStatNotify)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildStatNotify* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRequest : public ::google::protobuf::MessageLite {
 public:
  CSGuildRequest();
  virtual ~CSGuildRequest();

  CSGuildRequest(const CSGuildRequest& from);

  inline CSGuildRequest& operator=(const CSGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildRequest* other);

  // implements Message ----------------------------------------------

  CSGuildRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildRequest& from);
  void MergeFrom(const CSGuildRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vmsg.CSGuildCreateRqst GuildCreate_Rqst = 1;
  inline bool has_guildcreate_rqst() const;
  inline void clear_guildcreate_rqst();
  static const int kGuildCreateRqstFieldNumber = 1;
  inline const ::vmsg::CSGuildCreateRqst& guildcreate_rqst() const;
  inline ::vmsg::CSGuildCreateRqst* mutable_guildcreate_rqst();
  inline ::vmsg::CSGuildCreateRqst* release_guildcreate_rqst();
  inline void set_allocated_guildcreate_rqst(::vmsg::CSGuildCreateRqst* guildcreate_rqst);

  // optional uint64 GuildJoin_Rqst = 2;
  inline bool has_guildjoin_rqst() const;
  inline void clear_guildjoin_rqst();
  static const int kGuildJoinRqstFieldNumber = 2;
  inline ::google::protobuf::uint64 guildjoin_rqst() const;
  inline void set_guildjoin_rqst(::google::protobuf::uint64 value);

  // optional uint64 GuildKick_Rqst = 3;
  inline bool has_guildkick_rqst() const;
  inline void clear_guildkick_rqst();
  static const int kGuildKickRqstFieldNumber = 3;
  inline ::google::protobuf::uint64 guildkick_rqst() const;
  inline void set_guildkick_rqst(::google::protobuf::uint64 value);

  // optional string GuildInvite_Rqst = 4;
  inline bool has_guildinvite_rqst() const;
  inline void clear_guildinvite_rqst();
  static const int kGuildInviteRqstFieldNumber = 4;
  inline const ::std::string& guildinvite_rqst() const;
  inline void set_guildinvite_rqst(const ::std::string& value);
  inline void set_guildinvite_rqst(const char* value);
  inline void set_guildinvite_rqst(const char* value, size_t size);
  inline ::std::string* mutable_guildinvite_rqst();
  inline ::std::string* release_guildinvite_rqst();
  inline void set_allocated_guildinvite_rqst(::std::string* guildinvite_rqst);

  // optional uint64 QueryOtherGuild_Rqst = 5;
  inline bool has_queryotherguild_rqst() const;
  inline void clear_queryotherguild_rqst();
  static const int kQueryOtherGuildRqstFieldNumber = 5;
  inline ::google::protobuf::uint64 queryotherguild_rqst() const;
  inline void set_queryotherguild_rqst(::google::protobuf::uint64 value);

  // optional .vmsg.CSGuildChgNoticeRqst ChgGuildNotice_Rqst = 6;
  inline bool has_chgguildnotice_rqst() const;
  inline void clear_chgguildnotice_rqst();
  static const int kChgGuildNoticeRqstFieldNumber = 6;
  inline const ::vmsg::CSGuildChgNoticeRqst& chgguildnotice_rqst() const;
  inline ::vmsg::CSGuildChgNoticeRqst* mutable_chgguildnotice_rqst();
  inline ::vmsg::CSGuildChgNoticeRqst* release_chgguildnotice_rqst();
  inline void set_allocated_chgguildnotice_rqst(::vmsg::CSGuildChgNoticeRqst* chgguildnotice_rqst);

  // optional uint64 AssignChairMan_Rqst = 7;
  inline bool has_assignchairman_rqst() const;
  inline void clear_assignchairman_rqst();
  static const int kAssignChairManRqstFieldNumber = 7;
  inline ::google::protobuf::uint64 assignchairman_rqst() const;
  inline void set_assignchairman_rqst(::google::protobuf::uint64 value);

  // optional .vmsg.CSGuildChgPriviRqst GuildChgPrivi_Rqst = 8;
  inline bool has_guildchgprivi_rqst() const;
  inline void clear_guildchgprivi_rqst();
  static const int kGuildChgPriviRqstFieldNumber = 8;
  inline const ::vmsg::CSGuildChgPriviRqst& guildchgprivi_rqst() const;
  inline ::vmsg::CSGuildChgPriviRqst* mutable_guildchgprivi_rqst();
  inline ::vmsg::CSGuildChgPriviRqst* release_guildchgprivi_rqst();
  inline void set_allocated_guildchgprivi_rqst(::vmsg::CSGuildChgPriviRqst* guildchgprivi_rqst);

  // optional .vmsg.CSGuildJoinReplyRqst GuildJoinReply_Rqst = 9;
  inline bool has_guildjoinreply_rqst() const;
  inline void clear_guildjoinreply_rqst();
  static const int kGuildJoinReplyRqstFieldNumber = 9;
  inline const ::vmsg::CSGuildJoinReplyRqst& guildjoinreply_rqst() const;
  inline ::vmsg::CSGuildJoinReplyRqst* mutable_guildjoinreply_rqst();
  inline ::vmsg::CSGuildJoinReplyRqst* release_guildjoinreply_rqst();
  inline void set_allocated_guildjoinreply_rqst(::vmsg::CSGuildJoinReplyRqst* guildjoinreply_rqst);

  // optional .vmsg.CSGuildInviteReplyRqst GuildInviteReply_Rqst = 10;
  inline bool has_guildinvitereply_rqst() const;
  inline void clear_guildinvitereply_rqst();
  static const int kGuildInviteReplyRqstFieldNumber = 10;
  inline const ::vmsg::CSGuildInviteReplyRqst& guildinvitereply_rqst() const;
  inline ::vmsg::CSGuildInviteReplyRqst* mutable_guildinvitereply_rqst();
  inline ::vmsg::CSGuildInviteReplyRqst* release_guildinvitereply_rqst();
  inline void set_allocated_guildinvitereply_rqst(::vmsg::CSGuildInviteReplyRqst* guildinvitereply_rqst);

  // optional uint64 DeleteMyGuildReq_Rqst = 12;
  inline bool has_deletemyguildreq_rqst() const;
  inline void clear_deletemyguildreq_rqst();
  static const int kDeleteMyGuildReqRqstFieldNumber = 12;
  inline ::google::protobuf::uint64 deletemyguildreq_rqst() const;
  inline void set_deletemyguildreq_rqst(::google::protobuf::uint64 value);

  // optional .vmsg.CSGuildSearchRqst GuildSearch_Rqst = 13;
  inline bool has_guildsearch_rqst() const;
  inline void clear_guildsearch_rqst();
  static const int kGuildSearchRqstFieldNumber = 13;
  inline const ::vmsg::CSGuildSearchRqst& guildsearch_rqst() const;
  inline ::vmsg::CSGuildSearchRqst* mutable_guildsearch_rqst();
  inline ::vmsg::CSGuildSearchRqst* release_guildsearch_rqst();
  inline void set_allocated_guildsearch_rqst(::vmsg::CSGuildSearchRqst* guildsearch_rqst);

  // optional .vmsg.CSGuildActInviteRqst ActInvite_Rqst = 14;
  inline bool has_actinvite_rqst() const;
  inline void clear_actinvite_rqst();
  static const int kActInviteRqstFieldNumber = 14;
  inline const ::vmsg::CSGuildActInviteRqst& actinvite_rqst() const;
  inline ::vmsg::CSGuildActInviteRqst* mutable_actinvite_rqst();
  inline ::vmsg::CSGuildActInviteRqst* release_actinvite_rqst();
  inline void set_allocated_actinvite_rqst(::vmsg::CSGuildActInviteRqst* actinvite_rqst);

  // optional uint32 BunEndNum_Rqst = 15;
  inline bool has_bunendnum_rqst() const;
  inline void clear_bunendnum_rqst();
  static const int kBunEndNumRqstFieldNumber = 15;
  inline ::google::protobuf::uint32 bunendnum_rqst() const;
  inline void set_bunendnum_rqst(::google::protobuf::uint32 value);

  // optional .vmsg.CSGuildThiefRqst ThiefEnd_Rqst = 16;
  inline bool has_thiefend_rqst() const;
  inline void clear_thiefend_rqst();
  static const int kThiefEndRqstFieldNumber = 16;
  inline const ::vmsg::CSGuildThiefRqst& thiefend_rqst() const;
  inline ::vmsg::CSGuildThiefRqst* mutable_thiefend_rqst();
  inline ::vmsg::CSGuildThiefRqst* release_thiefend_rqst();
  inline void set_allocated_thiefend_rqst(::vmsg::CSGuildThiefRqst* thiefend_rqst);

  // optional .vmsg.CSGuildActBlockEndRqst BlockEnd_Rqst = 17;
  inline bool has_blockend_rqst() const;
  inline void clear_blockend_rqst();
  static const int kBlockEndRqstFieldNumber = 17;
  inline const ::vmsg::CSGuildActBlockEndRqst& blockend_rqst() const;
  inline ::vmsg::CSGuildActBlockEndRqst* mutable_blockend_rqst();
  inline ::vmsg::CSGuildActBlockEndRqst* release_blockend_rqst();
  inline void set_allocated_blockend_rqst(::vmsg::CSGuildActBlockEndRqst* blockend_rqst);

  // optional uint32 ActTypeStart_Rqst = 18;
  inline bool has_acttypestart_rqst() const;
  inline void clear_acttypestart_rqst();
  static const int kActTypeStartRqstFieldNumber = 18;
  inline ::google::protobuf::uint32 acttypestart_rqst() const;
  inline void set_acttypestart_rqst(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildRequest)
 private:
  inline void set_has_guildcreate_rqst();
  inline void clear_has_guildcreate_rqst();
  inline void set_has_guildjoin_rqst();
  inline void clear_has_guildjoin_rqst();
  inline void set_has_guildkick_rqst();
  inline void clear_has_guildkick_rqst();
  inline void set_has_guildinvite_rqst();
  inline void clear_has_guildinvite_rqst();
  inline void set_has_queryotherguild_rqst();
  inline void clear_has_queryotherguild_rqst();
  inline void set_has_chgguildnotice_rqst();
  inline void clear_has_chgguildnotice_rqst();
  inline void set_has_assignchairman_rqst();
  inline void clear_has_assignchairman_rqst();
  inline void set_has_guildchgprivi_rqst();
  inline void clear_has_guildchgprivi_rqst();
  inline void set_has_guildjoinreply_rqst();
  inline void clear_has_guildjoinreply_rqst();
  inline void set_has_guildinvitereply_rqst();
  inline void clear_has_guildinvitereply_rqst();
  inline void set_has_deletemyguildreq_rqst();
  inline void clear_has_deletemyguildreq_rqst();
  inline void set_has_guildsearch_rqst();
  inline void clear_has_guildsearch_rqst();
  inline void set_has_actinvite_rqst();
  inline void clear_has_actinvite_rqst();
  inline void set_has_bunendnum_rqst();
  inline void clear_has_bunendnum_rqst();
  inline void set_has_thiefend_rqst();
  inline void clear_has_thiefend_rqst();
  inline void set_has_blockend_rqst();
  inline void clear_has_blockend_rqst();
  inline void set_has_acttypestart_rqst();
  inline void clear_has_acttypestart_rqst();

  ::vmsg::CSGuildCreateRqst* guildcreate_rqst_;
  ::google::protobuf::uint64 guildjoin_rqst_;
  ::google::protobuf::uint64 guildkick_rqst_;
  ::std::string* guildinvite_rqst_;
  ::google::protobuf::uint64 queryotherguild_rqst_;
  ::vmsg::CSGuildChgNoticeRqst* chgguildnotice_rqst_;
  ::google::protobuf::uint64 assignchairman_rqst_;
  ::vmsg::CSGuildChgPriviRqst* guildchgprivi_rqst_;
  ::vmsg::CSGuildJoinReplyRqst* guildjoinreply_rqst_;
  ::vmsg::CSGuildInviteReplyRqst* guildinvitereply_rqst_;
  ::google::protobuf::uint64 deletemyguildreq_rqst_;
  ::vmsg::CSGuildSearchRqst* guildsearch_rqst_;
  ::vmsg::CSGuildActInviteRqst* actinvite_rqst_;
  ::vmsg::CSGuildThiefRqst* thiefend_rqst_;
  ::google::protobuf::uint32 bunendnum_rqst_;
  ::google::protobuf::uint32 acttypestart_rqst_;
  ::vmsg::CSGuildActBlockEndRqst* blockend_rqst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class CSGuildRespond : public ::google::protobuf::MessageLite {
 public:
  CSGuildRespond();
  virtual ~CSGuildRespond();

  CSGuildRespond(const CSGuildRespond& from);

  inline CSGuildRespond& operator=(const CSGuildRespond& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSGuildRespond& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSGuildRespond* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSGuildRespond* other);

  // implements Message ----------------------------------------------

  CSGuildRespond* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSGuildRespond& from);
  void MergeFrom(const CSGuildRespond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 GuildJoin_Rsp = 1;
  inline bool has_guildjoin_rsp() const;
  inline void clear_guildjoin_rsp();
  static const int kGuildJoinRspFieldNumber = 1;
  inline ::google::protobuf::uint64 guildjoin_rsp() const;
  inline void set_guildjoin_rsp(::google::protobuf::uint64 value);

  // optional uint64 GuildKick_Rsp = 2;
  inline bool has_guildkick_rsp() const;
  inline void clear_guildkick_rsp();
  static const int kGuildKickRspFieldNumber = 2;
  inline ::google::protobuf::uint64 guildkick_rsp() const;
  inline void set_guildkick_rsp(::google::protobuf::uint64 value);

  // optional .vmsg.CSGuildInfoRsp GuildInfo_Rsp = 5;
  inline bool has_guildinfo_rsp() const;
  inline void clear_guildinfo_rsp();
  static const int kGuildInfoRspFieldNumber = 5;
  inline const ::vmsg::CSGuildInfoRsp& guildinfo_rsp() const;
  inline ::vmsg::CSGuildInfoRsp* mutable_guildinfo_rsp();
  inline ::vmsg::CSGuildInfoRsp* release_guildinfo_rsp();
  inline void set_allocated_guildinfo_rsp(::vmsg::CSGuildInfoRsp* guildinfo_rsp);

  // optional .vmsg.CSMyGuildReqRsp MyGuildReq_Rsp = 6;
  inline bool has_myguildreq_rsp() const;
  inline void clear_myguildreq_rsp();
  static const int kMyGuildReqRspFieldNumber = 6;
  inline const ::vmsg::CSMyGuildReqRsp& myguildreq_rsp() const;
  inline ::vmsg::CSMyGuildReqRsp* mutable_myguildreq_rsp();
  inline ::vmsg::CSMyGuildReqRsp* release_myguildreq_rsp();
  inline void set_allocated_myguildreq_rsp(::vmsg::CSMyGuildReqRsp* myguildreq_rsp);

  // optional .vmsg.CSOtherGuildRsp OtherGuild_Rsp = 7;
  inline bool has_otherguild_rsp() const;
  inline void clear_otherguild_rsp();
  static const int kOtherGuildRspFieldNumber = 7;
  inline const ::vmsg::CSOtherGuildRsp& otherguild_rsp() const;
  inline ::vmsg::CSOtherGuildRsp* mutable_otherguild_rsp();
  inline ::vmsg::CSOtherGuildRsp* release_otherguild_rsp();
  inline void set_allocated_otherguild_rsp(::vmsg::CSOtherGuildRsp* otherguild_rsp);

  // optional uint64 AssignChairMan_Rsp = 8;
  inline bool has_assignchairman_rsp() const;
  inline void clear_assignchairman_rsp();
  static const int kAssignChairManRspFieldNumber = 8;
  inline ::google::protobuf::uint64 assignchairman_rsp() const;
  inline void set_assignchairman_rsp(::google::protobuf::uint64 value);

  // optional .vmsg.CSQueryGuildLstRsp QueryGuildLst_Rsp = 9;
  inline bool has_queryguildlst_rsp() const;
  inline void clear_queryguildlst_rsp();
  static const int kQueryGuildLstRspFieldNumber = 9;
  inline const ::vmsg::CSQueryGuildLstRsp& queryguildlst_rsp() const;
  inline ::vmsg::CSQueryGuildLstRsp* mutable_queryguildlst_rsp();
  inline ::vmsg::CSQueryGuildLstRsp* release_queryguildlst_rsp();
  inline void set_allocated_queryguildlst_rsp(::vmsg::CSQueryGuildLstRsp* queryguildlst_rsp);

  // optional .vmsg.CSGuildInfoRsp GuildCreate_Rsp = 10;
  inline bool has_guildcreate_rsp() const;
  inline void clear_guildcreate_rsp();
  static const int kGuildCreateRspFieldNumber = 10;
  inline const ::vmsg::CSGuildInfoRsp& guildcreate_rsp() const;
  inline ::vmsg::CSGuildInfoRsp* mutable_guildcreate_rsp();
  inline ::vmsg::CSGuildInfoRsp* release_guildcreate_rsp();
  inline void set_allocated_guildcreate_rsp(::vmsg::CSGuildInfoRsp* guildcreate_rsp);

  // optional .vmsg.CSAllGuildReqRsp AllGuildReq_Rsp = 11;
  inline bool has_allguildreq_rsp() const;
  inline void clear_allguildreq_rsp();
  static const int kAllGuildReqRspFieldNumber = 11;
  inline const ::vmsg::CSAllGuildReqRsp& allguildreq_rsp() const;
  inline ::vmsg::CSAllGuildReqRsp* mutable_allguildreq_rsp();
  inline ::vmsg::CSAllGuildReqRsp* release_allguildreq_rsp();
  inline void set_allocated_allguildreq_rsp(::vmsg::CSAllGuildReqRsp* allguildreq_rsp);

  // optional .vmsg.CSGuildJoinReplyRsp GuildReplyJoin_Rsp = 12;
  inline bool has_guildreplyjoin_rsp() const;
  inline void clear_guildreplyjoin_rsp();
  static const int kGuildReplyJoinRspFieldNumber = 12;
  inline const ::vmsg::CSGuildJoinReplyRsp& guildreplyjoin_rsp() const;
  inline ::vmsg::CSGuildJoinReplyRsp* mutable_guildreplyjoin_rsp();
  inline ::vmsg::CSGuildJoinReplyRsp* release_guildreplyjoin_rsp();
  inline void set_allocated_guildreplyjoin_rsp(::vmsg::CSGuildJoinReplyRsp* guildreplyjoin_rsp);

  // optional uint64 DeleteMyGuildReq_Rsp = 13;
  inline bool has_deletemyguildreq_rsp() const;
  inline void clear_deletemyguildreq_rsp();
  static const int kDeleteMyGuildReqRspFieldNumber = 13;
  inline ::google::protobuf::uint64 deletemyguildreq_rsp() const;
  inline void set_deletemyguildreq_rsp(::google::protobuf::uint64 value);

  // optional .vmsg.CSGuildChgPriviRsp GuildChgPrivi_Rsp = 14;
  inline bool has_guildchgprivi_rsp() const;
  inline void clear_guildchgprivi_rsp();
  static const int kGuildChgPriviRspFieldNumber = 14;
  inline const ::vmsg::CSGuildChgPriviRsp& guildchgprivi_rsp() const;
  inline ::vmsg::CSGuildChgPriviRsp* mutable_guildchgprivi_rsp();
  inline ::vmsg::CSGuildChgPriviRsp* release_guildchgprivi_rsp();
  inline void set_allocated_guildchgprivi_rsp(::vmsg::CSGuildChgPriviRsp* guildchgprivi_rsp);

  // optional .vmsg.CSGuildSearchRsp GuildSearch_Rsp = 15;
  inline bool has_guildsearch_rsp() const;
  inline void clear_guildsearch_rsp();
  static const int kGuildSearchRspFieldNumber = 15;
  inline const ::vmsg::CSGuildSearchRsp& guildsearch_rsp() const;
  inline ::vmsg::CSGuildSearchRsp* mutable_guildsearch_rsp();
  inline ::vmsg::CSGuildSearchRsp* release_guildsearch_rsp();
  inline void set_allocated_guildsearch_rsp(::vmsg::CSGuildSearchRsp* guildsearch_rsp);

  // optional uint32 Impeach_Rsp = 16;
  inline bool has_impeach_rsp() const;
  inline void clear_impeach_rsp();
  static const int kImpeachRspFieldNumber = 16;
  inline ::google::protobuf::uint32 impeach_rsp() const;
  inline void set_impeach_rsp(::google::protobuf::uint32 value);

  // optional .vmsg.CSGuildDailyActRsp GuildDailyAct_Rsp = 17;
  inline bool has_guilddailyact_rsp() const;
  inline void clear_guilddailyact_rsp();
  static const int kGuildDailyActRspFieldNumber = 17;
  inline const ::vmsg::CSGuildDailyActRsp& guilddailyact_rsp() const;
  inline ::vmsg::CSGuildDailyActRsp* mutable_guilddailyact_rsp();
  inline ::vmsg::CSGuildDailyActRsp* release_guilddailyact_rsp();
  inline void set_allocated_guilddailyact_rsp(::vmsg::CSGuildDailyActRsp* guilddailyact_rsp);

  // optional .vmsg.CSGuildInviteMemberRsp GuildInviteMember_Rsp = 18;
  inline bool has_guildinvitemember_rsp() const;
  inline void clear_guildinvitemember_rsp();
  static const int kGuildInviteMemberRspFieldNumber = 18;
  inline const ::vmsg::CSGuildInviteMemberRsp& guildinvitemember_rsp() const;
  inline ::vmsg::CSGuildInviteMemberRsp* mutable_guildinvitemember_rsp();
  inline ::vmsg::CSGuildInviteMemberRsp* release_guildinvitemember_rsp();
  inline void set_allocated_guildinvitemember_rsp(::vmsg::CSGuildInviteMemberRsp* guildinvitemember_rsp);

  // optional .vmsg.CSGuildBunEndRsp GuildBunEnd_Rsp = 19;
  inline bool has_guildbunend_rsp() const;
  inline void clear_guildbunend_rsp();
  static const int kGuildBunEndRspFieldNumber = 19;
  inline const ::vmsg::CSGuildBunEndRsp& guildbunend_rsp() const;
  inline ::vmsg::CSGuildBunEndRsp* mutable_guildbunend_rsp();
  inline ::vmsg::CSGuildBunEndRsp* release_guildbunend_rsp();
  inline void set_allocated_guildbunend_rsp(::vmsg::CSGuildBunEndRsp* guildbunend_rsp);

  // optional .vmsg.CSGuildStatNotify GuildStatNotify_Rsp = 20;
  inline bool has_guildstatnotify_rsp() const;
  inline void clear_guildstatnotify_rsp();
  static const int kGuildStatNotifyRspFieldNumber = 20;
  inline const ::vmsg::CSGuildStatNotify& guildstatnotify_rsp() const;
  inline ::vmsg::CSGuildStatNotify* mutable_guildstatnotify_rsp();
  inline ::vmsg::CSGuildStatNotify* release_guildstatnotify_rsp();
  inline void set_allocated_guildstatnotify_rsp(::vmsg::CSGuildStatNotify* guildstatnotify_rsp);

  // @@protoc_insertion_point(class_scope:vmsg.CSGuildRespond)
 private:
  inline void set_has_guildjoin_rsp();
  inline void clear_has_guildjoin_rsp();
  inline void set_has_guildkick_rsp();
  inline void clear_has_guildkick_rsp();
  inline void set_has_guildinfo_rsp();
  inline void clear_has_guildinfo_rsp();
  inline void set_has_myguildreq_rsp();
  inline void clear_has_myguildreq_rsp();
  inline void set_has_otherguild_rsp();
  inline void clear_has_otherguild_rsp();
  inline void set_has_assignchairman_rsp();
  inline void clear_has_assignchairman_rsp();
  inline void set_has_queryguildlst_rsp();
  inline void clear_has_queryguildlst_rsp();
  inline void set_has_guildcreate_rsp();
  inline void clear_has_guildcreate_rsp();
  inline void set_has_allguildreq_rsp();
  inline void clear_has_allguildreq_rsp();
  inline void set_has_guildreplyjoin_rsp();
  inline void clear_has_guildreplyjoin_rsp();
  inline void set_has_deletemyguildreq_rsp();
  inline void clear_has_deletemyguildreq_rsp();
  inline void set_has_guildchgprivi_rsp();
  inline void clear_has_guildchgprivi_rsp();
  inline void set_has_guildsearch_rsp();
  inline void clear_has_guildsearch_rsp();
  inline void set_has_impeach_rsp();
  inline void clear_has_impeach_rsp();
  inline void set_has_guilddailyact_rsp();
  inline void clear_has_guilddailyact_rsp();
  inline void set_has_guildinvitemember_rsp();
  inline void clear_has_guildinvitemember_rsp();
  inline void set_has_guildbunend_rsp();
  inline void clear_has_guildbunend_rsp();
  inline void set_has_guildstatnotify_rsp();
  inline void clear_has_guildstatnotify_rsp();

  ::google::protobuf::uint64 guildjoin_rsp_;
  ::google::protobuf::uint64 guildkick_rsp_;
  ::vmsg::CSGuildInfoRsp* guildinfo_rsp_;
  ::vmsg::CSMyGuildReqRsp* myguildreq_rsp_;
  ::vmsg::CSOtherGuildRsp* otherguild_rsp_;
  ::google::protobuf::uint64 assignchairman_rsp_;
  ::vmsg::CSQueryGuildLstRsp* queryguildlst_rsp_;
  ::vmsg::CSGuildInfoRsp* guildcreate_rsp_;
  ::vmsg::CSAllGuildReqRsp* allguildreq_rsp_;
  ::vmsg::CSGuildJoinReplyRsp* guildreplyjoin_rsp_;
  ::google::protobuf::uint64 deletemyguildreq_rsp_;
  ::vmsg::CSGuildChgPriviRsp* guildchgprivi_rsp_;
  ::vmsg::CSGuildSearchRsp* guildsearch_rsp_;
  ::vmsg::CSGuildDailyActRsp* guilddailyact_rsp_;
  ::vmsg::CSGuildInviteMemberRsp* guildinvitemember_rsp_;
  ::vmsg::CSGuildBunEndRsp* guildbunend_rsp_;
  ::vmsg::CSGuildStatNotify* guildstatnotify_rsp_;
  ::google::protobuf::uint32 impeach_rsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSGuildMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSGuildMsg_2eproto();
  friend void protobuf_ShutdownFile_CSGuildMsg_2eproto();

  void InitAsDefaultInstance();
  static CSGuildRespond* default_instance_;
};
// ===================================================================


// ===================================================================

// CSGuildBrief

// required uint64 GuildID = 1;
inline bool CSGuildBrief::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildBrief::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildBrief::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildBrief::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 CSGuildBrief::guildid() const {
  return guildid_;
}
inline void CSGuildBrief::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// required string GuildName = 2;
inline bool CSGuildBrief::has_guildname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildBrief::set_has_guildname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildBrief::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildBrief::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& CSGuildBrief::guildname() const {
  return *guildname_;
}
inline void CSGuildBrief::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void CSGuildBrief::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void CSGuildBrief::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildBrief::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* CSGuildBrief::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildBrief::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 MemberNum = 3;
inline bool CSGuildBrief::has_membernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildBrief::set_has_membernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildBrief::clear_has_membernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildBrief::clear_membernum() {
  membernum_ = 0u;
  clear_has_membernum();
}
inline ::google::protobuf::uint32 CSGuildBrief::membernum() const {
  return membernum_;
}
inline void CSGuildBrief::set_membernum(::google::protobuf::uint32 value) {
  set_has_membernum();
  membernum_ = value;
}

// required uint32 Rank = 4;
inline bool CSGuildBrief::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildBrief::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildBrief::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildBrief::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSGuildBrief::rank() const {
  return rank_;
}
inline void CSGuildBrief::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 Exp = 5;
inline bool CSGuildBrief::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildBrief::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildBrief::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildBrief::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 CSGuildBrief::exp() const {
  return exp_;
}
inline void CSGuildBrief::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 Level = 6;
inline bool CSGuildBrief::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildBrief::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildBrief::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildBrief::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSGuildBrief::level() const {
  return level_;
}
inline void CSGuildBrief::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required string ChairManName = 7;
inline bool CSGuildBrief::has_chairmanname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildBrief::set_has_chairmanname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildBrief::clear_has_chairmanname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildBrief::clear_chairmanname() {
  if (chairmanname_ != &::google::protobuf::internal::kEmptyString) {
    chairmanname_->clear();
  }
  clear_has_chairmanname();
}
inline const ::std::string& CSGuildBrief::chairmanname() const {
  return *chairmanname_;
}
inline void CSGuildBrief::set_chairmanname(const ::std::string& value) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::kEmptyString) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(value);
}
inline void CSGuildBrief::set_chairmanname(const char* value) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::kEmptyString) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(value);
}
inline void CSGuildBrief::set_chairmanname(const char* value, size_t size) {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::kEmptyString) {
    chairmanname_ = new ::std::string;
  }
  chairmanname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildBrief::mutable_chairmanname() {
  set_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::kEmptyString) {
    chairmanname_ = new ::std::string;
  }
  return chairmanname_;
}
inline ::std::string* CSGuildBrief::release_chairmanname() {
  clear_has_chairmanname();
  if (chairmanname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chairmanname_;
    chairmanname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildBrief::set_allocated_chairmanname(::std::string* chairmanname) {
  if (chairmanname_ != &::google::protobuf::internal::kEmptyString) {
    delete chairmanname_;
  }
  if (chairmanname) {
    set_has_chairmanname();
    chairmanname_ = chairmanname;
  } else {
    clear_has_chairmanname();
    chairmanname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string Notice = 8;
inline bool CSGuildBrief::has_notice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSGuildBrief::set_has_notice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSGuildBrief::clear_has_notice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSGuildBrief::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& CSGuildBrief::notice() const {
  return *notice_;
}
inline void CSGuildBrief::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildBrief::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildBrief::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildBrief::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* CSGuildBrief::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildBrief::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSGuildMemberBrief

// required uint64 Uin = 1;
inline bool CSGuildMemberBrief::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildMemberBrief::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildMemberBrief::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildMemberBrief::clear_uin() {
  uin_ = GOOGLE_ULONGLONG(0);
  clear_has_uin();
}
inline ::google::protobuf::uint64 CSGuildMemberBrief::uin() const {
  return uin_;
}
inline void CSGuildMemberBrief::set_uin(::google::protobuf::uint64 value) {
  set_has_uin();
  uin_ = value;
}

// required string Name = 2;
inline bool CSGuildMemberBrief::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildMemberBrief::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildMemberBrief::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildMemberBrief::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSGuildMemberBrief::name() const {
  return *name_;
}
inline void CSGuildMemberBrief::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildMemberBrief::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildMemberBrief::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildMemberBrief::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSGuildMemberBrief::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildMemberBrief::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 Type = 3;
inline bool CSGuildMemberBrief::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildMemberBrief::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildMemberBrief::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildMemberBrief::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSGuildMemberBrief::type() const {
  return type_;
}
inline void CSGuildMemberBrief::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 Level = 4;
inline bool CSGuildMemberBrief::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildMemberBrief::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildMemberBrief::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildMemberBrief::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSGuildMemberBrief::level() const {
  return level_;
}
inline void CSGuildMemberBrief::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 ShowID = 5;
inline bool CSGuildMemberBrief::has_showid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildMemberBrief::set_has_showid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildMemberBrief::clear_has_showid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildMemberBrief::clear_showid() {
  showid_ = 0u;
  clear_has_showid();
}
inline ::google::protobuf::uint32 CSGuildMemberBrief::showid() const {
  return showid_;
}
inline void CSGuildMemberBrief::set_showid(::google::protobuf::uint32 value) {
  set_has_showid();
  showid_ = value;
}

// -------------------------------------------------------------------

// CSGuildMember

// required .vmsg.CSGuildMemberBrief Brief = 1;
inline bool CSGuildMember::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildMember::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildMember::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildMember::clear_brief() {
  if (brief_ != NULL) brief_->::vmsg::CSGuildMemberBrief::Clear();
  clear_has_brief();
}
inline const ::vmsg::CSGuildMemberBrief& CSGuildMember::brief() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return brief_ != NULL ? *brief_ : *default_instance().brief_;
#else
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
#endif
}
inline ::vmsg::CSGuildMemberBrief* CSGuildMember::mutable_brief() {
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::vmsg::CSGuildMemberBrief;
  return brief_;
}
inline ::vmsg::CSGuildMemberBrief* CSGuildMember::release_brief() {
  clear_has_brief();
  ::vmsg::CSGuildMemberBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void CSGuildMember::set_allocated_brief(::vmsg::CSGuildMemberBrief* brief) {
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// required uint32 LastLogin = 4;
inline bool CSGuildMember::has_lastlogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildMember::set_has_lastlogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildMember::clear_has_lastlogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildMember::clear_lastlogin() {
  lastlogin_ = 0u;
  clear_has_lastlogin();
}
inline ::google::protobuf::uint32 CSGuildMember::lastlogin() const {
  return lastlogin_;
}
inline void CSGuildMember::set_lastlogin(::google::protobuf::uint32 value) {
  set_has_lastlogin();
  lastlogin_ = value;
}

// required uint32 IsOnline = 5;
inline bool CSGuildMember::has_isonline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildMember::set_has_isonline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildMember::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildMember::clear_isonline() {
  isonline_ = 0u;
  clear_has_isonline();
}
inline ::google::protobuf::uint32 CSGuildMember::isonline() const {
  return isonline_;
}
inline void CSGuildMember::set_isonline(::google::protobuf::uint32 value) {
  set_has_isonline();
  isonline_ = value;
}

// -------------------------------------------------------------------

// CSGuildReq

// required int32 ReqTime = 1;
inline bool CSGuildReq::has_reqtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildReq::set_has_reqtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildReq::clear_has_reqtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildReq::clear_reqtime() {
  reqtime_ = 0;
  clear_has_reqtime();
}
inline ::google::protobuf::int32 CSGuildReq::reqtime() const {
  return reqtime_;
}
inline void CSGuildReq::set_reqtime(::google::protobuf::int32 value) {
  set_has_reqtime();
  reqtime_ = value;
}

// required string Name = 2;
inline bool CSGuildReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSGuildReq::name() const {
  return *name_;
}
inline void CSGuildReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSGuildReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSGuildReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 Level = 4;
inline bool CSGuildReq::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildReq::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSGuildReq::level() const {
  return level_;
}
inline void CSGuildReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint64 Uin = 5;
inline bool CSGuildReq::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildReq::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildReq::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildReq::clear_uin() {
  uin_ = GOOGLE_ULONGLONG(0);
  clear_has_uin();
}
inline ::google::protobuf::uint64 CSGuildReq::uin() const {
  return uin_;
}
inline void CSGuildReq::set_uin(::google::protobuf::uint64 value) {
  set_has_uin();
  uin_ = value;
}

// -------------------------------------------------------------------

// CSGuildCreateRqst

// required string GuildName = 1;
inline bool CSGuildCreateRqst::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildCreateRqst::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildCreateRqst::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildCreateRqst::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& CSGuildCreateRqst::guildname() const {
  return *guildname_;
}
inline void CSGuildCreateRqst::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void CSGuildCreateRqst::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
}
inline void CSGuildCreateRqst::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildCreateRqst::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    guildname_ = new ::std::string;
  }
  return guildname_;
}
inline ::std::string* CSGuildCreateRqst::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildCreateRqst::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::kEmptyString) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSGuildInfoRsp

// required .vmsg.CSGuildBrief GuildBrief = 1;
inline bool CSGuildInfoRsp::has_guildbrief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildInfoRsp::set_has_guildbrief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildInfoRsp::clear_has_guildbrief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildInfoRsp::clear_guildbrief() {
  if (guildbrief_ != NULL) guildbrief_->::vmsg::CSGuildBrief::Clear();
  clear_has_guildbrief();
}
inline const ::vmsg::CSGuildBrief& CSGuildInfoRsp::guildbrief() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance().guildbrief_;
#else
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance_->guildbrief_;
#endif
}
inline ::vmsg::CSGuildBrief* CSGuildInfoRsp::mutable_guildbrief() {
  set_has_guildbrief();
  if (guildbrief_ == NULL) guildbrief_ = new ::vmsg::CSGuildBrief;
  return guildbrief_;
}
inline ::vmsg::CSGuildBrief* CSGuildInfoRsp::release_guildbrief() {
  clear_has_guildbrief();
  ::vmsg::CSGuildBrief* temp = guildbrief_;
  guildbrief_ = NULL;
  return temp;
}
inline void CSGuildInfoRsp::set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief) {
  delete guildbrief_;
  guildbrief_ = guildbrief;
  if (guildbrief) {
    set_has_guildbrief();
  } else {
    clear_has_guildbrief();
  }
}

// repeated .vmsg.CSGuildMember GuildMemberLst = 2;
inline int CSGuildInfoRsp::guildmemberlst_size() const {
  return guildmemberlst_.size();
}
inline void CSGuildInfoRsp::clear_guildmemberlst() {
  guildmemberlst_.Clear();
}
inline const ::vmsg::CSGuildMember& CSGuildInfoRsp::guildmemberlst(int index) const {
  return guildmemberlst_.Get(index);
}
inline ::vmsg::CSGuildMember* CSGuildInfoRsp::mutable_guildmemberlst(int index) {
  return guildmemberlst_.Mutable(index);
}
inline ::vmsg::CSGuildMember* CSGuildInfoRsp::add_guildmemberlst() {
  return guildmemberlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >&
CSGuildInfoRsp::guildmemberlst() const {
  return guildmemberlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >*
CSGuildInfoRsp::mutable_guildmemberlst() {
  return &guildmemberlst_;
}

// required string Notice = 3;
inline bool CSGuildInfoRsp::has_notice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildInfoRsp::set_has_notice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildInfoRsp::clear_has_notice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildInfoRsp::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& CSGuildInfoRsp::notice() const {
  return *notice_;
}
inline void CSGuildInfoRsp::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildInfoRsp::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildInfoRsp::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildInfoRsp::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* CSGuildInfoRsp::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildInfoRsp::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 ImpeachUin = 4;
inline bool CSGuildInfoRsp::has_impeachuin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildInfoRsp::set_has_impeachuin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildInfoRsp::clear_has_impeachuin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildInfoRsp::clear_impeachuin() {
  impeachuin_ = GOOGLE_ULONGLONG(0);
  clear_has_impeachuin();
}
inline ::google::protobuf::uint64 CSGuildInfoRsp::impeachuin() const {
  return impeachuin_;
}
inline void CSGuildInfoRsp::set_impeachuin(::google::protobuf::uint64 value) {
  set_has_impeachuin();
  impeachuin_ = value;
}

// optional uint32 ImpeachTime = 5;
inline bool CSGuildInfoRsp::has_impeachtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildInfoRsp::set_has_impeachtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildInfoRsp::clear_has_impeachtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildInfoRsp::clear_impeachtime() {
  impeachtime_ = 0u;
  clear_has_impeachtime();
}
inline ::google::protobuf::uint32 CSGuildInfoRsp::impeachtime() const {
  return impeachtime_;
}
inline void CSGuildInfoRsp::set_impeachtime(::google::protobuf::uint32 value) {
  set_has_impeachtime();
  impeachtime_ = value;
}

// -------------------------------------------------------------------

// CSGuildMemberLstRsp

// repeated .vmsg.CSGuildMember GuildMemberLst = 1;
inline int CSGuildMemberLstRsp::guildmemberlst_size() const {
  return guildmemberlst_.size();
}
inline void CSGuildMemberLstRsp::clear_guildmemberlst() {
  guildmemberlst_.Clear();
}
inline const ::vmsg::CSGuildMember& CSGuildMemberLstRsp::guildmemberlst(int index) const {
  return guildmemberlst_.Get(index);
}
inline ::vmsg::CSGuildMember* CSGuildMemberLstRsp::mutable_guildmemberlst(int index) {
  return guildmemberlst_.Mutable(index);
}
inline ::vmsg::CSGuildMember* CSGuildMemberLstRsp::add_guildmemberlst() {
  return guildmemberlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >&
CSGuildMemberLstRsp::guildmemberlst() const {
  return guildmemberlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMember >*
CSGuildMemberLstRsp::mutable_guildmemberlst() {
  return &guildmemberlst_;
}

// -------------------------------------------------------------------

// CSMyGuildReqRsp

// repeated uint64 GuildIDLst = 1;
inline int CSMyGuildReqRsp::guildidlst_size() const {
  return guildidlst_.size();
}
inline void CSMyGuildReqRsp::clear_guildidlst() {
  guildidlst_.Clear();
}
inline ::google::protobuf::uint64 CSMyGuildReqRsp::guildidlst(int index) const {
  return guildidlst_.Get(index);
}
inline void CSMyGuildReqRsp::set_guildidlst(int index, ::google::protobuf::uint64 value) {
  guildidlst_.Set(index, value);
}
inline void CSMyGuildReqRsp::add_guildidlst(::google::protobuf::uint64 value) {
  guildidlst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSMyGuildReqRsp::guildidlst() const {
  return guildidlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSMyGuildReqRsp::mutable_guildidlst() {
  return &guildidlst_;
}

// -------------------------------------------------------------------

// CSAllGuildReqRsp

// repeated .vmsg.CSGuildReq GuildReqLst = 1;
inline int CSAllGuildReqRsp::guildreqlst_size() const {
  return guildreqlst_.size();
}
inline void CSAllGuildReqRsp::clear_guildreqlst() {
  guildreqlst_.Clear();
}
inline const ::vmsg::CSGuildReq& CSAllGuildReqRsp::guildreqlst(int index) const {
  return guildreqlst_.Get(index);
}
inline ::vmsg::CSGuildReq* CSAllGuildReqRsp::mutable_guildreqlst(int index) {
  return guildreqlst_.Mutable(index);
}
inline ::vmsg::CSGuildReq* CSAllGuildReqRsp::add_guildreqlst() {
  return guildreqlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildReq >&
CSAllGuildReqRsp::guildreqlst() const {
  return guildreqlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildReq >*
CSAllGuildReqRsp::mutable_guildreqlst() {
  return &guildreqlst_;
}

// -------------------------------------------------------------------

// CSGuildChgPriviRqst

// required uint64 ChgUin = 1;
inline bool CSGuildChgPriviRqst::has_chguin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildChgPriviRqst::set_has_chguin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildChgPriviRqst::clear_has_chguin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildChgPriviRqst::clear_chguin() {
  chguin_ = GOOGLE_ULONGLONG(0);
  clear_has_chguin();
}
inline ::google::protobuf::uint64 CSGuildChgPriviRqst::chguin() const {
  return chguin_;
}
inline void CSGuildChgPriviRqst::set_chguin(::google::protobuf::uint64 value) {
  set_has_chguin();
  chguin_ = value;
}

// required uint32 NewPrivi = 2;
inline bool CSGuildChgPriviRqst::has_newprivi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildChgPriviRqst::set_has_newprivi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildChgPriviRqst::clear_has_newprivi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildChgPriviRqst::clear_newprivi() {
  newprivi_ = 0u;
  clear_has_newprivi();
}
inline ::google::protobuf::uint32 CSGuildChgPriviRqst::newprivi() const {
  return newprivi_;
}
inline void CSGuildChgPriviRqst::set_newprivi(::google::protobuf::uint32 value) {
  set_has_newprivi();
  newprivi_ = value;
}

// -------------------------------------------------------------------

// CSGuildChgPriviRsp

// required uint64 ChgUin = 1;
inline bool CSGuildChgPriviRsp::has_chguin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildChgPriviRsp::set_has_chguin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildChgPriviRsp::clear_has_chguin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildChgPriviRsp::clear_chguin() {
  chguin_ = GOOGLE_ULONGLONG(0);
  clear_has_chguin();
}
inline ::google::protobuf::uint64 CSGuildChgPriviRsp::chguin() const {
  return chguin_;
}
inline void CSGuildChgPriviRsp::set_chguin(::google::protobuf::uint64 value) {
  set_has_chguin();
  chguin_ = value;
}

// required uint32 NewPrivi = 2;
inline bool CSGuildChgPriviRsp::has_newprivi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildChgPriviRsp::set_has_newprivi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildChgPriviRsp::clear_has_newprivi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildChgPriviRsp::clear_newprivi() {
  newprivi_ = 0u;
  clear_has_newprivi();
}
inline ::google::protobuf::uint32 CSGuildChgPriviRsp::newprivi() const {
  return newprivi_;
}
inline void CSGuildChgPriviRsp::set_newprivi(::google::protobuf::uint32 value) {
  set_has_newprivi();
  newprivi_ = value;
}

// -------------------------------------------------------------------

// CSGuildChgNoticeRqst

// required string Notice = 1;
inline bool CSGuildChgNoticeRqst::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildChgNoticeRqst::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildChgNoticeRqst::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildChgNoticeRqst::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& CSGuildChgNoticeRqst::notice() const {
  return *notice_;
}
inline void CSGuildChgNoticeRqst::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildChgNoticeRqst::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CSGuildChgNoticeRqst::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildChgNoticeRqst::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* CSGuildChgNoticeRqst::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildChgNoticeRqst::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSGuildJoinReplyRqst

// repeated uint64 JoinUinLst = 1;
inline int CSGuildJoinReplyRqst::joinuinlst_size() const {
  return joinuinlst_.size();
}
inline void CSGuildJoinReplyRqst::clear_joinuinlst() {
  joinuinlst_.Clear();
}
inline ::google::protobuf::uint64 CSGuildJoinReplyRqst::joinuinlst(int index) const {
  return joinuinlst_.Get(index);
}
inline void CSGuildJoinReplyRqst::set_joinuinlst(int index, ::google::protobuf::uint64 value) {
  joinuinlst_.Set(index, value);
}
inline void CSGuildJoinReplyRqst::add_joinuinlst(::google::protobuf::uint64 value) {
  joinuinlst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSGuildJoinReplyRqst::joinuinlst() const {
  return joinuinlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSGuildJoinReplyRqst::mutable_joinuinlst() {
  return &joinuinlst_;
}

// required uint32 Reply = 2;
inline bool CSGuildJoinReplyRqst::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildJoinReplyRqst::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildJoinReplyRqst::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildJoinReplyRqst::clear_reply() {
  reply_ = 0u;
  clear_has_reply();
}
inline ::google::protobuf::uint32 CSGuildJoinReplyRqst::reply() const {
  return reply_;
}
inline void CSGuildJoinReplyRqst::set_reply(::google::protobuf::uint32 value) {
  set_has_reply();
  reply_ = value;
}

// -------------------------------------------------------------------

// CSGuildJoinReplyRsp

// repeated uint64 JoinUinLst = 1;
inline int CSGuildJoinReplyRsp::joinuinlst_size() const {
  return joinuinlst_.size();
}
inline void CSGuildJoinReplyRsp::clear_joinuinlst() {
  joinuinlst_.Clear();
}
inline ::google::protobuf::uint64 CSGuildJoinReplyRsp::joinuinlst(int index) const {
  return joinuinlst_.Get(index);
}
inline void CSGuildJoinReplyRsp::set_joinuinlst(int index, ::google::protobuf::uint64 value) {
  joinuinlst_.Set(index, value);
}
inline void CSGuildJoinReplyRsp::add_joinuinlst(::google::protobuf::uint64 value) {
  joinuinlst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSGuildJoinReplyRsp::joinuinlst() const {
  return joinuinlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSGuildJoinReplyRsp::mutable_joinuinlst() {
  return &joinuinlst_;
}

// required uint32 Reply = 2;
inline bool CSGuildJoinReplyRsp::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildJoinReplyRsp::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildJoinReplyRsp::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildJoinReplyRsp::clear_reply() {
  reply_ = 0u;
  clear_has_reply();
}
inline ::google::protobuf::uint32 CSGuildJoinReplyRsp::reply() const {
  return reply_;
}
inline void CSGuildJoinReplyRsp::set_reply(::google::protobuf::uint32 value) {
  set_has_reply();
  reply_ = value;
}

// -------------------------------------------------------------------

// CSGuildJoinInNotify

// required uint64 GuildID = 1;
inline bool CSGuildJoinInNotify::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildJoinInNotify::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildJoinInNotify::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildJoinInNotify::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 CSGuildJoinInNotify::guildid() const {
  return guildid_;
}
inline void CSGuildJoinInNotify::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// required string GuildNick = 2;
inline bool CSGuildJoinInNotify::has_guildnick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildJoinInNotify::set_has_guildnick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildJoinInNotify::clear_has_guildnick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildJoinInNotify::clear_guildnick() {
  if (guildnick_ != &::google::protobuf::internal::kEmptyString) {
    guildnick_->clear();
  }
  clear_has_guildnick();
}
inline const ::std::string& CSGuildJoinInNotify::guildnick() const {
  return *guildnick_;
}
inline void CSGuildJoinInNotify::set_guildnick(const ::std::string& value) {
  set_has_guildnick();
  if (guildnick_ == &::google::protobuf::internal::kEmptyString) {
    guildnick_ = new ::std::string;
  }
  guildnick_->assign(value);
}
inline void CSGuildJoinInNotify::set_guildnick(const char* value) {
  set_has_guildnick();
  if (guildnick_ == &::google::protobuf::internal::kEmptyString) {
    guildnick_ = new ::std::string;
  }
  guildnick_->assign(value);
}
inline void CSGuildJoinInNotify::set_guildnick(const char* value, size_t size) {
  set_has_guildnick();
  if (guildnick_ == &::google::protobuf::internal::kEmptyString) {
    guildnick_ = new ::std::string;
  }
  guildnick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildJoinInNotify::mutable_guildnick() {
  set_has_guildnick();
  if (guildnick_ == &::google::protobuf::internal::kEmptyString) {
    guildnick_ = new ::std::string;
  }
  return guildnick_;
}
inline ::std::string* CSGuildJoinInNotify::release_guildnick() {
  clear_has_guildnick();
  if (guildnick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildnick_;
    guildnick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildJoinInNotify::set_allocated_guildnick(::std::string* guildnick) {
  if (guildnick_ != &::google::protobuf::internal::kEmptyString) {
    delete guildnick_;
  }
  if (guildnick) {
    set_has_guildnick();
    guildnick_ = guildnick;
  } else {
    clear_has_guildnick();
    guildnick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSGuildInviteReplyRqst

// required uint64 InviteGuild = 1;
inline bool CSGuildInviteReplyRqst::has_inviteguild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildInviteReplyRqst::set_has_inviteguild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildInviteReplyRqst::clear_has_inviteguild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildInviteReplyRqst::clear_inviteguild() {
  inviteguild_ = GOOGLE_ULONGLONG(0);
  clear_has_inviteguild();
}
inline ::google::protobuf::uint64 CSGuildInviteReplyRqst::inviteguild() const {
  return inviteguild_;
}
inline void CSGuildInviteReplyRqst::set_inviteguild(::google::protobuf::uint64 value) {
  set_has_inviteguild();
  inviteguild_ = value;
}

// required uint32 Reply = 2;
inline bool CSGuildInviteReplyRqst::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildInviteReplyRqst::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildInviteReplyRqst::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildInviteReplyRqst::clear_reply() {
  reply_ = 0u;
  clear_has_reply();
}
inline ::google::protobuf::uint32 CSGuildInviteReplyRqst::reply() const {
  return reply_;
}
inline void CSGuildInviteReplyRqst::set_reply(::google::protobuf::uint32 value) {
  set_has_reply();
  reply_ = value;
}

// -------------------------------------------------------------------

// CSOtherGuildRsp

// required .vmsg.CSGuildBrief GuildBrief = 1;
inline bool CSOtherGuildRsp::has_guildbrief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOtherGuildRsp::set_has_guildbrief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOtherGuildRsp::clear_has_guildbrief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOtherGuildRsp::clear_guildbrief() {
  if (guildbrief_ != NULL) guildbrief_->::vmsg::CSGuildBrief::Clear();
  clear_has_guildbrief();
}
inline const ::vmsg::CSGuildBrief& CSOtherGuildRsp::guildbrief() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance().guildbrief_;
#else
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance_->guildbrief_;
#endif
}
inline ::vmsg::CSGuildBrief* CSOtherGuildRsp::mutable_guildbrief() {
  set_has_guildbrief();
  if (guildbrief_ == NULL) guildbrief_ = new ::vmsg::CSGuildBrief;
  return guildbrief_;
}
inline ::vmsg::CSGuildBrief* CSOtherGuildRsp::release_guildbrief() {
  clear_has_guildbrief();
  ::vmsg::CSGuildBrief* temp = guildbrief_;
  guildbrief_ = NULL;
  return temp;
}
inline void CSOtherGuildRsp::set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief) {
  delete guildbrief_;
  guildbrief_ = guildbrief;
  if (guildbrief) {
    set_has_guildbrief();
  } else {
    clear_has_guildbrief();
  }
}

// repeated .vmsg.CSGuildMemberBrief GuildMemberLst = 2;
inline int CSOtherGuildRsp::guildmemberlst_size() const {
  return guildmemberlst_.size();
}
inline void CSOtherGuildRsp::clear_guildmemberlst() {
  guildmemberlst_.Clear();
}
inline const ::vmsg::CSGuildMemberBrief& CSOtherGuildRsp::guildmemberlst(int index) const {
  return guildmemberlst_.Get(index);
}
inline ::vmsg::CSGuildMemberBrief* CSOtherGuildRsp::mutable_guildmemberlst(int index) {
  return guildmemberlst_.Mutable(index);
}
inline ::vmsg::CSGuildMemberBrief* CSOtherGuildRsp::add_guildmemberlst() {
  return guildmemberlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMemberBrief >&
CSOtherGuildRsp::guildmemberlst() const {
  return guildmemberlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildMemberBrief >*
CSOtherGuildRsp::mutable_guildmemberlst() {
  return &guildmemberlst_;
}

// -------------------------------------------------------------------

// CSQueryGuildLstRsp

// repeated .vmsg.CSGuildBrief GuildLst = 3;
inline int CSQueryGuildLstRsp::guildlst_size() const {
  return guildlst_.size();
}
inline void CSQueryGuildLstRsp::clear_guildlst() {
  guildlst_.Clear();
}
inline const ::vmsg::CSGuildBrief& CSQueryGuildLstRsp::guildlst(int index) const {
  return guildlst_.Get(index);
}
inline ::vmsg::CSGuildBrief* CSQueryGuildLstRsp::mutable_guildlst(int index) {
  return guildlst_.Mutable(index);
}
inline ::vmsg::CSGuildBrief* CSQueryGuildLstRsp::add_guildlst() {
  return guildlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildBrief >&
CSQueryGuildLstRsp::guildlst() const {
  return guildlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSGuildBrief >*
CSQueryGuildLstRsp::mutable_guildlst() {
  return &guildlst_;
}

// repeated uint64 GuildReqLst = 4;
inline int CSQueryGuildLstRsp::guildreqlst_size() const {
  return guildreqlst_.size();
}
inline void CSQueryGuildLstRsp::clear_guildreqlst() {
  guildreqlst_.Clear();
}
inline ::google::protobuf::uint64 CSQueryGuildLstRsp::guildreqlst(int index) const {
  return guildreqlst_.Get(index);
}
inline void CSQueryGuildLstRsp::set_guildreqlst(int index, ::google::protobuf::uint64 value) {
  guildreqlst_.Set(index, value);
}
inline void CSQueryGuildLstRsp::add_guildreqlst(::google::protobuf::uint64 value) {
  guildreqlst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSQueryGuildLstRsp::guildreqlst() const {
  return guildreqlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSQueryGuildLstRsp::mutable_guildreqlst() {
  return &guildreqlst_;
}

// -------------------------------------------------------------------

// CSGuildSearchRqst

// required string SearchName = 1;
inline bool CSGuildSearchRqst::has_searchname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildSearchRqst::set_has_searchname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildSearchRqst::clear_has_searchname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildSearchRqst::clear_searchname() {
  if (searchname_ != &::google::protobuf::internal::kEmptyString) {
    searchname_->clear();
  }
  clear_has_searchname();
}
inline const ::std::string& CSGuildSearchRqst::searchname() const {
  return *searchname_;
}
inline void CSGuildSearchRqst::set_searchname(const ::std::string& value) {
  set_has_searchname();
  if (searchname_ == &::google::protobuf::internal::kEmptyString) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
}
inline void CSGuildSearchRqst::set_searchname(const char* value) {
  set_has_searchname();
  if (searchname_ == &::google::protobuf::internal::kEmptyString) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
}
inline void CSGuildSearchRqst::set_searchname(const char* value, size_t size) {
  set_has_searchname();
  if (searchname_ == &::google::protobuf::internal::kEmptyString) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildSearchRqst::mutable_searchname() {
  set_has_searchname();
  if (searchname_ == &::google::protobuf::internal::kEmptyString) {
    searchname_ = new ::std::string;
  }
  return searchname_;
}
inline ::std::string* CSGuildSearchRqst::release_searchname() {
  clear_has_searchname();
  if (searchname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = searchname_;
    searchname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildSearchRqst::set_allocated_searchname(::std::string* searchname) {
  if (searchname_ != &::google::protobuf::internal::kEmptyString) {
    delete searchname_;
  }
  if (searchname) {
    set_has_searchname();
    searchname_ = searchname;
  } else {
    clear_has_searchname();
    searchname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSGuildSearchRsp

// required .vmsg.CSGuildBrief GuildBrief = 1;
inline bool CSGuildSearchRsp::has_guildbrief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildSearchRsp::set_has_guildbrief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildSearchRsp::clear_has_guildbrief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildSearchRsp::clear_guildbrief() {
  if (guildbrief_ != NULL) guildbrief_->::vmsg::CSGuildBrief::Clear();
  clear_has_guildbrief();
}
inline const ::vmsg::CSGuildBrief& CSGuildSearchRsp::guildbrief() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance().guildbrief_;
#else
  return guildbrief_ != NULL ? *guildbrief_ : *default_instance_->guildbrief_;
#endif
}
inline ::vmsg::CSGuildBrief* CSGuildSearchRsp::mutable_guildbrief() {
  set_has_guildbrief();
  if (guildbrief_ == NULL) guildbrief_ = new ::vmsg::CSGuildBrief;
  return guildbrief_;
}
inline ::vmsg::CSGuildBrief* CSGuildSearchRsp::release_guildbrief() {
  clear_has_guildbrief();
  ::vmsg::CSGuildBrief* temp = guildbrief_;
  guildbrief_ = NULL;
  return temp;
}
inline void CSGuildSearchRsp::set_allocated_guildbrief(::vmsg::CSGuildBrief* guildbrief) {
  delete guildbrief_;
  guildbrief_ = guildbrief;
  if (guildbrief) {
    set_has_guildbrief();
  } else {
    clear_has_guildbrief();
  }
}

// -------------------------------------------------------------------

// CSGuildDailyActRsp

// required uint32 BunRemainNum = 1;
inline bool CSGuildDailyActRsp::has_bunremainnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildDailyActRsp::set_has_bunremainnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildDailyActRsp::clear_has_bunremainnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildDailyActRsp::clear_bunremainnum() {
  bunremainnum_ = 0u;
  clear_has_bunremainnum();
}
inline ::google::protobuf::uint32 CSGuildDailyActRsp::bunremainnum() const {
  return bunremainnum_;
}
inline void CSGuildDailyActRsp::set_bunremainnum(::google::protobuf::uint32 value) {
  set_has_bunremainnum();
  bunremainnum_ = value;
}

// required uint32 ThiefRemainNum = 2;
inline bool CSGuildDailyActRsp::has_thiefremainnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildDailyActRsp::set_has_thiefremainnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildDailyActRsp::clear_has_thiefremainnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildDailyActRsp::clear_thiefremainnum() {
  thiefremainnum_ = 0u;
  clear_has_thiefremainnum();
}
inline ::google::protobuf::uint32 CSGuildDailyActRsp::thiefremainnum() const {
  return thiefremainnum_;
}
inline void CSGuildDailyActRsp::set_thiefremainnum(::google::protobuf::uint32 value) {
  set_has_thiefremainnum();
  thiefremainnum_ = value;
}

// required uint32 BlockRemainNum = 3;
inline bool CSGuildDailyActRsp::has_blockremainnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildDailyActRsp::set_has_blockremainnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildDailyActRsp::clear_has_blockremainnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildDailyActRsp::clear_blockremainnum() {
  blockremainnum_ = 0u;
  clear_has_blockremainnum();
}
inline ::google::protobuf::uint32 CSGuildDailyActRsp::blockremainnum() const {
  return blockremainnum_;
}
inline void CSGuildDailyActRsp::set_blockremainnum(::google::protobuf::uint32 value) {
  set_has_blockremainnum();
  blockremainnum_ = value;
}

// -------------------------------------------------------------------

// CSGuildInviteMemberRsp

// required .vmsg.CSGuildMemberBrief MemberInfo = 1;
inline bool CSGuildInviteMemberRsp::has_memberinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildInviteMemberRsp::set_has_memberinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildInviteMemberRsp::clear_has_memberinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildInviteMemberRsp::clear_memberinfo() {
  if (memberinfo_ != NULL) memberinfo_->::vmsg::CSGuildMemberBrief::Clear();
  clear_has_memberinfo();
}
inline const ::vmsg::CSGuildMemberBrief& CSGuildInviteMemberRsp::memberinfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance().memberinfo_;
#else
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance_->memberinfo_;
#endif
}
inline ::vmsg::CSGuildMemberBrief* CSGuildInviteMemberRsp::mutable_memberinfo() {
  set_has_memberinfo();
  if (memberinfo_ == NULL) memberinfo_ = new ::vmsg::CSGuildMemberBrief;
  return memberinfo_;
}
inline ::vmsg::CSGuildMemberBrief* CSGuildInviteMemberRsp::release_memberinfo() {
  clear_has_memberinfo();
  ::vmsg::CSGuildMemberBrief* temp = memberinfo_;
  memberinfo_ = NULL;
  return temp;
}
inline void CSGuildInviteMemberRsp::set_allocated_memberinfo(::vmsg::CSGuildMemberBrief* memberinfo) {
  delete memberinfo_;
  memberinfo_ = memberinfo;
  if (memberinfo) {
    set_has_memberinfo();
  } else {
    clear_has_memberinfo();
  }
}

// required uint32 ActType = 2;
inline bool CSGuildInviteMemberRsp::has_acttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildInviteMemberRsp::set_has_acttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildInviteMemberRsp::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildInviteMemberRsp::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 CSGuildInviteMemberRsp::acttype() const {
  return acttype_;
}
inline void CSGuildInviteMemberRsp::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// CSGuildBunEndRsp

// required uint32 IsWin = 1;
inline bool CSGuildBunEndRsp::has_iswin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildBunEndRsp::set_has_iswin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildBunEndRsp::clear_has_iswin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildBunEndRsp::clear_iswin() {
  iswin_ = 0u;
  clear_has_iswin();
}
inline ::google::protobuf::uint32 CSGuildBunEndRsp::iswin() const {
  return iswin_;
}
inline void CSGuildBunEndRsp::set_iswin(::google::protobuf::uint32 value) {
  set_has_iswin();
  iswin_ = value;
}

// required uint32 MyBunNum = 2;
inline bool CSGuildBunEndRsp::has_mybunnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildBunEndRsp::set_has_mybunnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildBunEndRsp::clear_has_mybunnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildBunEndRsp::clear_mybunnum() {
  mybunnum_ = 0u;
  clear_has_mybunnum();
}
inline ::google::protobuf::uint32 CSGuildBunEndRsp::mybunnum() const {
  return mybunnum_;
}
inline void CSGuildBunEndRsp::set_mybunnum(::google::protobuf::uint32 value) {
  set_has_mybunnum();
  mybunnum_ = value;
}

// required uint32 MemberBunNum = 3;
inline bool CSGuildBunEndRsp::has_memberbunnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildBunEndRsp::set_has_memberbunnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildBunEndRsp::clear_has_memberbunnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildBunEndRsp::clear_memberbunnum() {
  memberbunnum_ = 0u;
  clear_has_memberbunnum();
}
inline ::google::protobuf::uint32 CSGuildBunEndRsp::memberbunnum() const {
  return memberbunnum_;
}
inline void CSGuildBunEndRsp::set_memberbunnum(::google::protobuf::uint32 value) {
  set_has_memberbunnum();
  memberbunnum_ = value;
}

// -------------------------------------------------------------------

// CSGuildActInviteRqst

// required uint64 MemberUin = 1;
inline bool CSGuildActInviteRqst::has_memberuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildActInviteRqst::set_has_memberuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildActInviteRqst::clear_has_memberuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildActInviteRqst::clear_memberuin() {
  memberuin_ = GOOGLE_ULONGLONG(0);
  clear_has_memberuin();
}
inline ::google::protobuf::uint64 CSGuildActInviteRqst::memberuin() const {
  return memberuin_;
}
inline void CSGuildActInviteRqst::set_memberuin(::google::protobuf::uint64 value) {
  set_has_memberuin();
  memberuin_ = value;
}

// required uint32 ActType = 2;
inline bool CSGuildActInviteRqst::has_acttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildActInviteRqst::set_has_acttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildActInviteRqst::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildActInviteRqst::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 CSGuildActInviteRqst::acttype() const {
  return acttype_;
}
inline void CSGuildActInviteRqst::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
}

// -------------------------------------------------------------------

// CSGuildThiefRqst

// required uint32 DamageHP = 1;
inline bool CSGuildThiefRqst::has_damagehp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildThiefRqst::set_has_damagehp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildThiefRqst::clear_has_damagehp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildThiefRqst::clear_damagehp() {
  damagehp_ = 0u;
  clear_has_damagehp();
}
inline ::google::protobuf::uint32 CSGuildThiefRqst::damagehp() const {
  return damagehp_;
}
inline void CSGuildThiefRqst::set_damagehp(::google::protobuf::uint32 value) {
  set_has_damagehp();
  damagehp_ = value;
}

// required uint32 KillThiefNum = 2;
inline bool CSGuildThiefRqst::has_killthiefnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildThiefRqst::set_has_killthiefnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildThiefRqst::clear_has_killthiefnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildThiefRqst::clear_killthiefnum() {
  killthiefnum_ = 0u;
  clear_has_killthiefnum();
}
inline ::google::protobuf::uint32 CSGuildThiefRqst::killthiefnum() const {
  return killthiefnum_;
}
inline void CSGuildThiefRqst::set_killthiefnum(::google::protobuf::uint32 value) {
  set_has_killthiefnum();
  killthiefnum_ = value;
}

// repeated uint32 ThiefLst = 3;
inline int CSGuildThiefRqst::thieflst_size() const {
  return thieflst_.size();
}
inline void CSGuildThiefRqst::clear_thieflst() {
  thieflst_.Clear();
}
inline ::google::protobuf::uint32 CSGuildThiefRqst::thieflst(int index) const {
  return thieflst_.Get(index);
}
inline void CSGuildThiefRqst::set_thieflst(int index, ::google::protobuf::uint32 value) {
  thieflst_.Set(index, value);
}
inline void CSGuildThiefRqst::add_thieflst(::google::protobuf::uint32 value) {
  thieflst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGuildThiefRqst::thieflst() const {
  return thieflst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGuildThiefRqst::mutable_thieflst() {
  return &thieflst_;
}

// -------------------------------------------------------------------

// CSGuildActBlockEndRqst

// required uint32 DamageHP = 1;
inline bool CSGuildActBlockEndRqst::has_damagehp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildActBlockEndRqst::set_has_damagehp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildActBlockEndRqst::clear_has_damagehp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildActBlockEndRqst::clear_damagehp() {
  damagehp_ = 0u;
  clear_has_damagehp();
}
inline ::google::protobuf::uint32 CSGuildActBlockEndRqst::damagehp() const {
  return damagehp_;
}
inline void CSGuildActBlockEndRqst::set_damagehp(::google::protobuf::uint32 value) {
  set_has_damagehp();
  damagehp_ = value;
}

// required uint32 BlockNum = 2;
inline bool CSGuildActBlockEndRqst::has_blocknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildActBlockEndRqst::set_has_blocknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildActBlockEndRqst::clear_has_blocknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildActBlockEndRqst::clear_blocknum() {
  blocknum_ = 0u;
  clear_has_blocknum();
}
inline ::google::protobuf::uint32 CSGuildActBlockEndRqst::blocknum() const {
  return blocknum_;
}
inline void CSGuildActBlockEndRqst::set_blocknum(::google::protobuf::uint32 value) {
  set_has_blocknum();
  blocknum_ = value;
}

// repeated uint32 BlockLst = 3;
inline int CSGuildActBlockEndRqst::blocklst_size() const {
  return blocklst_.size();
}
inline void CSGuildActBlockEndRqst::clear_blocklst() {
  blocklst_.Clear();
}
inline ::google::protobuf::uint32 CSGuildActBlockEndRqst::blocklst(int index) const {
  return blocklst_.Get(index);
}
inline void CSGuildActBlockEndRqst::set_blocklst(int index, ::google::protobuf::uint32 value) {
  blocklst_.Set(index, value);
}
inline void CSGuildActBlockEndRqst::add_blocklst(::google::protobuf::uint32 value) {
  blocklst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGuildActBlockEndRqst::blocklst() const {
  return blocklst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGuildActBlockEndRqst::mutable_blocklst() {
  return &blocklst_;
}

// -------------------------------------------------------------------

// CSGuildStatNotify

// required uint64 GuildID = 1;
inline bool CSGuildStatNotify::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildStatNotify::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildStatNotify::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildStatNotify::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
}
inline ::google::protobuf::uint64 CSGuildStatNotify::guildid() const {
  return guildid_;
}
inline void CSGuildStatNotify::set_guildid(::google::protobuf::uint64 value) {
  set_has_guildid();
  guildid_ = value;
}

// required uint32 Reason = 2;
inline bool CSGuildStatNotify::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildStatNotify::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildStatNotify::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildStatNotify::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 CSGuildStatNotify::reason() const {
  return reason_;
}
inline void CSGuildStatNotify::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// CSGuildRequest

// optional .vmsg.CSGuildCreateRqst GuildCreate_Rqst = 1;
inline bool CSGuildRequest::has_guildcreate_rqst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRequest::set_has_guildcreate_rqst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRequest::clear_has_guildcreate_rqst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRequest::clear_guildcreate_rqst() {
  if (guildcreate_rqst_ != NULL) guildcreate_rqst_->::vmsg::CSGuildCreateRqst::Clear();
  clear_has_guildcreate_rqst();
}
inline const ::vmsg::CSGuildCreateRqst& CSGuildRequest::guildcreate_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildcreate_rqst_ != NULL ? *guildcreate_rqst_ : *default_instance().guildcreate_rqst_;
#else
  return guildcreate_rqst_ != NULL ? *guildcreate_rqst_ : *default_instance_->guildcreate_rqst_;
#endif
}
inline ::vmsg::CSGuildCreateRqst* CSGuildRequest::mutable_guildcreate_rqst() {
  set_has_guildcreate_rqst();
  if (guildcreate_rqst_ == NULL) guildcreate_rqst_ = new ::vmsg::CSGuildCreateRqst;
  return guildcreate_rqst_;
}
inline ::vmsg::CSGuildCreateRqst* CSGuildRequest::release_guildcreate_rqst() {
  clear_has_guildcreate_rqst();
  ::vmsg::CSGuildCreateRqst* temp = guildcreate_rqst_;
  guildcreate_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_guildcreate_rqst(::vmsg::CSGuildCreateRqst* guildcreate_rqst) {
  delete guildcreate_rqst_;
  guildcreate_rqst_ = guildcreate_rqst;
  if (guildcreate_rqst) {
    set_has_guildcreate_rqst();
  } else {
    clear_has_guildcreate_rqst();
  }
}

// optional uint64 GuildJoin_Rqst = 2;
inline bool CSGuildRequest::has_guildjoin_rqst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRequest::set_has_guildjoin_rqst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRequest::clear_has_guildjoin_rqst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRequest::clear_guildjoin_rqst() {
  guildjoin_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_guildjoin_rqst();
}
inline ::google::protobuf::uint64 CSGuildRequest::guildjoin_rqst() const {
  return guildjoin_rqst_;
}
inline void CSGuildRequest::set_guildjoin_rqst(::google::protobuf::uint64 value) {
  set_has_guildjoin_rqst();
  guildjoin_rqst_ = value;
}

// optional uint64 GuildKick_Rqst = 3;
inline bool CSGuildRequest::has_guildkick_rqst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRequest::set_has_guildkick_rqst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRequest::clear_has_guildkick_rqst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRequest::clear_guildkick_rqst() {
  guildkick_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_guildkick_rqst();
}
inline ::google::protobuf::uint64 CSGuildRequest::guildkick_rqst() const {
  return guildkick_rqst_;
}
inline void CSGuildRequest::set_guildkick_rqst(::google::protobuf::uint64 value) {
  set_has_guildkick_rqst();
  guildkick_rqst_ = value;
}

// optional string GuildInvite_Rqst = 4;
inline bool CSGuildRequest::has_guildinvite_rqst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRequest::set_has_guildinvite_rqst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRequest::clear_has_guildinvite_rqst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRequest::clear_guildinvite_rqst() {
  if (guildinvite_rqst_ != &::google::protobuf::internal::kEmptyString) {
    guildinvite_rqst_->clear();
  }
  clear_has_guildinvite_rqst();
}
inline const ::std::string& CSGuildRequest::guildinvite_rqst() const {
  return *guildinvite_rqst_;
}
inline void CSGuildRequest::set_guildinvite_rqst(const ::std::string& value) {
  set_has_guildinvite_rqst();
  if (guildinvite_rqst_ == &::google::protobuf::internal::kEmptyString) {
    guildinvite_rqst_ = new ::std::string;
  }
  guildinvite_rqst_->assign(value);
}
inline void CSGuildRequest::set_guildinvite_rqst(const char* value) {
  set_has_guildinvite_rqst();
  if (guildinvite_rqst_ == &::google::protobuf::internal::kEmptyString) {
    guildinvite_rqst_ = new ::std::string;
  }
  guildinvite_rqst_->assign(value);
}
inline void CSGuildRequest::set_guildinvite_rqst(const char* value, size_t size) {
  set_has_guildinvite_rqst();
  if (guildinvite_rqst_ == &::google::protobuf::internal::kEmptyString) {
    guildinvite_rqst_ = new ::std::string;
  }
  guildinvite_rqst_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSGuildRequest::mutable_guildinvite_rqst() {
  set_has_guildinvite_rqst();
  if (guildinvite_rqst_ == &::google::protobuf::internal::kEmptyString) {
    guildinvite_rqst_ = new ::std::string;
  }
  return guildinvite_rqst_;
}
inline ::std::string* CSGuildRequest::release_guildinvite_rqst() {
  clear_has_guildinvite_rqst();
  if (guildinvite_rqst_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guildinvite_rqst_;
    guildinvite_rqst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSGuildRequest::set_allocated_guildinvite_rqst(::std::string* guildinvite_rqst) {
  if (guildinvite_rqst_ != &::google::protobuf::internal::kEmptyString) {
    delete guildinvite_rqst_;
  }
  if (guildinvite_rqst) {
    set_has_guildinvite_rqst();
    guildinvite_rqst_ = guildinvite_rqst;
  } else {
    clear_has_guildinvite_rqst();
    guildinvite_rqst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 QueryOtherGuild_Rqst = 5;
inline bool CSGuildRequest::has_queryotherguild_rqst() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRequest::set_has_queryotherguild_rqst() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRequest::clear_has_queryotherguild_rqst() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRequest::clear_queryotherguild_rqst() {
  queryotherguild_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_queryotherguild_rqst();
}
inline ::google::protobuf::uint64 CSGuildRequest::queryotherguild_rqst() const {
  return queryotherguild_rqst_;
}
inline void CSGuildRequest::set_queryotherguild_rqst(::google::protobuf::uint64 value) {
  set_has_queryotherguild_rqst();
  queryotherguild_rqst_ = value;
}

// optional .vmsg.CSGuildChgNoticeRqst ChgGuildNotice_Rqst = 6;
inline bool CSGuildRequest::has_chgguildnotice_rqst() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildRequest::set_has_chgguildnotice_rqst() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildRequest::clear_has_chgguildnotice_rqst() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildRequest::clear_chgguildnotice_rqst() {
  if (chgguildnotice_rqst_ != NULL) chgguildnotice_rqst_->::vmsg::CSGuildChgNoticeRqst::Clear();
  clear_has_chgguildnotice_rqst();
}
inline const ::vmsg::CSGuildChgNoticeRqst& CSGuildRequest::chgguildnotice_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return chgguildnotice_rqst_ != NULL ? *chgguildnotice_rqst_ : *default_instance().chgguildnotice_rqst_;
#else
  return chgguildnotice_rqst_ != NULL ? *chgguildnotice_rqst_ : *default_instance_->chgguildnotice_rqst_;
#endif
}
inline ::vmsg::CSGuildChgNoticeRqst* CSGuildRequest::mutable_chgguildnotice_rqst() {
  set_has_chgguildnotice_rqst();
  if (chgguildnotice_rqst_ == NULL) chgguildnotice_rqst_ = new ::vmsg::CSGuildChgNoticeRqst;
  return chgguildnotice_rqst_;
}
inline ::vmsg::CSGuildChgNoticeRqst* CSGuildRequest::release_chgguildnotice_rqst() {
  clear_has_chgguildnotice_rqst();
  ::vmsg::CSGuildChgNoticeRqst* temp = chgguildnotice_rqst_;
  chgguildnotice_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_chgguildnotice_rqst(::vmsg::CSGuildChgNoticeRqst* chgguildnotice_rqst) {
  delete chgguildnotice_rqst_;
  chgguildnotice_rqst_ = chgguildnotice_rqst;
  if (chgguildnotice_rqst) {
    set_has_chgguildnotice_rqst();
  } else {
    clear_has_chgguildnotice_rqst();
  }
}

// optional uint64 AssignChairMan_Rqst = 7;
inline bool CSGuildRequest::has_assignchairman_rqst() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildRequest::set_has_assignchairman_rqst() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildRequest::clear_has_assignchairman_rqst() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildRequest::clear_assignchairman_rqst() {
  assignchairman_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_assignchairman_rqst();
}
inline ::google::protobuf::uint64 CSGuildRequest::assignchairman_rqst() const {
  return assignchairman_rqst_;
}
inline void CSGuildRequest::set_assignchairman_rqst(::google::protobuf::uint64 value) {
  set_has_assignchairman_rqst();
  assignchairman_rqst_ = value;
}

// optional .vmsg.CSGuildChgPriviRqst GuildChgPrivi_Rqst = 8;
inline bool CSGuildRequest::has_guildchgprivi_rqst() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSGuildRequest::set_has_guildchgprivi_rqst() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSGuildRequest::clear_has_guildchgprivi_rqst() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSGuildRequest::clear_guildchgprivi_rqst() {
  if (guildchgprivi_rqst_ != NULL) guildchgprivi_rqst_->::vmsg::CSGuildChgPriviRqst::Clear();
  clear_has_guildchgprivi_rqst();
}
inline const ::vmsg::CSGuildChgPriviRqst& CSGuildRequest::guildchgprivi_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildchgprivi_rqst_ != NULL ? *guildchgprivi_rqst_ : *default_instance().guildchgprivi_rqst_;
#else
  return guildchgprivi_rqst_ != NULL ? *guildchgprivi_rqst_ : *default_instance_->guildchgprivi_rqst_;
#endif
}
inline ::vmsg::CSGuildChgPriviRqst* CSGuildRequest::mutable_guildchgprivi_rqst() {
  set_has_guildchgprivi_rqst();
  if (guildchgprivi_rqst_ == NULL) guildchgprivi_rqst_ = new ::vmsg::CSGuildChgPriviRqst;
  return guildchgprivi_rqst_;
}
inline ::vmsg::CSGuildChgPriviRqst* CSGuildRequest::release_guildchgprivi_rqst() {
  clear_has_guildchgprivi_rqst();
  ::vmsg::CSGuildChgPriviRqst* temp = guildchgprivi_rqst_;
  guildchgprivi_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_guildchgprivi_rqst(::vmsg::CSGuildChgPriviRqst* guildchgprivi_rqst) {
  delete guildchgprivi_rqst_;
  guildchgprivi_rqst_ = guildchgprivi_rqst;
  if (guildchgprivi_rqst) {
    set_has_guildchgprivi_rqst();
  } else {
    clear_has_guildchgprivi_rqst();
  }
}

// optional .vmsg.CSGuildJoinReplyRqst GuildJoinReply_Rqst = 9;
inline bool CSGuildRequest::has_guildjoinreply_rqst() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSGuildRequest::set_has_guildjoinreply_rqst() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSGuildRequest::clear_has_guildjoinreply_rqst() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSGuildRequest::clear_guildjoinreply_rqst() {
  if (guildjoinreply_rqst_ != NULL) guildjoinreply_rqst_->::vmsg::CSGuildJoinReplyRqst::Clear();
  clear_has_guildjoinreply_rqst();
}
inline const ::vmsg::CSGuildJoinReplyRqst& CSGuildRequest::guildjoinreply_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildjoinreply_rqst_ != NULL ? *guildjoinreply_rqst_ : *default_instance().guildjoinreply_rqst_;
#else
  return guildjoinreply_rqst_ != NULL ? *guildjoinreply_rqst_ : *default_instance_->guildjoinreply_rqst_;
#endif
}
inline ::vmsg::CSGuildJoinReplyRqst* CSGuildRequest::mutable_guildjoinreply_rqst() {
  set_has_guildjoinreply_rqst();
  if (guildjoinreply_rqst_ == NULL) guildjoinreply_rqst_ = new ::vmsg::CSGuildJoinReplyRqst;
  return guildjoinreply_rqst_;
}
inline ::vmsg::CSGuildJoinReplyRqst* CSGuildRequest::release_guildjoinreply_rqst() {
  clear_has_guildjoinreply_rqst();
  ::vmsg::CSGuildJoinReplyRqst* temp = guildjoinreply_rqst_;
  guildjoinreply_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_guildjoinreply_rqst(::vmsg::CSGuildJoinReplyRqst* guildjoinreply_rqst) {
  delete guildjoinreply_rqst_;
  guildjoinreply_rqst_ = guildjoinreply_rqst;
  if (guildjoinreply_rqst) {
    set_has_guildjoinreply_rqst();
  } else {
    clear_has_guildjoinreply_rqst();
  }
}

// optional .vmsg.CSGuildInviteReplyRqst GuildInviteReply_Rqst = 10;
inline bool CSGuildRequest::has_guildinvitereply_rqst() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSGuildRequest::set_has_guildinvitereply_rqst() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSGuildRequest::clear_has_guildinvitereply_rqst() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSGuildRequest::clear_guildinvitereply_rqst() {
  if (guildinvitereply_rqst_ != NULL) guildinvitereply_rqst_->::vmsg::CSGuildInviteReplyRqst::Clear();
  clear_has_guildinvitereply_rqst();
}
inline const ::vmsg::CSGuildInviteReplyRqst& CSGuildRequest::guildinvitereply_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildinvitereply_rqst_ != NULL ? *guildinvitereply_rqst_ : *default_instance().guildinvitereply_rqst_;
#else
  return guildinvitereply_rqst_ != NULL ? *guildinvitereply_rqst_ : *default_instance_->guildinvitereply_rqst_;
#endif
}
inline ::vmsg::CSGuildInviteReplyRqst* CSGuildRequest::mutable_guildinvitereply_rqst() {
  set_has_guildinvitereply_rqst();
  if (guildinvitereply_rqst_ == NULL) guildinvitereply_rqst_ = new ::vmsg::CSGuildInviteReplyRqst;
  return guildinvitereply_rqst_;
}
inline ::vmsg::CSGuildInviteReplyRqst* CSGuildRequest::release_guildinvitereply_rqst() {
  clear_has_guildinvitereply_rqst();
  ::vmsg::CSGuildInviteReplyRqst* temp = guildinvitereply_rqst_;
  guildinvitereply_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_guildinvitereply_rqst(::vmsg::CSGuildInviteReplyRqst* guildinvitereply_rqst) {
  delete guildinvitereply_rqst_;
  guildinvitereply_rqst_ = guildinvitereply_rqst;
  if (guildinvitereply_rqst) {
    set_has_guildinvitereply_rqst();
  } else {
    clear_has_guildinvitereply_rqst();
  }
}

// optional uint64 DeleteMyGuildReq_Rqst = 12;
inline bool CSGuildRequest::has_deletemyguildreq_rqst() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSGuildRequest::set_has_deletemyguildreq_rqst() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSGuildRequest::clear_has_deletemyguildreq_rqst() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSGuildRequest::clear_deletemyguildreq_rqst() {
  deletemyguildreq_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_deletemyguildreq_rqst();
}
inline ::google::protobuf::uint64 CSGuildRequest::deletemyguildreq_rqst() const {
  return deletemyguildreq_rqst_;
}
inline void CSGuildRequest::set_deletemyguildreq_rqst(::google::protobuf::uint64 value) {
  set_has_deletemyguildreq_rqst();
  deletemyguildreq_rqst_ = value;
}

// optional .vmsg.CSGuildSearchRqst GuildSearch_Rqst = 13;
inline bool CSGuildRequest::has_guildsearch_rqst() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSGuildRequest::set_has_guildsearch_rqst() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSGuildRequest::clear_has_guildsearch_rqst() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSGuildRequest::clear_guildsearch_rqst() {
  if (guildsearch_rqst_ != NULL) guildsearch_rqst_->::vmsg::CSGuildSearchRqst::Clear();
  clear_has_guildsearch_rqst();
}
inline const ::vmsg::CSGuildSearchRqst& CSGuildRequest::guildsearch_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildsearch_rqst_ != NULL ? *guildsearch_rqst_ : *default_instance().guildsearch_rqst_;
#else
  return guildsearch_rqst_ != NULL ? *guildsearch_rqst_ : *default_instance_->guildsearch_rqst_;
#endif
}
inline ::vmsg::CSGuildSearchRqst* CSGuildRequest::mutable_guildsearch_rqst() {
  set_has_guildsearch_rqst();
  if (guildsearch_rqst_ == NULL) guildsearch_rqst_ = new ::vmsg::CSGuildSearchRqst;
  return guildsearch_rqst_;
}
inline ::vmsg::CSGuildSearchRqst* CSGuildRequest::release_guildsearch_rqst() {
  clear_has_guildsearch_rqst();
  ::vmsg::CSGuildSearchRqst* temp = guildsearch_rqst_;
  guildsearch_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_guildsearch_rqst(::vmsg::CSGuildSearchRqst* guildsearch_rqst) {
  delete guildsearch_rqst_;
  guildsearch_rqst_ = guildsearch_rqst;
  if (guildsearch_rqst) {
    set_has_guildsearch_rqst();
  } else {
    clear_has_guildsearch_rqst();
  }
}

// optional .vmsg.CSGuildActInviteRqst ActInvite_Rqst = 14;
inline bool CSGuildRequest::has_actinvite_rqst() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSGuildRequest::set_has_actinvite_rqst() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSGuildRequest::clear_has_actinvite_rqst() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSGuildRequest::clear_actinvite_rqst() {
  if (actinvite_rqst_ != NULL) actinvite_rqst_->::vmsg::CSGuildActInviteRqst::Clear();
  clear_has_actinvite_rqst();
}
inline const ::vmsg::CSGuildActInviteRqst& CSGuildRequest::actinvite_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return actinvite_rqst_ != NULL ? *actinvite_rqst_ : *default_instance().actinvite_rqst_;
#else
  return actinvite_rqst_ != NULL ? *actinvite_rqst_ : *default_instance_->actinvite_rqst_;
#endif
}
inline ::vmsg::CSGuildActInviteRqst* CSGuildRequest::mutable_actinvite_rqst() {
  set_has_actinvite_rqst();
  if (actinvite_rqst_ == NULL) actinvite_rqst_ = new ::vmsg::CSGuildActInviteRqst;
  return actinvite_rqst_;
}
inline ::vmsg::CSGuildActInviteRqst* CSGuildRequest::release_actinvite_rqst() {
  clear_has_actinvite_rqst();
  ::vmsg::CSGuildActInviteRqst* temp = actinvite_rqst_;
  actinvite_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_actinvite_rqst(::vmsg::CSGuildActInviteRqst* actinvite_rqst) {
  delete actinvite_rqst_;
  actinvite_rqst_ = actinvite_rqst;
  if (actinvite_rqst) {
    set_has_actinvite_rqst();
  } else {
    clear_has_actinvite_rqst();
  }
}

// optional uint32 BunEndNum_Rqst = 15;
inline bool CSGuildRequest::has_bunendnum_rqst() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSGuildRequest::set_has_bunendnum_rqst() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSGuildRequest::clear_has_bunendnum_rqst() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSGuildRequest::clear_bunendnum_rqst() {
  bunendnum_rqst_ = 0u;
  clear_has_bunendnum_rqst();
}
inline ::google::protobuf::uint32 CSGuildRequest::bunendnum_rqst() const {
  return bunendnum_rqst_;
}
inline void CSGuildRequest::set_bunendnum_rqst(::google::protobuf::uint32 value) {
  set_has_bunendnum_rqst();
  bunendnum_rqst_ = value;
}

// optional .vmsg.CSGuildThiefRqst ThiefEnd_Rqst = 16;
inline bool CSGuildRequest::has_thiefend_rqst() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSGuildRequest::set_has_thiefend_rqst() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSGuildRequest::clear_has_thiefend_rqst() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSGuildRequest::clear_thiefend_rqst() {
  if (thiefend_rqst_ != NULL) thiefend_rqst_->::vmsg::CSGuildThiefRqst::Clear();
  clear_has_thiefend_rqst();
}
inline const ::vmsg::CSGuildThiefRqst& CSGuildRequest::thiefend_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return thiefend_rqst_ != NULL ? *thiefend_rqst_ : *default_instance().thiefend_rqst_;
#else
  return thiefend_rqst_ != NULL ? *thiefend_rqst_ : *default_instance_->thiefend_rqst_;
#endif
}
inline ::vmsg::CSGuildThiefRqst* CSGuildRequest::mutable_thiefend_rqst() {
  set_has_thiefend_rqst();
  if (thiefend_rqst_ == NULL) thiefend_rqst_ = new ::vmsg::CSGuildThiefRqst;
  return thiefend_rqst_;
}
inline ::vmsg::CSGuildThiefRqst* CSGuildRequest::release_thiefend_rqst() {
  clear_has_thiefend_rqst();
  ::vmsg::CSGuildThiefRqst* temp = thiefend_rqst_;
  thiefend_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_thiefend_rqst(::vmsg::CSGuildThiefRqst* thiefend_rqst) {
  delete thiefend_rqst_;
  thiefend_rqst_ = thiefend_rqst;
  if (thiefend_rqst) {
    set_has_thiefend_rqst();
  } else {
    clear_has_thiefend_rqst();
  }
}

// optional .vmsg.CSGuildActBlockEndRqst BlockEnd_Rqst = 17;
inline bool CSGuildRequest::has_blockend_rqst() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSGuildRequest::set_has_blockend_rqst() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSGuildRequest::clear_has_blockend_rqst() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSGuildRequest::clear_blockend_rqst() {
  if (blockend_rqst_ != NULL) blockend_rqst_->::vmsg::CSGuildActBlockEndRqst::Clear();
  clear_has_blockend_rqst();
}
inline const ::vmsg::CSGuildActBlockEndRqst& CSGuildRequest::blockend_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return blockend_rqst_ != NULL ? *blockend_rqst_ : *default_instance().blockend_rqst_;
#else
  return blockend_rqst_ != NULL ? *blockend_rqst_ : *default_instance_->blockend_rqst_;
#endif
}
inline ::vmsg::CSGuildActBlockEndRqst* CSGuildRequest::mutable_blockend_rqst() {
  set_has_blockend_rqst();
  if (blockend_rqst_ == NULL) blockend_rqst_ = new ::vmsg::CSGuildActBlockEndRqst;
  return blockend_rqst_;
}
inline ::vmsg::CSGuildActBlockEndRqst* CSGuildRequest::release_blockend_rqst() {
  clear_has_blockend_rqst();
  ::vmsg::CSGuildActBlockEndRqst* temp = blockend_rqst_;
  blockend_rqst_ = NULL;
  return temp;
}
inline void CSGuildRequest::set_allocated_blockend_rqst(::vmsg::CSGuildActBlockEndRqst* blockend_rqst) {
  delete blockend_rqst_;
  blockend_rqst_ = blockend_rqst;
  if (blockend_rqst) {
    set_has_blockend_rqst();
  } else {
    clear_has_blockend_rqst();
  }
}

// optional uint32 ActTypeStart_Rqst = 18;
inline bool CSGuildRequest::has_acttypestart_rqst() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSGuildRequest::set_has_acttypestart_rqst() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSGuildRequest::clear_has_acttypestart_rqst() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSGuildRequest::clear_acttypestart_rqst() {
  acttypestart_rqst_ = 0u;
  clear_has_acttypestart_rqst();
}
inline ::google::protobuf::uint32 CSGuildRequest::acttypestart_rqst() const {
  return acttypestart_rqst_;
}
inline void CSGuildRequest::set_acttypestart_rqst(::google::protobuf::uint32 value) {
  set_has_acttypestart_rqst();
  acttypestart_rqst_ = value;
}

// -------------------------------------------------------------------

// CSGuildRespond

// optional uint64 GuildJoin_Rsp = 1;
inline bool CSGuildRespond::has_guildjoin_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGuildRespond::set_has_guildjoin_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGuildRespond::clear_has_guildjoin_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGuildRespond::clear_guildjoin_rsp() {
  guildjoin_rsp_ = GOOGLE_ULONGLONG(0);
  clear_has_guildjoin_rsp();
}
inline ::google::protobuf::uint64 CSGuildRespond::guildjoin_rsp() const {
  return guildjoin_rsp_;
}
inline void CSGuildRespond::set_guildjoin_rsp(::google::protobuf::uint64 value) {
  set_has_guildjoin_rsp();
  guildjoin_rsp_ = value;
}

// optional uint64 GuildKick_Rsp = 2;
inline bool CSGuildRespond::has_guildkick_rsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGuildRespond::set_has_guildkick_rsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGuildRespond::clear_has_guildkick_rsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGuildRespond::clear_guildkick_rsp() {
  guildkick_rsp_ = GOOGLE_ULONGLONG(0);
  clear_has_guildkick_rsp();
}
inline ::google::protobuf::uint64 CSGuildRespond::guildkick_rsp() const {
  return guildkick_rsp_;
}
inline void CSGuildRespond::set_guildkick_rsp(::google::protobuf::uint64 value) {
  set_has_guildkick_rsp();
  guildkick_rsp_ = value;
}

// optional .vmsg.CSGuildInfoRsp GuildInfo_Rsp = 5;
inline bool CSGuildRespond::has_guildinfo_rsp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGuildRespond::set_has_guildinfo_rsp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGuildRespond::clear_has_guildinfo_rsp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGuildRespond::clear_guildinfo_rsp() {
  if (guildinfo_rsp_ != NULL) guildinfo_rsp_->::vmsg::CSGuildInfoRsp::Clear();
  clear_has_guildinfo_rsp();
}
inline const ::vmsg::CSGuildInfoRsp& CSGuildRespond::guildinfo_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildinfo_rsp_ != NULL ? *guildinfo_rsp_ : *default_instance().guildinfo_rsp_;
#else
  return guildinfo_rsp_ != NULL ? *guildinfo_rsp_ : *default_instance_->guildinfo_rsp_;
#endif
}
inline ::vmsg::CSGuildInfoRsp* CSGuildRespond::mutable_guildinfo_rsp() {
  set_has_guildinfo_rsp();
  if (guildinfo_rsp_ == NULL) guildinfo_rsp_ = new ::vmsg::CSGuildInfoRsp;
  return guildinfo_rsp_;
}
inline ::vmsg::CSGuildInfoRsp* CSGuildRespond::release_guildinfo_rsp() {
  clear_has_guildinfo_rsp();
  ::vmsg::CSGuildInfoRsp* temp = guildinfo_rsp_;
  guildinfo_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildinfo_rsp(::vmsg::CSGuildInfoRsp* guildinfo_rsp) {
  delete guildinfo_rsp_;
  guildinfo_rsp_ = guildinfo_rsp;
  if (guildinfo_rsp) {
    set_has_guildinfo_rsp();
  } else {
    clear_has_guildinfo_rsp();
  }
}

// optional .vmsg.CSMyGuildReqRsp MyGuildReq_Rsp = 6;
inline bool CSGuildRespond::has_myguildreq_rsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGuildRespond::set_has_myguildreq_rsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGuildRespond::clear_has_myguildreq_rsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGuildRespond::clear_myguildreq_rsp() {
  if (myguildreq_rsp_ != NULL) myguildreq_rsp_->::vmsg::CSMyGuildReqRsp::Clear();
  clear_has_myguildreq_rsp();
}
inline const ::vmsg::CSMyGuildReqRsp& CSGuildRespond::myguildreq_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return myguildreq_rsp_ != NULL ? *myguildreq_rsp_ : *default_instance().myguildreq_rsp_;
#else
  return myguildreq_rsp_ != NULL ? *myguildreq_rsp_ : *default_instance_->myguildreq_rsp_;
#endif
}
inline ::vmsg::CSMyGuildReqRsp* CSGuildRespond::mutable_myguildreq_rsp() {
  set_has_myguildreq_rsp();
  if (myguildreq_rsp_ == NULL) myguildreq_rsp_ = new ::vmsg::CSMyGuildReqRsp;
  return myguildreq_rsp_;
}
inline ::vmsg::CSMyGuildReqRsp* CSGuildRespond::release_myguildreq_rsp() {
  clear_has_myguildreq_rsp();
  ::vmsg::CSMyGuildReqRsp* temp = myguildreq_rsp_;
  myguildreq_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_myguildreq_rsp(::vmsg::CSMyGuildReqRsp* myguildreq_rsp) {
  delete myguildreq_rsp_;
  myguildreq_rsp_ = myguildreq_rsp;
  if (myguildreq_rsp) {
    set_has_myguildreq_rsp();
  } else {
    clear_has_myguildreq_rsp();
  }
}

// optional .vmsg.CSOtherGuildRsp OtherGuild_Rsp = 7;
inline bool CSGuildRespond::has_otherguild_rsp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSGuildRespond::set_has_otherguild_rsp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSGuildRespond::clear_has_otherguild_rsp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSGuildRespond::clear_otherguild_rsp() {
  if (otherguild_rsp_ != NULL) otherguild_rsp_->::vmsg::CSOtherGuildRsp::Clear();
  clear_has_otherguild_rsp();
}
inline const ::vmsg::CSOtherGuildRsp& CSGuildRespond::otherguild_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return otherguild_rsp_ != NULL ? *otherguild_rsp_ : *default_instance().otherguild_rsp_;
#else
  return otherguild_rsp_ != NULL ? *otherguild_rsp_ : *default_instance_->otherguild_rsp_;
#endif
}
inline ::vmsg::CSOtherGuildRsp* CSGuildRespond::mutable_otherguild_rsp() {
  set_has_otherguild_rsp();
  if (otherguild_rsp_ == NULL) otherguild_rsp_ = new ::vmsg::CSOtherGuildRsp;
  return otherguild_rsp_;
}
inline ::vmsg::CSOtherGuildRsp* CSGuildRespond::release_otherguild_rsp() {
  clear_has_otherguild_rsp();
  ::vmsg::CSOtherGuildRsp* temp = otherguild_rsp_;
  otherguild_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_otherguild_rsp(::vmsg::CSOtherGuildRsp* otherguild_rsp) {
  delete otherguild_rsp_;
  otherguild_rsp_ = otherguild_rsp;
  if (otherguild_rsp) {
    set_has_otherguild_rsp();
  } else {
    clear_has_otherguild_rsp();
  }
}

// optional uint64 AssignChairMan_Rsp = 8;
inline bool CSGuildRespond::has_assignchairman_rsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSGuildRespond::set_has_assignchairman_rsp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSGuildRespond::clear_has_assignchairman_rsp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSGuildRespond::clear_assignchairman_rsp() {
  assignchairman_rsp_ = GOOGLE_ULONGLONG(0);
  clear_has_assignchairman_rsp();
}
inline ::google::protobuf::uint64 CSGuildRespond::assignchairman_rsp() const {
  return assignchairman_rsp_;
}
inline void CSGuildRespond::set_assignchairman_rsp(::google::protobuf::uint64 value) {
  set_has_assignchairman_rsp();
  assignchairman_rsp_ = value;
}

// optional .vmsg.CSQueryGuildLstRsp QueryGuildLst_Rsp = 9;
inline bool CSGuildRespond::has_queryguildlst_rsp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSGuildRespond::set_has_queryguildlst_rsp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSGuildRespond::clear_has_queryguildlst_rsp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSGuildRespond::clear_queryguildlst_rsp() {
  if (queryguildlst_rsp_ != NULL) queryguildlst_rsp_->::vmsg::CSQueryGuildLstRsp::Clear();
  clear_has_queryguildlst_rsp();
}
inline const ::vmsg::CSQueryGuildLstRsp& CSGuildRespond::queryguildlst_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return queryguildlst_rsp_ != NULL ? *queryguildlst_rsp_ : *default_instance().queryguildlst_rsp_;
#else
  return queryguildlst_rsp_ != NULL ? *queryguildlst_rsp_ : *default_instance_->queryguildlst_rsp_;
#endif
}
inline ::vmsg::CSQueryGuildLstRsp* CSGuildRespond::mutable_queryguildlst_rsp() {
  set_has_queryguildlst_rsp();
  if (queryguildlst_rsp_ == NULL) queryguildlst_rsp_ = new ::vmsg::CSQueryGuildLstRsp;
  return queryguildlst_rsp_;
}
inline ::vmsg::CSQueryGuildLstRsp* CSGuildRespond::release_queryguildlst_rsp() {
  clear_has_queryguildlst_rsp();
  ::vmsg::CSQueryGuildLstRsp* temp = queryguildlst_rsp_;
  queryguildlst_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_queryguildlst_rsp(::vmsg::CSQueryGuildLstRsp* queryguildlst_rsp) {
  delete queryguildlst_rsp_;
  queryguildlst_rsp_ = queryguildlst_rsp;
  if (queryguildlst_rsp) {
    set_has_queryguildlst_rsp();
  } else {
    clear_has_queryguildlst_rsp();
  }
}

// optional .vmsg.CSGuildInfoRsp GuildCreate_Rsp = 10;
inline bool CSGuildRespond::has_guildcreate_rsp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSGuildRespond::set_has_guildcreate_rsp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSGuildRespond::clear_has_guildcreate_rsp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSGuildRespond::clear_guildcreate_rsp() {
  if (guildcreate_rsp_ != NULL) guildcreate_rsp_->::vmsg::CSGuildInfoRsp::Clear();
  clear_has_guildcreate_rsp();
}
inline const ::vmsg::CSGuildInfoRsp& CSGuildRespond::guildcreate_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildcreate_rsp_ != NULL ? *guildcreate_rsp_ : *default_instance().guildcreate_rsp_;
#else
  return guildcreate_rsp_ != NULL ? *guildcreate_rsp_ : *default_instance_->guildcreate_rsp_;
#endif
}
inline ::vmsg::CSGuildInfoRsp* CSGuildRespond::mutable_guildcreate_rsp() {
  set_has_guildcreate_rsp();
  if (guildcreate_rsp_ == NULL) guildcreate_rsp_ = new ::vmsg::CSGuildInfoRsp;
  return guildcreate_rsp_;
}
inline ::vmsg::CSGuildInfoRsp* CSGuildRespond::release_guildcreate_rsp() {
  clear_has_guildcreate_rsp();
  ::vmsg::CSGuildInfoRsp* temp = guildcreate_rsp_;
  guildcreate_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildcreate_rsp(::vmsg::CSGuildInfoRsp* guildcreate_rsp) {
  delete guildcreate_rsp_;
  guildcreate_rsp_ = guildcreate_rsp;
  if (guildcreate_rsp) {
    set_has_guildcreate_rsp();
  } else {
    clear_has_guildcreate_rsp();
  }
}

// optional .vmsg.CSAllGuildReqRsp AllGuildReq_Rsp = 11;
inline bool CSGuildRespond::has_allguildreq_rsp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSGuildRespond::set_has_allguildreq_rsp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSGuildRespond::clear_has_allguildreq_rsp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSGuildRespond::clear_allguildreq_rsp() {
  if (allguildreq_rsp_ != NULL) allguildreq_rsp_->::vmsg::CSAllGuildReqRsp::Clear();
  clear_has_allguildreq_rsp();
}
inline const ::vmsg::CSAllGuildReqRsp& CSGuildRespond::allguildreq_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return allguildreq_rsp_ != NULL ? *allguildreq_rsp_ : *default_instance().allguildreq_rsp_;
#else
  return allguildreq_rsp_ != NULL ? *allguildreq_rsp_ : *default_instance_->allguildreq_rsp_;
#endif
}
inline ::vmsg::CSAllGuildReqRsp* CSGuildRespond::mutable_allguildreq_rsp() {
  set_has_allguildreq_rsp();
  if (allguildreq_rsp_ == NULL) allguildreq_rsp_ = new ::vmsg::CSAllGuildReqRsp;
  return allguildreq_rsp_;
}
inline ::vmsg::CSAllGuildReqRsp* CSGuildRespond::release_allguildreq_rsp() {
  clear_has_allguildreq_rsp();
  ::vmsg::CSAllGuildReqRsp* temp = allguildreq_rsp_;
  allguildreq_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_allguildreq_rsp(::vmsg::CSAllGuildReqRsp* allguildreq_rsp) {
  delete allguildreq_rsp_;
  allguildreq_rsp_ = allguildreq_rsp;
  if (allguildreq_rsp) {
    set_has_allguildreq_rsp();
  } else {
    clear_has_allguildreq_rsp();
  }
}

// optional .vmsg.CSGuildJoinReplyRsp GuildReplyJoin_Rsp = 12;
inline bool CSGuildRespond::has_guildreplyjoin_rsp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSGuildRespond::set_has_guildreplyjoin_rsp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSGuildRespond::clear_has_guildreplyjoin_rsp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSGuildRespond::clear_guildreplyjoin_rsp() {
  if (guildreplyjoin_rsp_ != NULL) guildreplyjoin_rsp_->::vmsg::CSGuildJoinReplyRsp::Clear();
  clear_has_guildreplyjoin_rsp();
}
inline const ::vmsg::CSGuildJoinReplyRsp& CSGuildRespond::guildreplyjoin_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildreplyjoin_rsp_ != NULL ? *guildreplyjoin_rsp_ : *default_instance().guildreplyjoin_rsp_;
#else
  return guildreplyjoin_rsp_ != NULL ? *guildreplyjoin_rsp_ : *default_instance_->guildreplyjoin_rsp_;
#endif
}
inline ::vmsg::CSGuildJoinReplyRsp* CSGuildRespond::mutable_guildreplyjoin_rsp() {
  set_has_guildreplyjoin_rsp();
  if (guildreplyjoin_rsp_ == NULL) guildreplyjoin_rsp_ = new ::vmsg::CSGuildJoinReplyRsp;
  return guildreplyjoin_rsp_;
}
inline ::vmsg::CSGuildJoinReplyRsp* CSGuildRespond::release_guildreplyjoin_rsp() {
  clear_has_guildreplyjoin_rsp();
  ::vmsg::CSGuildJoinReplyRsp* temp = guildreplyjoin_rsp_;
  guildreplyjoin_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildreplyjoin_rsp(::vmsg::CSGuildJoinReplyRsp* guildreplyjoin_rsp) {
  delete guildreplyjoin_rsp_;
  guildreplyjoin_rsp_ = guildreplyjoin_rsp;
  if (guildreplyjoin_rsp) {
    set_has_guildreplyjoin_rsp();
  } else {
    clear_has_guildreplyjoin_rsp();
  }
}

// optional uint64 DeleteMyGuildReq_Rsp = 13;
inline bool CSGuildRespond::has_deletemyguildreq_rsp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSGuildRespond::set_has_deletemyguildreq_rsp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSGuildRespond::clear_has_deletemyguildreq_rsp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSGuildRespond::clear_deletemyguildreq_rsp() {
  deletemyguildreq_rsp_ = GOOGLE_ULONGLONG(0);
  clear_has_deletemyguildreq_rsp();
}
inline ::google::protobuf::uint64 CSGuildRespond::deletemyguildreq_rsp() const {
  return deletemyguildreq_rsp_;
}
inline void CSGuildRespond::set_deletemyguildreq_rsp(::google::protobuf::uint64 value) {
  set_has_deletemyguildreq_rsp();
  deletemyguildreq_rsp_ = value;
}

// optional .vmsg.CSGuildChgPriviRsp GuildChgPrivi_Rsp = 14;
inline bool CSGuildRespond::has_guildchgprivi_rsp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSGuildRespond::set_has_guildchgprivi_rsp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSGuildRespond::clear_has_guildchgprivi_rsp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSGuildRespond::clear_guildchgprivi_rsp() {
  if (guildchgprivi_rsp_ != NULL) guildchgprivi_rsp_->::vmsg::CSGuildChgPriviRsp::Clear();
  clear_has_guildchgprivi_rsp();
}
inline const ::vmsg::CSGuildChgPriviRsp& CSGuildRespond::guildchgprivi_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildchgprivi_rsp_ != NULL ? *guildchgprivi_rsp_ : *default_instance().guildchgprivi_rsp_;
#else
  return guildchgprivi_rsp_ != NULL ? *guildchgprivi_rsp_ : *default_instance_->guildchgprivi_rsp_;
#endif
}
inline ::vmsg::CSGuildChgPriviRsp* CSGuildRespond::mutable_guildchgprivi_rsp() {
  set_has_guildchgprivi_rsp();
  if (guildchgprivi_rsp_ == NULL) guildchgprivi_rsp_ = new ::vmsg::CSGuildChgPriviRsp;
  return guildchgprivi_rsp_;
}
inline ::vmsg::CSGuildChgPriviRsp* CSGuildRespond::release_guildchgprivi_rsp() {
  clear_has_guildchgprivi_rsp();
  ::vmsg::CSGuildChgPriviRsp* temp = guildchgprivi_rsp_;
  guildchgprivi_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildchgprivi_rsp(::vmsg::CSGuildChgPriviRsp* guildchgprivi_rsp) {
  delete guildchgprivi_rsp_;
  guildchgprivi_rsp_ = guildchgprivi_rsp;
  if (guildchgprivi_rsp) {
    set_has_guildchgprivi_rsp();
  } else {
    clear_has_guildchgprivi_rsp();
  }
}

// optional .vmsg.CSGuildSearchRsp GuildSearch_Rsp = 15;
inline bool CSGuildRespond::has_guildsearch_rsp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSGuildRespond::set_has_guildsearch_rsp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSGuildRespond::clear_has_guildsearch_rsp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSGuildRespond::clear_guildsearch_rsp() {
  if (guildsearch_rsp_ != NULL) guildsearch_rsp_->::vmsg::CSGuildSearchRsp::Clear();
  clear_has_guildsearch_rsp();
}
inline const ::vmsg::CSGuildSearchRsp& CSGuildRespond::guildsearch_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildsearch_rsp_ != NULL ? *guildsearch_rsp_ : *default_instance().guildsearch_rsp_;
#else
  return guildsearch_rsp_ != NULL ? *guildsearch_rsp_ : *default_instance_->guildsearch_rsp_;
#endif
}
inline ::vmsg::CSGuildSearchRsp* CSGuildRespond::mutable_guildsearch_rsp() {
  set_has_guildsearch_rsp();
  if (guildsearch_rsp_ == NULL) guildsearch_rsp_ = new ::vmsg::CSGuildSearchRsp;
  return guildsearch_rsp_;
}
inline ::vmsg::CSGuildSearchRsp* CSGuildRespond::release_guildsearch_rsp() {
  clear_has_guildsearch_rsp();
  ::vmsg::CSGuildSearchRsp* temp = guildsearch_rsp_;
  guildsearch_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildsearch_rsp(::vmsg::CSGuildSearchRsp* guildsearch_rsp) {
  delete guildsearch_rsp_;
  guildsearch_rsp_ = guildsearch_rsp;
  if (guildsearch_rsp) {
    set_has_guildsearch_rsp();
  } else {
    clear_has_guildsearch_rsp();
  }
}

// optional uint32 Impeach_Rsp = 16;
inline bool CSGuildRespond::has_impeach_rsp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSGuildRespond::set_has_impeach_rsp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSGuildRespond::clear_has_impeach_rsp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSGuildRespond::clear_impeach_rsp() {
  impeach_rsp_ = 0u;
  clear_has_impeach_rsp();
}
inline ::google::protobuf::uint32 CSGuildRespond::impeach_rsp() const {
  return impeach_rsp_;
}
inline void CSGuildRespond::set_impeach_rsp(::google::protobuf::uint32 value) {
  set_has_impeach_rsp();
  impeach_rsp_ = value;
}

// optional .vmsg.CSGuildDailyActRsp GuildDailyAct_Rsp = 17;
inline bool CSGuildRespond::has_guilddailyact_rsp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSGuildRespond::set_has_guilddailyact_rsp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSGuildRespond::clear_has_guilddailyact_rsp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSGuildRespond::clear_guilddailyact_rsp() {
  if (guilddailyact_rsp_ != NULL) guilddailyact_rsp_->::vmsg::CSGuildDailyActRsp::Clear();
  clear_has_guilddailyact_rsp();
}
inline const ::vmsg::CSGuildDailyActRsp& CSGuildRespond::guilddailyact_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guilddailyact_rsp_ != NULL ? *guilddailyact_rsp_ : *default_instance().guilddailyact_rsp_;
#else
  return guilddailyact_rsp_ != NULL ? *guilddailyact_rsp_ : *default_instance_->guilddailyact_rsp_;
#endif
}
inline ::vmsg::CSGuildDailyActRsp* CSGuildRespond::mutable_guilddailyact_rsp() {
  set_has_guilddailyact_rsp();
  if (guilddailyact_rsp_ == NULL) guilddailyact_rsp_ = new ::vmsg::CSGuildDailyActRsp;
  return guilddailyact_rsp_;
}
inline ::vmsg::CSGuildDailyActRsp* CSGuildRespond::release_guilddailyact_rsp() {
  clear_has_guilddailyact_rsp();
  ::vmsg::CSGuildDailyActRsp* temp = guilddailyact_rsp_;
  guilddailyact_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guilddailyact_rsp(::vmsg::CSGuildDailyActRsp* guilddailyact_rsp) {
  delete guilddailyact_rsp_;
  guilddailyact_rsp_ = guilddailyact_rsp;
  if (guilddailyact_rsp) {
    set_has_guilddailyact_rsp();
  } else {
    clear_has_guilddailyact_rsp();
  }
}

// optional .vmsg.CSGuildInviteMemberRsp GuildInviteMember_Rsp = 18;
inline bool CSGuildRespond::has_guildinvitemember_rsp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSGuildRespond::set_has_guildinvitemember_rsp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSGuildRespond::clear_has_guildinvitemember_rsp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSGuildRespond::clear_guildinvitemember_rsp() {
  if (guildinvitemember_rsp_ != NULL) guildinvitemember_rsp_->::vmsg::CSGuildInviteMemberRsp::Clear();
  clear_has_guildinvitemember_rsp();
}
inline const ::vmsg::CSGuildInviteMemberRsp& CSGuildRespond::guildinvitemember_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildinvitemember_rsp_ != NULL ? *guildinvitemember_rsp_ : *default_instance().guildinvitemember_rsp_;
#else
  return guildinvitemember_rsp_ != NULL ? *guildinvitemember_rsp_ : *default_instance_->guildinvitemember_rsp_;
#endif
}
inline ::vmsg::CSGuildInviteMemberRsp* CSGuildRespond::mutable_guildinvitemember_rsp() {
  set_has_guildinvitemember_rsp();
  if (guildinvitemember_rsp_ == NULL) guildinvitemember_rsp_ = new ::vmsg::CSGuildInviteMemberRsp;
  return guildinvitemember_rsp_;
}
inline ::vmsg::CSGuildInviteMemberRsp* CSGuildRespond::release_guildinvitemember_rsp() {
  clear_has_guildinvitemember_rsp();
  ::vmsg::CSGuildInviteMemberRsp* temp = guildinvitemember_rsp_;
  guildinvitemember_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildinvitemember_rsp(::vmsg::CSGuildInviteMemberRsp* guildinvitemember_rsp) {
  delete guildinvitemember_rsp_;
  guildinvitemember_rsp_ = guildinvitemember_rsp;
  if (guildinvitemember_rsp) {
    set_has_guildinvitemember_rsp();
  } else {
    clear_has_guildinvitemember_rsp();
  }
}

// optional .vmsg.CSGuildBunEndRsp GuildBunEnd_Rsp = 19;
inline bool CSGuildRespond::has_guildbunend_rsp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSGuildRespond::set_has_guildbunend_rsp() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSGuildRespond::clear_has_guildbunend_rsp() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSGuildRespond::clear_guildbunend_rsp() {
  if (guildbunend_rsp_ != NULL) guildbunend_rsp_->::vmsg::CSGuildBunEndRsp::Clear();
  clear_has_guildbunend_rsp();
}
inline const ::vmsg::CSGuildBunEndRsp& CSGuildRespond::guildbunend_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildbunend_rsp_ != NULL ? *guildbunend_rsp_ : *default_instance().guildbunend_rsp_;
#else
  return guildbunend_rsp_ != NULL ? *guildbunend_rsp_ : *default_instance_->guildbunend_rsp_;
#endif
}
inline ::vmsg::CSGuildBunEndRsp* CSGuildRespond::mutable_guildbunend_rsp() {
  set_has_guildbunend_rsp();
  if (guildbunend_rsp_ == NULL) guildbunend_rsp_ = new ::vmsg::CSGuildBunEndRsp;
  return guildbunend_rsp_;
}
inline ::vmsg::CSGuildBunEndRsp* CSGuildRespond::release_guildbunend_rsp() {
  clear_has_guildbunend_rsp();
  ::vmsg::CSGuildBunEndRsp* temp = guildbunend_rsp_;
  guildbunend_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildbunend_rsp(::vmsg::CSGuildBunEndRsp* guildbunend_rsp) {
  delete guildbunend_rsp_;
  guildbunend_rsp_ = guildbunend_rsp;
  if (guildbunend_rsp) {
    set_has_guildbunend_rsp();
  } else {
    clear_has_guildbunend_rsp();
  }
}

// optional .vmsg.CSGuildStatNotify GuildStatNotify_Rsp = 20;
inline bool CSGuildRespond::has_guildstatnotify_rsp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSGuildRespond::set_has_guildstatnotify_rsp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSGuildRespond::clear_has_guildstatnotify_rsp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSGuildRespond::clear_guildstatnotify_rsp() {
  if (guildstatnotify_rsp_ != NULL) guildstatnotify_rsp_->::vmsg::CSGuildStatNotify::Clear();
  clear_has_guildstatnotify_rsp();
}
inline const ::vmsg::CSGuildStatNotify& CSGuildRespond::guildstatnotify_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return guildstatnotify_rsp_ != NULL ? *guildstatnotify_rsp_ : *default_instance().guildstatnotify_rsp_;
#else
  return guildstatnotify_rsp_ != NULL ? *guildstatnotify_rsp_ : *default_instance_->guildstatnotify_rsp_;
#endif
}
inline ::vmsg::CSGuildStatNotify* CSGuildRespond::mutable_guildstatnotify_rsp() {
  set_has_guildstatnotify_rsp();
  if (guildstatnotify_rsp_ == NULL) guildstatnotify_rsp_ = new ::vmsg::CSGuildStatNotify;
  return guildstatnotify_rsp_;
}
inline ::vmsg::CSGuildStatNotify* CSGuildRespond::release_guildstatnotify_rsp() {
  clear_has_guildstatnotify_rsp();
  ::vmsg::CSGuildStatNotify* temp = guildstatnotify_rsp_;
  guildstatnotify_rsp_ = NULL;
  return temp;
}
inline void CSGuildRespond::set_allocated_guildstatnotify_rsp(::vmsg::CSGuildStatNotify* guildstatnotify_rsp) {
  delete guildstatnotify_rsp_;
  guildstatnotify_rsp_ = guildstatnotify_rsp;
  if (guildstatnotify_rsp) {
    set_has_guildstatnotify_rsp();
  } else {
    clear_has_guildstatnotify_rsp();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vmsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSGuildMsg_2eproto__INCLUDED
