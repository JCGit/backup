// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSArenaMsg.proto

#ifndef PROTOBUF_CSArenaMsg_2eproto__INCLUDED
#define PROTOBUF_CSArenaMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MsgBase.pb.h"
#include "ShareByClient.pb.h"
#include "CSPlayerMsg.pb.h"
#include "CSBagMsg.pb.h"
// @@protoc_insertion_point(includes)

namespace vmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSArenaMsg_2eproto();
void protobuf_AssignDesc_CSArenaMsg_2eproto();
void protobuf_ShutdownFile_CSArenaMsg_2eproto();

class CSArenaQueryRsp;
class CSArenaOneRecord;
class CSArenaQueryRecordRsp;
class CSArenaFindOpponentRsp;
class CSArenaBuyNumRsp;
class CSArenaStartFightRsp;
class CSArenaEndFightRqst;
class CSArenaEndFightRsp;
class CSArenaStroeItem;
class CSArenaStroeInfo;
class CSArenaStroeBuyRqst;
class CSArenaRequest;
class CSArenaRespond;

// ===================================================================

class CSArenaQueryRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaQueryRsp();
  virtual ~CSArenaQueryRsp();

  CSArenaQueryRsp(const CSArenaQueryRsp& from);

  inline CSArenaQueryRsp& operator=(const CSArenaQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaQueryRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaQueryRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaQueryRsp* other);

  // implements Message ----------------------------------------------

  CSArenaQueryRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaQueryRsp& from);
  void MergeFrom(const CSArenaQueryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 WinNum = 2;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 2;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // required uint32 LoseNum = 3;
  inline bool has_losenum() const;
  inline void clear_losenum();
  static const int kLoseNumFieldNumber = 3;
  inline ::google::protobuf::uint32 losenum() const;
  inline void set_losenum(::google::protobuf::uint32 value);

  // required uint32 TodayFightNum = 4;
  inline bool has_todayfightnum() const;
  inline void clear_todayfightnum();
  static const int kTodayFightNumFieldNumber = 4;
  inline ::google::protobuf::uint32 todayfightnum() const;
  inline void set_todayfightnum(::google::protobuf::uint32 value);

  // required uint32 TodayMatchNum = 5;
  inline bool has_todaymatchnum() const;
  inline void clear_todaymatchnum();
  static const int kTodayMatchNumFieldNumber = 5;
  inline ::google::protobuf::uint32 todaymatchnum() const;
  inline void set_todaymatchnum(::google::protobuf::uint32 value);

  // required uint32 IsHaveTodayAward = 6;
  inline bool has_ishavetodayaward() const;
  inline void clear_ishavetodayaward();
  static const int kIsHaveTodayAwardFieldNumber = 6;
  inline ::google::protobuf::uint32 ishavetodayaward() const;
  inline void set_ishavetodayaward(::google::protobuf::uint32 value);

  // required uint32 TodayBuyNum = 7;
  inline bool has_todaybuynum() const;
  inline void clear_todaybuynum();
  static const int kTodayBuyNumFieldNumber = 7;
  inline ::google::protobuf::uint32 todaybuynum() const;
  inline void set_todaybuynum(::google::protobuf::uint32 value);

  // required uint32 ArenaMoney = 8;
  inline bool has_arenamoney() const;
  inline void clear_arenamoney();
  static const int kArenaMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 arenamoney() const;
  inline void set_arenamoney(::google::protobuf::uint32 value);

  // required uint32 ArenaMaxBuyCnt = 9;
  inline bool has_arenamaxbuycnt() const;
  inline void clear_arenamaxbuycnt();
  static const int kArenaMaxBuyCntFieldNumber = 9;
  inline ::google::protobuf::uint32 arenamaxbuycnt() const;
  inline void set_arenamaxbuycnt(::google::protobuf::uint32 value);

  // required uint32 IsFirstFight = 10;
  inline bool has_isfirstfight() const;
  inline void clear_isfirstfight();
  static const int kIsFirstFightFieldNumber = 10;
  inline ::google::protobuf::uint32 isfirstfight() const;
  inline void set_isfirstfight(::google::protobuf::uint32 value);

  // required uint32 RemainFightCD = 11;
  inline bool has_remainfightcd() const;
  inline void clear_remainfightcd();
  static const int kRemainFightCDFieldNumber = 11;
  inline ::google::protobuf::uint32 remainfightcd() const;
  inline void set_remainfightcd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaQueryRsp)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_winnum();
  inline void clear_has_winnum();
  inline void set_has_losenum();
  inline void clear_has_losenum();
  inline void set_has_todayfightnum();
  inline void clear_has_todayfightnum();
  inline void set_has_todaymatchnum();
  inline void clear_has_todaymatchnum();
  inline void set_has_ishavetodayaward();
  inline void clear_has_ishavetodayaward();
  inline void set_has_todaybuynum();
  inline void clear_has_todaybuynum();
  inline void set_has_arenamoney();
  inline void clear_has_arenamoney();
  inline void set_has_arenamaxbuycnt();
  inline void clear_has_arenamaxbuycnt();
  inline void set_has_isfirstfight();
  inline void clear_has_isfirstfight();
  inline void set_has_remainfightcd();
  inline void clear_has_remainfightcd();

  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 winnum_;
  ::google::protobuf::uint32 losenum_;
  ::google::protobuf::uint32 todayfightnum_;
  ::google::protobuf::uint32 todaymatchnum_;
  ::google::protobuf::uint32 ishavetodayaward_;
  ::google::protobuf::uint32 todaybuynum_;
  ::google::protobuf::uint32 arenamoney_;
  ::google::protobuf::uint32 arenamaxbuycnt_;
  ::google::protobuf::uint32 isfirstfight_;
  ::google::protobuf::uint32 remainfightcd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaQueryRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaOneRecord : public ::google::protobuf::MessageLite {
 public:
  CSArenaOneRecord();
  virtual ~CSArenaOneRecord();

  CSArenaOneRecord(const CSArenaOneRecord& from);

  inline CSArenaOneRecord& operator=(const CSArenaOneRecord& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaOneRecord& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaOneRecord* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaOneRecord* other);

  // implements Message ----------------------------------------------

  CSArenaOneRecord* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaOneRecord& from);
  void MergeFrom(const CSArenaOneRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 OpponentUin = 1;
  inline bool has_opponentuin() const;
  inline void clear_opponentuin();
  static const int kOpponentUinFieldNumber = 1;
  inline ::google::protobuf::uint64 opponentuin() const;
  inline void set_opponentuin(::google::protobuf::uint64 value);

  // required uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 IsMeWin = 3;
  inline bool has_ismewin() const;
  inline void clear_ismewin();
  static const int kIsMeWinFieldNumber = 3;
  inline ::google::protobuf::uint32 ismewin() const;
  inline void set_ismewin(::google::protobuf::uint32 value);

  // required uint32 IsMeChallenger = 4;
  inline bool has_ismechallenger() const;
  inline void clear_ismechallenger();
  static const int kIsMeChallengerFieldNumber = 4;
  inline ::google::protobuf::uint32 ismechallenger() const;
  inline void set_ismechallenger(::google::protobuf::uint32 value);

  // required string OpponentName = 5;
  inline bool has_opponentname() const;
  inline void clear_opponentname();
  static const int kOpponentNameFieldNumber = 5;
  inline const ::std::string& opponentname() const;
  inline void set_opponentname(const ::std::string& value);
  inline void set_opponentname(const char* value);
  inline void set_opponentname(const char* value, size_t size);
  inline ::std::string* mutable_opponentname();
  inline ::std::string* release_opponentname();
  inline void set_allocated_opponentname(::std::string* opponentname);

  // required uint32 IsFightBack = 6;
  inline bool has_isfightback() const;
  inline void clear_isfightback();
  static const int kIsFightBackFieldNumber = 6;
  inline ::google::protobuf::uint32 isfightback() const;
  inline void set_isfightback(::google::protobuf::uint32 value);

  // required int32 ScoreChange = 7;
  inline bool has_scorechange() const;
  inline void clear_scorechange();
  static const int kScoreChangeFieldNumber = 7;
  inline ::google::protobuf::int32 scorechange() const;
  inline void set_scorechange(::google::protobuf::int32 value);

  // required int32 CoinChange = 8;
  inline bool has_coinchange() const;
  inline void clear_coinchange();
  static const int kCoinChangeFieldNumber = 8;
  inline ::google::protobuf::int32 coinchange() const;
  inline void set_coinchange(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaOneRecord)
 private:
  inline void set_has_opponentuin();
  inline void clear_has_opponentuin();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_ismewin();
  inline void clear_has_ismewin();
  inline void set_has_ismechallenger();
  inline void clear_has_ismechallenger();
  inline void set_has_opponentname();
  inline void clear_has_opponentname();
  inline void set_has_isfightback();
  inline void clear_has_isfightback();
  inline void set_has_scorechange();
  inline void clear_has_scorechange();
  inline void set_has_coinchange();
  inline void clear_has_coinchange();

  ::google::protobuf::uint64 opponentuin_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 ismewin_;
  ::std::string* opponentname_;
  ::google::protobuf::uint32 ismechallenger_;
  ::google::protobuf::uint32 isfightback_;
  ::google::protobuf::int32 scorechange_;
  ::google::protobuf::int32 coinchange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaOneRecord* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaQueryRecordRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaQueryRecordRsp();
  virtual ~CSArenaQueryRecordRsp();

  CSArenaQueryRecordRsp(const CSArenaQueryRecordRsp& from);

  inline CSArenaQueryRecordRsp& operator=(const CSArenaQueryRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaQueryRecordRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaQueryRecordRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaQueryRecordRsp* other);

  // implements Message ----------------------------------------------

  CSArenaQueryRecordRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaQueryRecordRsp& from);
  void MergeFrom(const CSArenaQueryRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vmsg.CSArenaOneRecord RecordLst = 1;
  inline int recordlst_size() const;
  inline void clear_recordlst();
  static const int kRecordLstFieldNumber = 1;
  inline const ::vmsg::CSArenaOneRecord& recordlst(int index) const;
  inline ::vmsg::CSArenaOneRecord* mutable_recordlst(int index);
  inline ::vmsg::CSArenaOneRecord* add_recordlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaOneRecord >&
      recordlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaOneRecord >*
      mutable_recordlst();

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaQueryRecordRsp)
 private:

  ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaOneRecord > recordlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaQueryRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaFindOpponentRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaFindOpponentRsp();
  virtual ~CSArenaFindOpponentRsp();

  CSArenaFindOpponentRsp(const CSArenaFindOpponentRsp& from);

  inline CSArenaFindOpponentRsp& operator=(const CSArenaFindOpponentRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaFindOpponentRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaFindOpponentRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaFindOpponentRsp* other);

  // implements Message ----------------------------------------------

  CSArenaFindOpponentRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaFindOpponentRsp& from);
  void MergeFrom(const CSArenaFindOpponentRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 Uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint64 uin() const;
  inline void set_uin(::google::protobuf::uint64 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 Score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 FightPower = 4;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 4;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);

  // required uint32 TodayMatchNum = 5;
  inline bool has_todaymatchnum() const;
  inline void clear_todaymatchnum();
  static const int kTodayMatchNumFieldNumber = 5;
  inline ::google::protobuf::uint32 todaymatchnum() const;
  inline void set_todaymatchnum(::google::protobuf::uint32 value);

  // required uint32 ShowID = 6;
  inline bool has_showid() const;
  inline void clear_showid();
  static const int kShowIDFieldNumber = 6;
  inline ::google::protobuf::uint32 showid() const;
  inline void set_showid(::google::protobuf::uint32 value);

  // optional uint32 OpponentLevel = 7;
  inline bool has_opponentlevel() const;
  inline void clear_opponentlevel();
  static const int kOpponentLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 opponentlevel() const;
  inline void set_opponentlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaFindOpponentRsp)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_todaymatchnum();
  inline void clear_has_todaymatchnum();
  inline void set_has_showid();
  inline void clear_has_showid();
  inline void set_has_opponentlevel();
  inline void clear_has_opponentlevel();

  ::google::protobuf::uint64 uin_;
  ::std::string* name_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 fightpower_;
  ::google::protobuf::uint32 todaymatchnum_;
  ::google::protobuf::uint32 showid_;
  ::google::protobuf::uint32 opponentlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaFindOpponentRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaBuyNumRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaBuyNumRsp();
  virtual ~CSArenaBuyNumRsp();

  CSArenaBuyNumRsp(const CSArenaBuyNumRsp& from);

  inline CSArenaBuyNumRsp& operator=(const CSArenaBuyNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaBuyNumRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaBuyNumRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaBuyNumRsp* other);

  // implements Message ----------------------------------------------

  CSArenaBuyNumRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaBuyNumRsp& from);
  void MergeFrom(const CSArenaBuyNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 TodayFightNum = 1;
  inline bool has_todayfightnum() const;
  inline void clear_todayfightnum();
  static const int kTodayFightNumFieldNumber = 1;
  inline ::google::protobuf::uint32 todayfightnum() const;
  inline void set_todayfightnum(::google::protobuf::uint32 value);

  // required uint32 TodayBuyNum = 2;
  inline bool has_todaybuynum() const;
  inline void clear_todaybuynum();
  static const int kTodayBuyNumFieldNumber = 2;
  inline ::google::protobuf::uint32 todaybuynum() const;
  inline void set_todaybuynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaBuyNumRsp)
 private:
  inline void set_has_todayfightnum();
  inline void clear_has_todayfightnum();
  inline void set_has_todaybuynum();
  inline void clear_has_todaybuynum();

  ::google::protobuf::uint32 todayfightnum_;
  ::google::protobuf::uint32 todaybuynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaBuyNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaStartFightRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaStartFightRsp();
  virtual ~CSArenaStartFightRsp();

  CSArenaStartFightRsp(const CSArenaStartFightRsp& from);

  inline CSArenaStartFightRsp& operator=(const CSArenaStartFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaStartFightRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaStartFightRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaStartFightRsp* other);

  // implements Message ----------------------------------------------

  CSArenaStartFightRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaStartFightRsp& from);
  void MergeFrom(const CSArenaStartFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .vmsg.CSPlayerDetailInfo MyDetail = 1;
  inline bool has_mydetail() const;
  inline void clear_mydetail();
  static const int kMyDetailFieldNumber = 1;
  inline const ::vmsg::CSPlayerDetailInfo& mydetail() const;
  inline ::vmsg::CSPlayerDetailInfo* mutable_mydetail();
  inline ::vmsg::CSPlayerDetailInfo* release_mydetail();
  inline void set_allocated_mydetail(::vmsg::CSPlayerDetailInfo* mydetail);

  // required .vmsg.CSPlayerDetailInfo OpponentDetail = 2;
  inline bool has_opponentdetail() const;
  inline void clear_opponentdetail();
  static const int kOpponentDetailFieldNumber = 2;
  inline const ::vmsg::CSPlayerDetailInfo& opponentdetail() const;
  inline ::vmsg::CSPlayerDetailInfo* mutable_opponentdetail();
  inline ::vmsg::CSPlayerDetailInfo* release_opponentdetail();
  inline void set_allocated_opponentdetail(::vmsg::CSPlayerDetailInfo* opponentdetail);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaStartFightRsp)
 private:
  inline void set_has_mydetail();
  inline void clear_has_mydetail();
  inline void set_has_opponentdetail();
  inline void clear_has_opponentdetail();

  ::vmsg::CSPlayerDetailInfo* mydetail_;
  ::vmsg::CSPlayerDetailInfo* opponentdetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaStartFightRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaEndFightRqst : public ::google::protobuf::MessageLite {
 public:
  CSArenaEndFightRqst();
  virtual ~CSArenaEndFightRqst();

  CSArenaEndFightRqst(const CSArenaEndFightRqst& from);

  inline CSArenaEndFightRqst& operator=(const CSArenaEndFightRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaEndFightRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaEndFightRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaEndFightRqst* other);

  // implements Message ----------------------------------------------

  CSArenaEndFightRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaEndFightRqst& from);
  void MergeFrom(const CSArenaEndFightRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 OpponentUin = 1;
  inline bool has_opponentuin() const;
  inline void clear_opponentuin();
  static const int kOpponentUinFieldNumber = 1;
  inline ::google::protobuf::uint64 opponentuin() const;
  inline void set_opponentuin(::google::protobuf::uint64 value);

  // required uint32 IsMyWin = 2;
  inline bool has_ismywin() const;
  inline void clear_ismywin();
  static const int kIsMyWinFieldNumber = 2;
  inline ::google::protobuf::uint32 ismywin() const;
  inline void set_ismywin(::google::protobuf::uint32 value);

  // required uint32 IsFightBack = 3;
  inline bool has_isfightback() const;
  inline void clear_isfightback();
  static const int kIsFightBackFieldNumber = 3;
  inline ::google::protobuf::uint32 isfightback() const;
  inline void set_isfightback(::google::protobuf::uint32 value);

  // required uint32 RecordTime = 4;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaEndFightRqst)
 private:
  inline void set_has_opponentuin();
  inline void clear_has_opponentuin();
  inline void set_has_ismywin();
  inline void clear_has_ismywin();
  inline void set_has_isfightback();
  inline void clear_has_isfightback();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();

  ::google::protobuf::uint64 opponentuin_;
  ::google::protobuf::uint32 ismywin_;
  ::google::protobuf::uint32 isfightback_;
  ::google::protobuf::uint32 recordtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaEndFightRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaEndFightRsp : public ::google::protobuf::MessageLite {
 public:
  CSArenaEndFightRsp();
  virtual ~CSArenaEndFightRsp();

  CSArenaEndFightRsp(const CSArenaEndFightRsp& from);

  inline CSArenaEndFightRsp& operator=(const CSArenaEndFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaEndFightRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaEndFightRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaEndFightRsp* other);

  // implements Message ----------------------------------------------

  CSArenaEndFightRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaEndFightRsp& from);
  void MergeFrom(const CSArenaEndFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 CoinChange = 1;
  inline bool has_coinchange() const;
  inline void clear_coinchange();
  static const int kCoinChangeFieldNumber = 1;
  inline ::google::protobuf::int32 coinchange() const;
  inline void set_coinchange(::google::protobuf::int32 value);

  // required int32 ArenaMoneyChange = 2;
  inline bool has_arenamoneychange() const;
  inline void clear_arenamoneychange();
  static const int kArenaMoneyChangeFieldNumber = 2;
  inline ::google::protobuf::int32 arenamoneychange() const;
  inline void set_arenamoneychange(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaEndFightRsp)
 private:
  inline void set_has_coinchange();
  inline void clear_has_coinchange();
  inline void set_has_arenamoneychange();
  inline void clear_has_arenamoneychange();

  ::google::protobuf::int32 coinchange_;
  ::google::protobuf::int32 arenamoneychange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaEndFightRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaStroeItem : public ::google::protobuf::MessageLite {
 public:
  CSArenaStroeItem();
  virtual ~CSArenaStroeItem();

  CSArenaStroeItem(const CSArenaStroeItem& from);

  inline CSArenaStroeItem& operator=(const CSArenaStroeItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaStroeItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaStroeItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaStroeItem* other);

  // implements Message ----------------------------------------------

  CSArenaStroeItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaStroeItem& from);
  void MergeFrom(const CSArenaStroeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ItemType = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // required uint32 ItemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 ItemCnt = 3;
  inline bool has_itemcnt() const;
  inline void clear_itemcnt();
  static const int kItemCntFieldNumber = 3;
  inline ::google::protobuf::uint32 itemcnt() const;
  inline void set_itemcnt(::google::protobuf::uint32 value);

  // required uint32 ItemBought = 4;
  inline bool has_itembought() const;
  inline void clear_itembought();
  static const int kItemBoughtFieldNumber = 4;
  inline ::google::protobuf::uint32 itembought() const;
  inline void set_itembought(::google::protobuf::uint32 value);

  // required uint32 ArenaMoney = 5;
  inline bool has_arenamoney() const;
  inline void clear_arenamoney();
  static const int kArenaMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 arenamoney() const;
  inline void set_arenamoney(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaStroeItem)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcnt();
  inline void clear_has_itemcnt();
  inline void set_has_itembought();
  inline void clear_has_itembought();
  inline void set_has_arenamoney();
  inline void clear_has_arenamoney();

  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcnt_;
  ::google::protobuf::uint32 itembought_;
  ::google::protobuf::uint32 arenamoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaStroeItem* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaStroeInfo : public ::google::protobuf::MessageLite {
 public:
  CSArenaStroeInfo();
  virtual ~CSArenaStroeInfo();

  CSArenaStroeInfo(const CSArenaStroeInfo& from);

  inline CSArenaStroeInfo& operator=(const CSArenaStroeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaStroeInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaStroeInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaStroeInfo* other);

  // implements Message ----------------------------------------------

  CSArenaStroeInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaStroeInfo& from);
  void MergeFrom(const CSArenaStroeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ArenaMoney = 1;
  inline bool has_arenamoney() const;
  inline void clear_arenamoney();
  static const int kArenaMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 arenamoney() const;
  inline void set_arenamoney(::google::protobuf::uint32 value);

  // required uint32 LastRefreshTime = 2;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint32 value);

  // repeated .vmsg.CSArenaStroeItem ItemLst = 3;
  inline int itemlst_size() const;
  inline void clear_itemlst();
  static const int kItemLstFieldNumber = 3;
  inline const ::vmsg::CSArenaStroeItem& itemlst(int index) const;
  inline ::vmsg::CSArenaStroeItem* mutable_itemlst(int index);
  inline ::vmsg::CSArenaStroeItem* add_itemlst();
  inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaStroeItem >&
      itemlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaStroeItem >*
      mutable_itemlst();

  // required .vmsg.CSBagInfo BagInfo = 4;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 4;
  inline const ::vmsg::CSBagInfo& baginfo() const;
  inline ::vmsg::CSBagInfo* mutable_baginfo();
  inline ::vmsg::CSBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::vmsg::CSBagInfo* baginfo);

  // required uint32 MaxRefreshCnt = 5;
  inline bool has_maxrefreshcnt() const;
  inline void clear_maxrefreshcnt();
  static const int kMaxRefreshCntFieldNumber = 5;
  inline ::google::protobuf::uint32 maxrefreshcnt() const;
  inline void set_maxrefreshcnt(::google::protobuf::uint32 value);

  // required uint32 RefreshCnt = 6;
  inline bool has_refreshcnt() const;
  inline void clear_refreshcnt();
  static const int kRefreshCntFieldNumber = 6;
  inline ::google::protobuf::uint32 refreshcnt() const;
  inline void set_refreshcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaStroeInfo)
 private:
  inline void set_has_arenamoney();
  inline void clear_has_arenamoney();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();
  inline void set_has_baginfo();
  inline void clear_has_baginfo();
  inline void set_has_maxrefreshcnt();
  inline void clear_has_maxrefreshcnt();
  inline void set_has_refreshcnt();
  inline void clear_has_refreshcnt();

  ::google::protobuf::uint32 arenamoney_;
  ::google::protobuf::uint32 lastrefreshtime_;
  ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaStroeItem > itemlst_;
  ::vmsg::CSBagInfo* baginfo_;
  ::google::protobuf::uint32 maxrefreshcnt_;
  ::google::protobuf::uint32 refreshcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaStroeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaStroeBuyRqst : public ::google::protobuf::MessageLite {
 public:
  CSArenaStroeBuyRqst();
  virtual ~CSArenaStroeBuyRqst();

  CSArenaStroeBuyRqst(const CSArenaStroeBuyRqst& from);

  inline CSArenaStroeBuyRqst& operator=(const CSArenaStroeBuyRqst& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaStroeBuyRqst& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaStroeBuyRqst* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaStroeBuyRqst* other);

  // implements Message ----------------------------------------------

  CSArenaStroeBuyRqst* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaStroeBuyRqst& from);
  void MergeFrom(const CSArenaStroeBuyRqst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ItemIdx = 1;
  inline bool has_itemidx() const;
  inline void clear_itemidx();
  static const int kItemIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 itemidx() const;
  inline void set_itemidx(::google::protobuf::uint32 value);

  // required uint32 ItemCfgID = 2;
  inline bool has_itemcfgid() const;
  inline void clear_itemcfgid();
  static const int kItemCfgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 itemcfgid() const;
  inline void set_itemcfgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaStroeBuyRqst)
 private:
  inline void set_has_itemidx();
  inline void clear_has_itemidx();
  inline void set_has_itemcfgid();
  inline void clear_has_itemcfgid();

  ::google::protobuf::uint32 itemidx_;
  ::google::protobuf::uint32 itemcfgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaStroeBuyRqst* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaRequest : public ::google::protobuf::MessageLite {
 public:
  CSArenaRequest();
  virtual ~CSArenaRequest();

  CSArenaRequest(const CSArenaRequest& from);

  inline CSArenaRequest& operator=(const CSArenaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaRequest* other);

  // implements Message ----------------------------------------------

  CSArenaRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaRequest& from);
  void MergeFrom(const CSArenaRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 StartFightUin_Rqst = 1;
  inline bool has_startfightuin_rqst() const;
  inline void clear_startfightuin_rqst();
  static const int kStartFightUinRqstFieldNumber = 1;
  inline ::google::protobuf::uint64 startfightuin_rqst() const;
  inline void set_startfightuin_rqst(::google::protobuf::uint64 value);

  // optional .vmsg.CSArenaEndFightRqst EndFightUin_Rqst = 2;
  inline bool has_endfightuin_rqst() const;
  inline void clear_endfightuin_rqst();
  static const int kEndFightUinRqstFieldNumber = 2;
  inline const ::vmsg::CSArenaEndFightRqst& endfightuin_rqst() const;
  inline ::vmsg::CSArenaEndFightRqst* mutable_endfightuin_rqst();
  inline ::vmsg::CSArenaEndFightRqst* release_endfightuin_rqst();
  inline void set_allocated_endfightuin_rqst(::vmsg::CSArenaEndFightRqst* endfightuin_rqst);

  // optional .vmsg.CSArenaStroeBuyRqst ArenaStoreBuy_Rqst = 3;
  inline bool has_arenastorebuy_rqst() const;
  inline void clear_arenastorebuy_rqst();
  static const int kArenaStoreBuyRqstFieldNumber = 3;
  inline const ::vmsg::CSArenaStroeBuyRqst& arenastorebuy_rqst() const;
  inline ::vmsg::CSArenaStroeBuyRqst* mutable_arenastorebuy_rqst();
  inline ::vmsg::CSArenaStroeBuyRqst* release_arenastorebuy_rqst();
  inline void set_allocated_arenastorebuy_rqst(::vmsg::CSArenaStroeBuyRqst* arenastorebuy_rqst);

  // optional uint64 OpponentUin_Rqst = 4;
  inline bool has_opponentuin_rqst() const;
  inline void clear_opponentuin_rqst();
  static const int kOpponentUinRqstFieldNumber = 4;
  inline ::google::protobuf::uint64 opponentuin_rqst() const;
  inline void set_opponentuin_rqst(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaRequest)
 private:
  inline void set_has_startfightuin_rqst();
  inline void clear_has_startfightuin_rqst();
  inline void set_has_endfightuin_rqst();
  inline void clear_has_endfightuin_rqst();
  inline void set_has_arenastorebuy_rqst();
  inline void clear_has_arenastorebuy_rqst();
  inline void set_has_opponentuin_rqst();
  inline void clear_has_opponentuin_rqst();

  ::google::protobuf::uint64 startfightuin_rqst_;
  ::vmsg::CSArenaEndFightRqst* endfightuin_rqst_;
  ::vmsg::CSArenaStroeBuyRqst* arenastorebuy_rqst_;
  ::google::protobuf::uint64 opponentuin_rqst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaRequest* default_instance_;
};
// -------------------------------------------------------------------

class CSArenaRespond : public ::google::protobuf::MessageLite {
 public:
  CSArenaRespond();
  virtual ~CSArenaRespond();

  CSArenaRespond(const CSArenaRespond& from);

  inline CSArenaRespond& operator=(const CSArenaRespond& from) {
    CopyFrom(from);
    return *this;
  }

  static const CSArenaRespond& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CSArenaRespond* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CSArenaRespond* other);

  // implements Message ----------------------------------------------

  CSArenaRespond* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CSArenaRespond& from);
  void MergeFrom(const CSArenaRespond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vmsg.CSArenaQueryRsp ArenaQuery_Rsp = 1;
  inline bool has_arenaquery_rsp() const;
  inline void clear_arenaquery_rsp();
  static const int kArenaQueryRspFieldNumber = 1;
  inline const ::vmsg::CSArenaQueryRsp& arenaquery_rsp() const;
  inline ::vmsg::CSArenaQueryRsp* mutable_arenaquery_rsp();
  inline ::vmsg::CSArenaQueryRsp* release_arenaquery_rsp();
  inline void set_allocated_arenaquery_rsp(::vmsg::CSArenaQueryRsp* arenaquery_rsp);

  // optional .vmsg.CSArenaQueryRecordRsp Record_Rsp = 2;
  inline bool has_record_rsp() const;
  inline void clear_record_rsp();
  static const int kRecordRspFieldNumber = 2;
  inline const ::vmsg::CSArenaQueryRecordRsp& record_rsp() const;
  inline ::vmsg::CSArenaQueryRecordRsp* mutable_record_rsp();
  inline ::vmsg::CSArenaQueryRecordRsp* release_record_rsp();
  inline void set_allocated_record_rsp(::vmsg::CSArenaQueryRecordRsp* record_rsp);

  // optional .vmsg.CSArenaFindOpponentRsp FindOpponent_Rsp = 3;
  inline bool has_findopponent_rsp() const;
  inline void clear_findopponent_rsp();
  static const int kFindOpponentRspFieldNumber = 3;
  inline const ::vmsg::CSArenaFindOpponentRsp& findopponent_rsp() const;
  inline ::vmsg::CSArenaFindOpponentRsp* mutable_findopponent_rsp();
  inline ::vmsg::CSArenaFindOpponentRsp* release_findopponent_rsp();
  inline void set_allocated_findopponent_rsp(::vmsg::CSArenaFindOpponentRsp* findopponent_rsp);

  // optional uint32 GetAward_Rsp = 4;
  inline bool has_getaward_rsp() const;
  inline void clear_getaward_rsp();
  static const int kGetAwardRspFieldNumber = 4;
  inline ::google::protobuf::uint32 getaward_rsp() const;
  inline void set_getaward_rsp(::google::protobuf::uint32 value);

  // optional .vmsg.CSArenaBuyNumRsp BuyNum_Rsp = 5;
  inline bool has_buynum_rsp() const;
  inline void clear_buynum_rsp();
  static const int kBuyNumRspFieldNumber = 5;
  inline const ::vmsg::CSArenaBuyNumRsp& buynum_rsp() const;
  inline ::vmsg::CSArenaBuyNumRsp* mutable_buynum_rsp();
  inline ::vmsg::CSArenaBuyNumRsp* release_buynum_rsp();
  inline void set_allocated_buynum_rsp(::vmsg::CSArenaBuyNumRsp* buynum_rsp);

  // optional .vmsg.CSArenaStartFightRsp StartFight_Rsp = 6;
  inline bool has_startfight_rsp() const;
  inline void clear_startfight_rsp();
  static const int kStartFightRspFieldNumber = 6;
  inline const ::vmsg::CSArenaStartFightRsp& startfight_rsp() const;
  inline ::vmsg::CSArenaStartFightRsp* mutable_startfight_rsp();
  inline ::vmsg::CSArenaStartFightRsp* release_startfight_rsp();
  inline void set_allocated_startfight_rsp(::vmsg::CSArenaStartFightRsp* startfight_rsp);

  // optional .vmsg.CSArenaEndFightRsp EndFight_Rsp = 7;
  inline bool has_endfight_rsp() const;
  inline void clear_endfight_rsp();
  static const int kEndFightRspFieldNumber = 7;
  inline const ::vmsg::CSArenaEndFightRsp& endfight_rsp() const;
  inline ::vmsg::CSArenaEndFightRsp* mutable_endfight_rsp();
  inline ::vmsg::CSArenaEndFightRsp* release_endfight_rsp();
  inline void set_allocated_endfight_rsp(::vmsg::CSArenaEndFightRsp* endfight_rsp);

  // optional .vmsg.CSArenaStroeInfo StoreQuery_Rsp = 8;
  inline bool has_storequery_rsp() const;
  inline void clear_storequery_rsp();
  static const int kStoreQueryRspFieldNumber = 8;
  inline const ::vmsg::CSArenaStroeInfo& storequery_rsp() const;
  inline ::vmsg::CSArenaStroeInfo* mutable_storequery_rsp();
  inline ::vmsg::CSArenaStroeInfo* release_storequery_rsp();
  inline void set_allocated_storequery_rsp(::vmsg::CSArenaStroeInfo* storequery_rsp);

  // optional .vmsg.CSArenaStroeInfo StoreBuy_Rsp = 9;
  inline bool has_storebuy_rsp() const;
  inline void clear_storebuy_rsp();
  static const int kStoreBuyRspFieldNumber = 9;
  inline const ::vmsg::CSArenaStroeInfo& storebuy_rsp() const;
  inline ::vmsg::CSArenaStroeInfo* mutable_storebuy_rsp();
  inline ::vmsg::CSArenaStroeInfo* release_storebuy_rsp();
  inline void set_allocated_storebuy_rsp(::vmsg::CSArenaStroeInfo* storebuy_rsp);

  // optional .vmsg.CSArenaStroeInfo StoreRefresh_Rsp = 10;
  inline bool has_storerefresh_rsp() const;
  inline void clear_storerefresh_rsp();
  static const int kStoreRefreshRspFieldNumber = 10;
  inline const ::vmsg::CSArenaStroeInfo& storerefresh_rsp() const;
  inline ::vmsg::CSArenaStroeInfo* mutable_storerefresh_rsp();
  inline ::vmsg::CSArenaStroeInfo* release_storerefresh_rsp();
  inline void set_allocated_storerefresh_rsp(::vmsg::CSArenaStroeInfo* storerefresh_rsp);

  // @@protoc_insertion_point(class_scope:vmsg.CSArenaRespond)
 private:
  inline void set_has_arenaquery_rsp();
  inline void clear_has_arenaquery_rsp();
  inline void set_has_record_rsp();
  inline void clear_has_record_rsp();
  inline void set_has_findopponent_rsp();
  inline void clear_has_findopponent_rsp();
  inline void set_has_getaward_rsp();
  inline void clear_has_getaward_rsp();
  inline void set_has_buynum_rsp();
  inline void clear_has_buynum_rsp();
  inline void set_has_startfight_rsp();
  inline void clear_has_startfight_rsp();
  inline void set_has_endfight_rsp();
  inline void clear_has_endfight_rsp();
  inline void set_has_storequery_rsp();
  inline void clear_has_storequery_rsp();
  inline void set_has_storebuy_rsp();
  inline void clear_has_storebuy_rsp();
  inline void set_has_storerefresh_rsp();
  inline void clear_has_storerefresh_rsp();

  ::vmsg::CSArenaQueryRsp* arenaquery_rsp_;
  ::vmsg::CSArenaQueryRecordRsp* record_rsp_;
  ::vmsg::CSArenaFindOpponentRsp* findopponent_rsp_;
  ::vmsg::CSArenaBuyNumRsp* buynum_rsp_;
  ::vmsg::CSArenaStartFightRsp* startfight_rsp_;
  ::vmsg::CSArenaEndFightRsp* endfight_rsp_;
  ::vmsg::CSArenaStroeInfo* storequery_rsp_;
  ::vmsg::CSArenaStroeInfo* storebuy_rsp_;
  ::vmsg::CSArenaStroeInfo* storerefresh_rsp_;
  ::google::protobuf::uint32 getaward_rsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CSArenaMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CSArenaMsg_2eproto();
  friend void protobuf_ShutdownFile_CSArenaMsg_2eproto();

  void InitAsDefaultInstance();
  static CSArenaRespond* default_instance_;
};
// ===================================================================


// ===================================================================

// CSArenaQueryRsp

// required uint32 Score = 1;
inline bool CSArenaQueryRsp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaQueryRsp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaQueryRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaQueryRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::score() const {
  return score_;
}
inline void CSArenaQueryRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 WinNum = 2;
inline bool CSArenaQueryRsp::has_winnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaQueryRsp::set_has_winnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaQueryRsp::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaQueryRsp::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::winnum() const {
  return winnum_;
}
inline void CSArenaQueryRsp::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
}

// required uint32 LoseNum = 3;
inline bool CSArenaQueryRsp::has_losenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaQueryRsp::set_has_losenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaQueryRsp::clear_has_losenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaQueryRsp::clear_losenum() {
  losenum_ = 0u;
  clear_has_losenum();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::losenum() const {
  return losenum_;
}
inline void CSArenaQueryRsp::set_losenum(::google::protobuf::uint32 value) {
  set_has_losenum();
  losenum_ = value;
}

// required uint32 TodayFightNum = 4;
inline bool CSArenaQueryRsp::has_todayfightnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaQueryRsp::set_has_todayfightnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaQueryRsp::clear_has_todayfightnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaQueryRsp::clear_todayfightnum() {
  todayfightnum_ = 0u;
  clear_has_todayfightnum();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::todayfightnum() const {
  return todayfightnum_;
}
inline void CSArenaQueryRsp::set_todayfightnum(::google::protobuf::uint32 value) {
  set_has_todayfightnum();
  todayfightnum_ = value;
}

// required uint32 TodayMatchNum = 5;
inline bool CSArenaQueryRsp::has_todaymatchnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaQueryRsp::set_has_todaymatchnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaQueryRsp::clear_has_todaymatchnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaQueryRsp::clear_todaymatchnum() {
  todaymatchnum_ = 0u;
  clear_has_todaymatchnum();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::todaymatchnum() const {
  return todaymatchnum_;
}
inline void CSArenaQueryRsp::set_todaymatchnum(::google::protobuf::uint32 value) {
  set_has_todaymatchnum();
  todaymatchnum_ = value;
}

// required uint32 IsHaveTodayAward = 6;
inline bool CSArenaQueryRsp::has_ishavetodayaward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSArenaQueryRsp::set_has_ishavetodayaward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSArenaQueryRsp::clear_has_ishavetodayaward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSArenaQueryRsp::clear_ishavetodayaward() {
  ishavetodayaward_ = 0u;
  clear_has_ishavetodayaward();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::ishavetodayaward() const {
  return ishavetodayaward_;
}
inline void CSArenaQueryRsp::set_ishavetodayaward(::google::protobuf::uint32 value) {
  set_has_ishavetodayaward();
  ishavetodayaward_ = value;
}

// required uint32 TodayBuyNum = 7;
inline bool CSArenaQueryRsp::has_todaybuynum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSArenaQueryRsp::set_has_todaybuynum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSArenaQueryRsp::clear_has_todaybuynum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSArenaQueryRsp::clear_todaybuynum() {
  todaybuynum_ = 0u;
  clear_has_todaybuynum();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::todaybuynum() const {
  return todaybuynum_;
}
inline void CSArenaQueryRsp::set_todaybuynum(::google::protobuf::uint32 value) {
  set_has_todaybuynum();
  todaybuynum_ = value;
}

// required uint32 ArenaMoney = 8;
inline bool CSArenaQueryRsp::has_arenamoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSArenaQueryRsp::set_has_arenamoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSArenaQueryRsp::clear_has_arenamoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSArenaQueryRsp::clear_arenamoney() {
  arenamoney_ = 0u;
  clear_has_arenamoney();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::arenamoney() const {
  return arenamoney_;
}
inline void CSArenaQueryRsp::set_arenamoney(::google::protobuf::uint32 value) {
  set_has_arenamoney();
  arenamoney_ = value;
}

// required uint32 ArenaMaxBuyCnt = 9;
inline bool CSArenaQueryRsp::has_arenamaxbuycnt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSArenaQueryRsp::set_has_arenamaxbuycnt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSArenaQueryRsp::clear_has_arenamaxbuycnt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSArenaQueryRsp::clear_arenamaxbuycnt() {
  arenamaxbuycnt_ = 0u;
  clear_has_arenamaxbuycnt();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::arenamaxbuycnt() const {
  return arenamaxbuycnt_;
}
inline void CSArenaQueryRsp::set_arenamaxbuycnt(::google::protobuf::uint32 value) {
  set_has_arenamaxbuycnt();
  arenamaxbuycnt_ = value;
}

// required uint32 IsFirstFight = 10;
inline bool CSArenaQueryRsp::has_isfirstfight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSArenaQueryRsp::set_has_isfirstfight() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSArenaQueryRsp::clear_has_isfirstfight() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSArenaQueryRsp::clear_isfirstfight() {
  isfirstfight_ = 0u;
  clear_has_isfirstfight();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::isfirstfight() const {
  return isfirstfight_;
}
inline void CSArenaQueryRsp::set_isfirstfight(::google::protobuf::uint32 value) {
  set_has_isfirstfight();
  isfirstfight_ = value;
}

// required uint32 RemainFightCD = 11;
inline bool CSArenaQueryRsp::has_remainfightcd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSArenaQueryRsp::set_has_remainfightcd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSArenaQueryRsp::clear_has_remainfightcd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSArenaQueryRsp::clear_remainfightcd() {
  remainfightcd_ = 0u;
  clear_has_remainfightcd();
}
inline ::google::protobuf::uint32 CSArenaQueryRsp::remainfightcd() const {
  return remainfightcd_;
}
inline void CSArenaQueryRsp::set_remainfightcd(::google::protobuf::uint32 value) {
  set_has_remainfightcd();
  remainfightcd_ = value;
}

// -------------------------------------------------------------------

// CSArenaOneRecord

// required uint64 OpponentUin = 1;
inline bool CSArenaOneRecord::has_opponentuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaOneRecord::set_has_opponentuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaOneRecord::clear_has_opponentuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaOneRecord::clear_opponentuin() {
  opponentuin_ = GOOGLE_ULONGLONG(0);
  clear_has_opponentuin();
}
inline ::google::protobuf::uint64 CSArenaOneRecord::opponentuin() const {
  return opponentuin_;
}
inline void CSArenaOneRecord::set_opponentuin(::google::protobuf::uint64 value) {
  set_has_opponentuin();
  opponentuin_ = value;
}

// required uint32 Time = 2;
inline bool CSArenaOneRecord::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaOneRecord::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaOneRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaOneRecord::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CSArenaOneRecord::time() const {
  return time_;
}
inline void CSArenaOneRecord::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 IsMeWin = 3;
inline bool CSArenaOneRecord::has_ismewin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaOneRecord::set_has_ismewin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaOneRecord::clear_has_ismewin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaOneRecord::clear_ismewin() {
  ismewin_ = 0u;
  clear_has_ismewin();
}
inline ::google::protobuf::uint32 CSArenaOneRecord::ismewin() const {
  return ismewin_;
}
inline void CSArenaOneRecord::set_ismewin(::google::protobuf::uint32 value) {
  set_has_ismewin();
  ismewin_ = value;
}

// required uint32 IsMeChallenger = 4;
inline bool CSArenaOneRecord::has_ismechallenger() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaOneRecord::set_has_ismechallenger() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaOneRecord::clear_has_ismechallenger() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaOneRecord::clear_ismechallenger() {
  ismechallenger_ = 0u;
  clear_has_ismechallenger();
}
inline ::google::protobuf::uint32 CSArenaOneRecord::ismechallenger() const {
  return ismechallenger_;
}
inline void CSArenaOneRecord::set_ismechallenger(::google::protobuf::uint32 value) {
  set_has_ismechallenger();
  ismechallenger_ = value;
}

// required string OpponentName = 5;
inline bool CSArenaOneRecord::has_opponentname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaOneRecord::set_has_opponentname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaOneRecord::clear_has_opponentname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaOneRecord::clear_opponentname() {
  if (opponentname_ != &::google::protobuf::internal::kEmptyString) {
    opponentname_->clear();
  }
  clear_has_opponentname();
}
inline const ::std::string& CSArenaOneRecord::opponentname() const {
  return *opponentname_;
}
inline void CSArenaOneRecord::set_opponentname(const ::std::string& value) {
  set_has_opponentname();
  if (opponentname_ == &::google::protobuf::internal::kEmptyString) {
    opponentname_ = new ::std::string;
  }
  opponentname_->assign(value);
}
inline void CSArenaOneRecord::set_opponentname(const char* value) {
  set_has_opponentname();
  if (opponentname_ == &::google::protobuf::internal::kEmptyString) {
    opponentname_ = new ::std::string;
  }
  opponentname_->assign(value);
}
inline void CSArenaOneRecord::set_opponentname(const char* value, size_t size) {
  set_has_opponentname();
  if (opponentname_ == &::google::protobuf::internal::kEmptyString) {
    opponentname_ = new ::std::string;
  }
  opponentname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSArenaOneRecord::mutable_opponentname() {
  set_has_opponentname();
  if (opponentname_ == &::google::protobuf::internal::kEmptyString) {
    opponentname_ = new ::std::string;
  }
  return opponentname_;
}
inline ::std::string* CSArenaOneRecord::release_opponentname() {
  clear_has_opponentname();
  if (opponentname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opponentname_;
    opponentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSArenaOneRecord::set_allocated_opponentname(::std::string* opponentname) {
  if (opponentname_ != &::google::protobuf::internal::kEmptyString) {
    delete opponentname_;
  }
  if (opponentname) {
    set_has_opponentname();
    opponentname_ = opponentname;
  } else {
    clear_has_opponentname();
    opponentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 IsFightBack = 6;
inline bool CSArenaOneRecord::has_isfightback() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSArenaOneRecord::set_has_isfightback() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSArenaOneRecord::clear_has_isfightback() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSArenaOneRecord::clear_isfightback() {
  isfightback_ = 0u;
  clear_has_isfightback();
}
inline ::google::protobuf::uint32 CSArenaOneRecord::isfightback() const {
  return isfightback_;
}
inline void CSArenaOneRecord::set_isfightback(::google::protobuf::uint32 value) {
  set_has_isfightback();
  isfightback_ = value;
}

// required int32 ScoreChange = 7;
inline bool CSArenaOneRecord::has_scorechange() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSArenaOneRecord::set_has_scorechange() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSArenaOneRecord::clear_has_scorechange() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSArenaOneRecord::clear_scorechange() {
  scorechange_ = 0;
  clear_has_scorechange();
}
inline ::google::protobuf::int32 CSArenaOneRecord::scorechange() const {
  return scorechange_;
}
inline void CSArenaOneRecord::set_scorechange(::google::protobuf::int32 value) {
  set_has_scorechange();
  scorechange_ = value;
}

// required int32 CoinChange = 8;
inline bool CSArenaOneRecord::has_coinchange() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSArenaOneRecord::set_has_coinchange() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSArenaOneRecord::clear_has_coinchange() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSArenaOneRecord::clear_coinchange() {
  coinchange_ = 0;
  clear_has_coinchange();
}
inline ::google::protobuf::int32 CSArenaOneRecord::coinchange() const {
  return coinchange_;
}
inline void CSArenaOneRecord::set_coinchange(::google::protobuf::int32 value) {
  set_has_coinchange();
  coinchange_ = value;
}

// -------------------------------------------------------------------

// CSArenaQueryRecordRsp

// repeated .vmsg.CSArenaOneRecord RecordLst = 1;
inline int CSArenaQueryRecordRsp::recordlst_size() const {
  return recordlst_.size();
}
inline void CSArenaQueryRecordRsp::clear_recordlst() {
  recordlst_.Clear();
}
inline const ::vmsg::CSArenaOneRecord& CSArenaQueryRecordRsp::recordlst(int index) const {
  return recordlst_.Get(index);
}
inline ::vmsg::CSArenaOneRecord* CSArenaQueryRecordRsp::mutable_recordlst(int index) {
  return recordlst_.Mutable(index);
}
inline ::vmsg::CSArenaOneRecord* CSArenaQueryRecordRsp::add_recordlst() {
  return recordlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaOneRecord >&
CSArenaQueryRecordRsp::recordlst() const {
  return recordlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaOneRecord >*
CSArenaQueryRecordRsp::mutable_recordlst() {
  return &recordlst_;
}

// -------------------------------------------------------------------

// CSArenaFindOpponentRsp

// required uint64 Uin = 1;
inline bool CSArenaFindOpponentRsp::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaFindOpponentRsp::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaFindOpponentRsp::clear_uin() {
  uin_ = GOOGLE_ULONGLONG(0);
  clear_has_uin();
}
inline ::google::protobuf::uint64 CSArenaFindOpponentRsp::uin() const {
  return uin_;
}
inline void CSArenaFindOpponentRsp::set_uin(::google::protobuf::uint64 value) {
  set_has_uin();
  uin_ = value;
}

// required string Name = 2;
inline bool CSArenaFindOpponentRsp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaFindOpponentRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaFindOpponentRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSArenaFindOpponentRsp::name() const {
  return *name_;
}
inline void CSArenaFindOpponentRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSArenaFindOpponentRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSArenaFindOpponentRsp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSArenaFindOpponentRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSArenaFindOpponentRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSArenaFindOpponentRsp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 Score = 3;
inline bool CSArenaFindOpponentRsp::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaFindOpponentRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaFindOpponentRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSArenaFindOpponentRsp::score() const {
  return score_;
}
inline void CSArenaFindOpponentRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 FightPower = 4;
inline bool CSArenaFindOpponentRsp::has_fightpower() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_fightpower() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaFindOpponentRsp::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaFindOpponentRsp::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 CSArenaFindOpponentRsp::fightpower() const {
  return fightpower_;
}
inline void CSArenaFindOpponentRsp::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// required uint32 TodayMatchNum = 5;
inline bool CSArenaFindOpponentRsp::has_todaymatchnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_todaymatchnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaFindOpponentRsp::clear_has_todaymatchnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaFindOpponentRsp::clear_todaymatchnum() {
  todaymatchnum_ = 0u;
  clear_has_todaymatchnum();
}
inline ::google::protobuf::uint32 CSArenaFindOpponentRsp::todaymatchnum() const {
  return todaymatchnum_;
}
inline void CSArenaFindOpponentRsp::set_todaymatchnum(::google::protobuf::uint32 value) {
  set_has_todaymatchnum();
  todaymatchnum_ = value;
}

// required uint32 ShowID = 6;
inline bool CSArenaFindOpponentRsp::has_showid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_showid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSArenaFindOpponentRsp::clear_has_showid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSArenaFindOpponentRsp::clear_showid() {
  showid_ = 0u;
  clear_has_showid();
}
inline ::google::protobuf::uint32 CSArenaFindOpponentRsp::showid() const {
  return showid_;
}
inline void CSArenaFindOpponentRsp::set_showid(::google::protobuf::uint32 value) {
  set_has_showid();
  showid_ = value;
}

// optional uint32 OpponentLevel = 7;
inline bool CSArenaFindOpponentRsp::has_opponentlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSArenaFindOpponentRsp::set_has_opponentlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSArenaFindOpponentRsp::clear_has_opponentlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSArenaFindOpponentRsp::clear_opponentlevel() {
  opponentlevel_ = 0u;
  clear_has_opponentlevel();
}
inline ::google::protobuf::uint32 CSArenaFindOpponentRsp::opponentlevel() const {
  return opponentlevel_;
}
inline void CSArenaFindOpponentRsp::set_opponentlevel(::google::protobuf::uint32 value) {
  set_has_opponentlevel();
  opponentlevel_ = value;
}

// -------------------------------------------------------------------

// CSArenaBuyNumRsp

// required uint32 TodayFightNum = 1;
inline bool CSArenaBuyNumRsp::has_todayfightnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaBuyNumRsp::set_has_todayfightnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaBuyNumRsp::clear_has_todayfightnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaBuyNumRsp::clear_todayfightnum() {
  todayfightnum_ = 0u;
  clear_has_todayfightnum();
}
inline ::google::protobuf::uint32 CSArenaBuyNumRsp::todayfightnum() const {
  return todayfightnum_;
}
inline void CSArenaBuyNumRsp::set_todayfightnum(::google::protobuf::uint32 value) {
  set_has_todayfightnum();
  todayfightnum_ = value;
}

// required uint32 TodayBuyNum = 2;
inline bool CSArenaBuyNumRsp::has_todaybuynum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaBuyNumRsp::set_has_todaybuynum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaBuyNumRsp::clear_has_todaybuynum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaBuyNumRsp::clear_todaybuynum() {
  todaybuynum_ = 0u;
  clear_has_todaybuynum();
}
inline ::google::protobuf::uint32 CSArenaBuyNumRsp::todaybuynum() const {
  return todaybuynum_;
}
inline void CSArenaBuyNumRsp::set_todaybuynum(::google::protobuf::uint32 value) {
  set_has_todaybuynum();
  todaybuynum_ = value;
}

// -------------------------------------------------------------------

// CSArenaStartFightRsp

// required .vmsg.CSPlayerDetailInfo MyDetail = 1;
inline bool CSArenaStartFightRsp::has_mydetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaStartFightRsp::set_has_mydetail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaStartFightRsp::clear_has_mydetail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaStartFightRsp::clear_mydetail() {
  if (mydetail_ != NULL) mydetail_->::vmsg::CSPlayerDetailInfo::Clear();
  clear_has_mydetail();
}
inline const ::vmsg::CSPlayerDetailInfo& CSArenaStartFightRsp::mydetail() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return mydetail_ != NULL ? *mydetail_ : *default_instance().mydetail_;
#else
  return mydetail_ != NULL ? *mydetail_ : *default_instance_->mydetail_;
#endif
}
inline ::vmsg::CSPlayerDetailInfo* CSArenaStartFightRsp::mutable_mydetail() {
  set_has_mydetail();
  if (mydetail_ == NULL) mydetail_ = new ::vmsg::CSPlayerDetailInfo;
  return mydetail_;
}
inline ::vmsg::CSPlayerDetailInfo* CSArenaStartFightRsp::release_mydetail() {
  clear_has_mydetail();
  ::vmsg::CSPlayerDetailInfo* temp = mydetail_;
  mydetail_ = NULL;
  return temp;
}
inline void CSArenaStartFightRsp::set_allocated_mydetail(::vmsg::CSPlayerDetailInfo* mydetail) {
  delete mydetail_;
  mydetail_ = mydetail;
  if (mydetail) {
    set_has_mydetail();
  } else {
    clear_has_mydetail();
  }
}

// required .vmsg.CSPlayerDetailInfo OpponentDetail = 2;
inline bool CSArenaStartFightRsp::has_opponentdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaStartFightRsp::set_has_opponentdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaStartFightRsp::clear_has_opponentdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaStartFightRsp::clear_opponentdetail() {
  if (opponentdetail_ != NULL) opponentdetail_->::vmsg::CSPlayerDetailInfo::Clear();
  clear_has_opponentdetail();
}
inline const ::vmsg::CSPlayerDetailInfo& CSArenaStartFightRsp::opponentdetail() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return opponentdetail_ != NULL ? *opponentdetail_ : *default_instance().opponentdetail_;
#else
  return opponentdetail_ != NULL ? *opponentdetail_ : *default_instance_->opponentdetail_;
#endif
}
inline ::vmsg::CSPlayerDetailInfo* CSArenaStartFightRsp::mutable_opponentdetail() {
  set_has_opponentdetail();
  if (opponentdetail_ == NULL) opponentdetail_ = new ::vmsg::CSPlayerDetailInfo;
  return opponentdetail_;
}
inline ::vmsg::CSPlayerDetailInfo* CSArenaStartFightRsp::release_opponentdetail() {
  clear_has_opponentdetail();
  ::vmsg::CSPlayerDetailInfo* temp = opponentdetail_;
  opponentdetail_ = NULL;
  return temp;
}
inline void CSArenaStartFightRsp::set_allocated_opponentdetail(::vmsg::CSPlayerDetailInfo* opponentdetail) {
  delete opponentdetail_;
  opponentdetail_ = opponentdetail;
  if (opponentdetail) {
    set_has_opponentdetail();
  } else {
    clear_has_opponentdetail();
  }
}

// -------------------------------------------------------------------

// CSArenaEndFightRqst

// required uint64 OpponentUin = 1;
inline bool CSArenaEndFightRqst::has_opponentuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaEndFightRqst::set_has_opponentuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaEndFightRqst::clear_has_opponentuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaEndFightRqst::clear_opponentuin() {
  opponentuin_ = GOOGLE_ULONGLONG(0);
  clear_has_opponentuin();
}
inline ::google::protobuf::uint64 CSArenaEndFightRqst::opponentuin() const {
  return opponentuin_;
}
inline void CSArenaEndFightRqst::set_opponentuin(::google::protobuf::uint64 value) {
  set_has_opponentuin();
  opponentuin_ = value;
}

// required uint32 IsMyWin = 2;
inline bool CSArenaEndFightRqst::has_ismywin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaEndFightRqst::set_has_ismywin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaEndFightRqst::clear_has_ismywin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaEndFightRqst::clear_ismywin() {
  ismywin_ = 0u;
  clear_has_ismywin();
}
inline ::google::protobuf::uint32 CSArenaEndFightRqst::ismywin() const {
  return ismywin_;
}
inline void CSArenaEndFightRqst::set_ismywin(::google::protobuf::uint32 value) {
  set_has_ismywin();
  ismywin_ = value;
}

// required uint32 IsFightBack = 3;
inline bool CSArenaEndFightRqst::has_isfightback() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaEndFightRqst::set_has_isfightback() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaEndFightRqst::clear_has_isfightback() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaEndFightRqst::clear_isfightback() {
  isfightback_ = 0u;
  clear_has_isfightback();
}
inline ::google::protobuf::uint32 CSArenaEndFightRqst::isfightback() const {
  return isfightback_;
}
inline void CSArenaEndFightRqst::set_isfightback(::google::protobuf::uint32 value) {
  set_has_isfightback();
  isfightback_ = value;
}

// required uint32 RecordTime = 4;
inline bool CSArenaEndFightRqst::has_recordtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaEndFightRqst::set_has_recordtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaEndFightRqst::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaEndFightRqst::clear_recordtime() {
  recordtime_ = 0u;
  clear_has_recordtime();
}
inline ::google::protobuf::uint32 CSArenaEndFightRqst::recordtime() const {
  return recordtime_;
}
inline void CSArenaEndFightRqst::set_recordtime(::google::protobuf::uint32 value) {
  set_has_recordtime();
  recordtime_ = value;
}

// -------------------------------------------------------------------

// CSArenaEndFightRsp

// required int32 CoinChange = 1;
inline bool CSArenaEndFightRsp::has_coinchange() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaEndFightRsp::set_has_coinchange() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaEndFightRsp::clear_has_coinchange() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaEndFightRsp::clear_coinchange() {
  coinchange_ = 0;
  clear_has_coinchange();
}
inline ::google::protobuf::int32 CSArenaEndFightRsp::coinchange() const {
  return coinchange_;
}
inline void CSArenaEndFightRsp::set_coinchange(::google::protobuf::int32 value) {
  set_has_coinchange();
  coinchange_ = value;
}

// required int32 ArenaMoneyChange = 2;
inline bool CSArenaEndFightRsp::has_arenamoneychange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaEndFightRsp::set_has_arenamoneychange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaEndFightRsp::clear_has_arenamoneychange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaEndFightRsp::clear_arenamoneychange() {
  arenamoneychange_ = 0;
  clear_has_arenamoneychange();
}
inline ::google::protobuf::int32 CSArenaEndFightRsp::arenamoneychange() const {
  return arenamoneychange_;
}
inline void CSArenaEndFightRsp::set_arenamoneychange(::google::protobuf::int32 value) {
  set_has_arenamoneychange();
  arenamoneychange_ = value;
}

// -------------------------------------------------------------------

// CSArenaStroeItem

// required uint32 ItemType = 1;
inline bool CSArenaStroeItem::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaStroeItem::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaStroeItem::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaStroeItem::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 CSArenaStroeItem::itemtype() const {
  return itemtype_;
}
inline void CSArenaStroeItem::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// required uint32 ItemID = 2;
inline bool CSArenaStroeItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaStroeItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaStroeItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaStroeItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 CSArenaStroeItem::itemid() const {
  return itemid_;
}
inline void CSArenaStroeItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 ItemCnt = 3;
inline bool CSArenaStroeItem::has_itemcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaStroeItem::set_has_itemcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaStroeItem::clear_has_itemcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaStroeItem::clear_itemcnt() {
  itemcnt_ = 0u;
  clear_has_itemcnt();
}
inline ::google::protobuf::uint32 CSArenaStroeItem::itemcnt() const {
  return itemcnt_;
}
inline void CSArenaStroeItem::set_itemcnt(::google::protobuf::uint32 value) {
  set_has_itemcnt();
  itemcnt_ = value;
}

// required uint32 ItemBought = 4;
inline bool CSArenaStroeItem::has_itembought() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaStroeItem::set_has_itembought() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaStroeItem::clear_has_itembought() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaStroeItem::clear_itembought() {
  itembought_ = 0u;
  clear_has_itembought();
}
inline ::google::protobuf::uint32 CSArenaStroeItem::itembought() const {
  return itembought_;
}
inline void CSArenaStroeItem::set_itembought(::google::protobuf::uint32 value) {
  set_has_itembought();
  itembought_ = value;
}

// required uint32 ArenaMoney = 5;
inline bool CSArenaStroeItem::has_arenamoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaStroeItem::set_has_arenamoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaStroeItem::clear_has_arenamoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaStroeItem::clear_arenamoney() {
  arenamoney_ = 0u;
  clear_has_arenamoney();
}
inline ::google::protobuf::uint32 CSArenaStroeItem::arenamoney() const {
  return arenamoney_;
}
inline void CSArenaStroeItem::set_arenamoney(::google::protobuf::uint32 value) {
  set_has_arenamoney();
  arenamoney_ = value;
}

// -------------------------------------------------------------------

// CSArenaStroeInfo

// required uint32 ArenaMoney = 1;
inline bool CSArenaStroeInfo::has_arenamoney() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaStroeInfo::set_has_arenamoney() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaStroeInfo::clear_has_arenamoney() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaStroeInfo::clear_arenamoney() {
  arenamoney_ = 0u;
  clear_has_arenamoney();
}
inline ::google::protobuf::uint32 CSArenaStroeInfo::arenamoney() const {
  return arenamoney_;
}
inline void CSArenaStroeInfo::set_arenamoney(::google::protobuf::uint32 value) {
  set_has_arenamoney();
  arenamoney_ = value;
}

// required uint32 LastRefreshTime = 2;
inline bool CSArenaStroeInfo::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaStroeInfo::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaStroeInfo::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaStroeInfo::clear_lastrefreshtime() {
  lastrefreshtime_ = 0u;
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint32 CSArenaStroeInfo::lastrefreshtime() const {
  return lastrefreshtime_;
}
inline void CSArenaStroeInfo::set_lastrefreshtime(::google::protobuf::uint32 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
}

// repeated .vmsg.CSArenaStroeItem ItemLst = 3;
inline int CSArenaStroeInfo::itemlst_size() const {
  return itemlst_.size();
}
inline void CSArenaStroeInfo::clear_itemlst() {
  itemlst_.Clear();
}
inline const ::vmsg::CSArenaStroeItem& CSArenaStroeInfo::itemlst(int index) const {
  return itemlst_.Get(index);
}
inline ::vmsg::CSArenaStroeItem* CSArenaStroeInfo::mutable_itemlst(int index) {
  return itemlst_.Mutable(index);
}
inline ::vmsg::CSArenaStroeItem* CSArenaStroeInfo::add_itemlst() {
  return itemlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaStroeItem >&
CSArenaStroeInfo::itemlst() const {
  return itemlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::vmsg::CSArenaStroeItem >*
CSArenaStroeInfo::mutable_itemlst() {
  return &itemlst_;
}

// required .vmsg.CSBagInfo BagInfo = 4;
inline bool CSArenaStroeInfo::has_baginfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaStroeInfo::set_has_baginfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaStroeInfo::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaStroeInfo::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::vmsg::CSBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::vmsg::CSBagInfo& CSArenaStroeInfo::baginfo() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baginfo_ != NULL ? *baginfo_ : *default_instance().baginfo_;
#else
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
#endif
}
inline ::vmsg::CSBagInfo* CSArenaStroeInfo::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::vmsg::CSBagInfo;
  return baginfo_;
}
inline ::vmsg::CSBagInfo* CSArenaStroeInfo::release_baginfo() {
  clear_has_baginfo();
  ::vmsg::CSBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void CSArenaStroeInfo::set_allocated_baginfo(::vmsg::CSBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// required uint32 MaxRefreshCnt = 5;
inline bool CSArenaStroeInfo::has_maxrefreshcnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaStroeInfo::set_has_maxrefreshcnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaStroeInfo::clear_has_maxrefreshcnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaStroeInfo::clear_maxrefreshcnt() {
  maxrefreshcnt_ = 0u;
  clear_has_maxrefreshcnt();
}
inline ::google::protobuf::uint32 CSArenaStroeInfo::maxrefreshcnt() const {
  return maxrefreshcnt_;
}
inline void CSArenaStroeInfo::set_maxrefreshcnt(::google::protobuf::uint32 value) {
  set_has_maxrefreshcnt();
  maxrefreshcnt_ = value;
}

// required uint32 RefreshCnt = 6;
inline bool CSArenaStroeInfo::has_refreshcnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSArenaStroeInfo::set_has_refreshcnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSArenaStroeInfo::clear_has_refreshcnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSArenaStroeInfo::clear_refreshcnt() {
  refreshcnt_ = 0u;
  clear_has_refreshcnt();
}
inline ::google::protobuf::uint32 CSArenaStroeInfo::refreshcnt() const {
  return refreshcnt_;
}
inline void CSArenaStroeInfo::set_refreshcnt(::google::protobuf::uint32 value) {
  set_has_refreshcnt();
  refreshcnt_ = value;
}

// -------------------------------------------------------------------

// CSArenaStroeBuyRqst

// required uint32 ItemIdx = 1;
inline bool CSArenaStroeBuyRqst::has_itemidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaStroeBuyRqst::set_has_itemidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaStroeBuyRqst::clear_has_itemidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaStroeBuyRqst::clear_itemidx() {
  itemidx_ = 0u;
  clear_has_itemidx();
}
inline ::google::protobuf::uint32 CSArenaStroeBuyRqst::itemidx() const {
  return itemidx_;
}
inline void CSArenaStroeBuyRqst::set_itemidx(::google::protobuf::uint32 value) {
  set_has_itemidx();
  itemidx_ = value;
}

// required uint32 ItemCfgID = 2;
inline bool CSArenaStroeBuyRqst::has_itemcfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaStroeBuyRqst::set_has_itemcfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaStroeBuyRqst::clear_has_itemcfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaStroeBuyRqst::clear_itemcfgid() {
  itemcfgid_ = 0u;
  clear_has_itemcfgid();
}
inline ::google::protobuf::uint32 CSArenaStroeBuyRqst::itemcfgid() const {
  return itemcfgid_;
}
inline void CSArenaStroeBuyRqst::set_itemcfgid(::google::protobuf::uint32 value) {
  set_has_itemcfgid();
  itemcfgid_ = value;
}

// -------------------------------------------------------------------

// CSArenaRequest

// optional uint64 StartFightUin_Rqst = 1;
inline bool CSArenaRequest::has_startfightuin_rqst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaRequest::set_has_startfightuin_rqst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaRequest::clear_has_startfightuin_rqst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaRequest::clear_startfightuin_rqst() {
  startfightuin_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_startfightuin_rqst();
}
inline ::google::protobuf::uint64 CSArenaRequest::startfightuin_rqst() const {
  return startfightuin_rqst_;
}
inline void CSArenaRequest::set_startfightuin_rqst(::google::protobuf::uint64 value) {
  set_has_startfightuin_rqst();
  startfightuin_rqst_ = value;
}

// optional .vmsg.CSArenaEndFightRqst EndFightUin_Rqst = 2;
inline bool CSArenaRequest::has_endfightuin_rqst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaRequest::set_has_endfightuin_rqst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaRequest::clear_has_endfightuin_rqst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaRequest::clear_endfightuin_rqst() {
  if (endfightuin_rqst_ != NULL) endfightuin_rqst_->::vmsg::CSArenaEndFightRqst::Clear();
  clear_has_endfightuin_rqst();
}
inline const ::vmsg::CSArenaEndFightRqst& CSArenaRequest::endfightuin_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return endfightuin_rqst_ != NULL ? *endfightuin_rqst_ : *default_instance().endfightuin_rqst_;
#else
  return endfightuin_rqst_ != NULL ? *endfightuin_rqst_ : *default_instance_->endfightuin_rqst_;
#endif
}
inline ::vmsg::CSArenaEndFightRqst* CSArenaRequest::mutable_endfightuin_rqst() {
  set_has_endfightuin_rqst();
  if (endfightuin_rqst_ == NULL) endfightuin_rqst_ = new ::vmsg::CSArenaEndFightRqst;
  return endfightuin_rqst_;
}
inline ::vmsg::CSArenaEndFightRqst* CSArenaRequest::release_endfightuin_rqst() {
  clear_has_endfightuin_rqst();
  ::vmsg::CSArenaEndFightRqst* temp = endfightuin_rqst_;
  endfightuin_rqst_ = NULL;
  return temp;
}
inline void CSArenaRequest::set_allocated_endfightuin_rqst(::vmsg::CSArenaEndFightRqst* endfightuin_rqst) {
  delete endfightuin_rqst_;
  endfightuin_rqst_ = endfightuin_rqst;
  if (endfightuin_rqst) {
    set_has_endfightuin_rqst();
  } else {
    clear_has_endfightuin_rqst();
  }
}

// optional .vmsg.CSArenaStroeBuyRqst ArenaStoreBuy_Rqst = 3;
inline bool CSArenaRequest::has_arenastorebuy_rqst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaRequest::set_has_arenastorebuy_rqst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaRequest::clear_has_arenastorebuy_rqst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaRequest::clear_arenastorebuy_rqst() {
  if (arenastorebuy_rqst_ != NULL) arenastorebuy_rqst_->::vmsg::CSArenaStroeBuyRqst::Clear();
  clear_has_arenastorebuy_rqst();
}
inline const ::vmsg::CSArenaStroeBuyRqst& CSArenaRequest::arenastorebuy_rqst() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return arenastorebuy_rqst_ != NULL ? *arenastorebuy_rqst_ : *default_instance().arenastorebuy_rqst_;
#else
  return arenastorebuy_rqst_ != NULL ? *arenastorebuy_rqst_ : *default_instance_->arenastorebuy_rqst_;
#endif
}
inline ::vmsg::CSArenaStroeBuyRqst* CSArenaRequest::mutable_arenastorebuy_rqst() {
  set_has_arenastorebuy_rqst();
  if (arenastorebuy_rqst_ == NULL) arenastorebuy_rqst_ = new ::vmsg::CSArenaStroeBuyRqst;
  return arenastorebuy_rqst_;
}
inline ::vmsg::CSArenaStroeBuyRqst* CSArenaRequest::release_arenastorebuy_rqst() {
  clear_has_arenastorebuy_rqst();
  ::vmsg::CSArenaStroeBuyRqst* temp = arenastorebuy_rqst_;
  arenastorebuy_rqst_ = NULL;
  return temp;
}
inline void CSArenaRequest::set_allocated_arenastorebuy_rqst(::vmsg::CSArenaStroeBuyRqst* arenastorebuy_rqst) {
  delete arenastorebuy_rqst_;
  arenastorebuy_rqst_ = arenastorebuy_rqst;
  if (arenastorebuy_rqst) {
    set_has_arenastorebuy_rqst();
  } else {
    clear_has_arenastorebuy_rqst();
  }
}

// optional uint64 OpponentUin_Rqst = 4;
inline bool CSArenaRequest::has_opponentuin_rqst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaRequest::set_has_opponentuin_rqst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaRequest::clear_has_opponentuin_rqst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaRequest::clear_opponentuin_rqst() {
  opponentuin_rqst_ = GOOGLE_ULONGLONG(0);
  clear_has_opponentuin_rqst();
}
inline ::google::protobuf::uint64 CSArenaRequest::opponentuin_rqst() const {
  return opponentuin_rqst_;
}
inline void CSArenaRequest::set_opponentuin_rqst(::google::protobuf::uint64 value) {
  set_has_opponentuin_rqst();
  opponentuin_rqst_ = value;
}

// -------------------------------------------------------------------

// CSArenaRespond

// optional .vmsg.CSArenaQueryRsp ArenaQuery_Rsp = 1;
inline bool CSArenaRespond::has_arenaquery_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSArenaRespond::set_has_arenaquery_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSArenaRespond::clear_has_arenaquery_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSArenaRespond::clear_arenaquery_rsp() {
  if (arenaquery_rsp_ != NULL) arenaquery_rsp_->::vmsg::CSArenaQueryRsp::Clear();
  clear_has_arenaquery_rsp();
}
inline const ::vmsg::CSArenaQueryRsp& CSArenaRespond::arenaquery_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return arenaquery_rsp_ != NULL ? *arenaquery_rsp_ : *default_instance().arenaquery_rsp_;
#else
  return arenaquery_rsp_ != NULL ? *arenaquery_rsp_ : *default_instance_->arenaquery_rsp_;
#endif
}
inline ::vmsg::CSArenaQueryRsp* CSArenaRespond::mutable_arenaquery_rsp() {
  set_has_arenaquery_rsp();
  if (arenaquery_rsp_ == NULL) arenaquery_rsp_ = new ::vmsg::CSArenaQueryRsp;
  return arenaquery_rsp_;
}
inline ::vmsg::CSArenaQueryRsp* CSArenaRespond::release_arenaquery_rsp() {
  clear_has_arenaquery_rsp();
  ::vmsg::CSArenaQueryRsp* temp = arenaquery_rsp_;
  arenaquery_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_arenaquery_rsp(::vmsg::CSArenaQueryRsp* arenaquery_rsp) {
  delete arenaquery_rsp_;
  arenaquery_rsp_ = arenaquery_rsp;
  if (arenaquery_rsp) {
    set_has_arenaquery_rsp();
  } else {
    clear_has_arenaquery_rsp();
  }
}

// optional .vmsg.CSArenaQueryRecordRsp Record_Rsp = 2;
inline bool CSArenaRespond::has_record_rsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSArenaRespond::set_has_record_rsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSArenaRespond::clear_has_record_rsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSArenaRespond::clear_record_rsp() {
  if (record_rsp_ != NULL) record_rsp_->::vmsg::CSArenaQueryRecordRsp::Clear();
  clear_has_record_rsp();
}
inline const ::vmsg::CSArenaQueryRecordRsp& CSArenaRespond::record_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_rsp_ != NULL ? *record_rsp_ : *default_instance().record_rsp_;
#else
  return record_rsp_ != NULL ? *record_rsp_ : *default_instance_->record_rsp_;
#endif
}
inline ::vmsg::CSArenaQueryRecordRsp* CSArenaRespond::mutable_record_rsp() {
  set_has_record_rsp();
  if (record_rsp_ == NULL) record_rsp_ = new ::vmsg::CSArenaQueryRecordRsp;
  return record_rsp_;
}
inline ::vmsg::CSArenaQueryRecordRsp* CSArenaRespond::release_record_rsp() {
  clear_has_record_rsp();
  ::vmsg::CSArenaQueryRecordRsp* temp = record_rsp_;
  record_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_record_rsp(::vmsg::CSArenaQueryRecordRsp* record_rsp) {
  delete record_rsp_;
  record_rsp_ = record_rsp;
  if (record_rsp) {
    set_has_record_rsp();
  } else {
    clear_has_record_rsp();
  }
}

// optional .vmsg.CSArenaFindOpponentRsp FindOpponent_Rsp = 3;
inline bool CSArenaRespond::has_findopponent_rsp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSArenaRespond::set_has_findopponent_rsp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSArenaRespond::clear_has_findopponent_rsp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSArenaRespond::clear_findopponent_rsp() {
  if (findopponent_rsp_ != NULL) findopponent_rsp_->::vmsg::CSArenaFindOpponentRsp::Clear();
  clear_has_findopponent_rsp();
}
inline const ::vmsg::CSArenaFindOpponentRsp& CSArenaRespond::findopponent_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return findopponent_rsp_ != NULL ? *findopponent_rsp_ : *default_instance().findopponent_rsp_;
#else
  return findopponent_rsp_ != NULL ? *findopponent_rsp_ : *default_instance_->findopponent_rsp_;
#endif
}
inline ::vmsg::CSArenaFindOpponentRsp* CSArenaRespond::mutable_findopponent_rsp() {
  set_has_findopponent_rsp();
  if (findopponent_rsp_ == NULL) findopponent_rsp_ = new ::vmsg::CSArenaFindOpponentRsp;
  return findopponent_rsp_;
}
inline ::vmsg::CSArenaFindOpponentRsp* CSArenaRespond::release_findopponent_rsp() {
  clear_has_findopponent_rsp();
  ::vmsg::CSArenaFindOpponentRsp* temp = findopponent_rsp_;
  findopponent_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_findopponent_rsp(::vmsg::CSArenaFindOpponentRsp* findopponent_rsp) {
  delete findopponent_rsp_;
  findopponent_rsp_ = findopponent_rsp;
  if (findopponent_rsp) {
    set_has_findopponent_rsp();
  } else {
    clear_has_findopponent_rsp();
  }
}

// optional uint32 GetAward_Rsp = 4;
inline bool CSArenaRespond::has_getaward_rsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSArenaRespond::set_has_getaward_rsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSArenaRespond::clear_has_getaward_rsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSArenaRespond::clear_getaward_rsp() {
  getaward_rsp_ = 0u;
  clear_has_getaward_rsp();
}
inline ::google::protobuf::uint32 CSArenaRespond::getaward_rsp() const {
  return getaward_rsp_;
}
inline void CSArenaRespond::set_getaward_rsp(::google::protobuf::uint32 value) {
  set_has_getaward_rsp();
  getaward_rsp_ = value;
}

// optional .vmsg.CSArenaBuyNumRsp BuyNum_Rsp = 5;
inline bool CSArenaRespond::has_buynum_rsp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSArenaRespond::set_has_buynum_rsp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSArenaRespond::clear_has_buynum_rsp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSArenaRespond::clear_buynum_rsp() {
  if (buynum_rsp_ != NULL) buynum_rsp_->::vmsg::CSArenaBuyNumRsp::Clear();
  clear_has_buynum_rsp();
}
inline const ::vmsg::CSArenaBuyNumRsp& CSArenaRespond::buynum_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return buynum_rsp_ != NULL ? *buynum_rsp_ : *default_instance().buynum_rsp_;
#else
  return buynum_rsp_ != NULL ? *buynum_rsp_ : *default_instance_->buynum_rsp_;
#endif
}
inline ::vmsg::CSArenaBuyNumRsp* CSArenaRespond::mutable_buynum_rsp() {
  set_has_buynum_rsp();
  if (buynum_rsp_ == NULL) buynum_rsp_ = new ::vmsg::CSArenaBuyNumRsp;
  return buynum_rsp_;
}
inline ::vmsg::CSArenaBuyNumRsp* CSArenaRespond::release_buynum_rsp() {
  clear_has_buynum_rsp();
  ::vmsg::CSArenaBuyNumRsp* temp = buynum_rsp_;
  buynum_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_buynum_rsp(::vmsg::CSArenaBuyNumRsp* buynum_rsp) {
  delete buynum_rsp_;
  buynum_rsp_ = buynum_rsp;
  if (buynum_rsp) {
    set_has_buynum_rsp();
  } else {
    clear_has_buynum_rsp();
  }
}

// optional .vmsg.CSArenaStartFightRsp StartFight_Rsp = 6;
inline bool CSArenaRespond::has_startfight_rsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSArenaRespond::set_has_startfight_rsp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSArenaRespond::clear_has_startfight_rsp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSArenaRespond::clear_startfight_rsp() {
  if (startfight_rsp_ != NULL) startfight_rsp_->::vmsg::CSArenaStartFightRsp::Clear();
  clear_has_startfight_rsp();
}
inline const ::vmsg::CSArenaStartFightRsp& CSArenaRespond::startfight_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return startfight_rsp_ != NULL ? *startfight_rsp_ : *default_instance().startfight_rsp_;
#else
  return startfight_rsp_ != NULL ? *startfight_rsp_ : *default_instance_->startfight_rsp_;
#endif
}
inline ::vmsg::CSArenaStartFightRsp* CSArenaRespond::mutable_startfight_rsp() {
  set_has_startfight_rsp();
  if (startfight_rsp_ == NULL) startfight_rsp_ = new ::vmsg::CSArenaStartFightRsp;
  return startfight_rsp_;
}
inline ::vmsg::CSArenaStartFightRsp* CSArenaRespond::release_startfight_rsp() {
  clear_has_startfight_rsp();
  ::vmsg::CSArenaStartFightRsp* temp = startfight_rsp_;
  startfight_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_startfight_rsp(::vmsg::CSArenaStartFightRsp* startfight_rsp) {
  delete startfight_rsp_;
  startfight_rsp_ = startfight_rsp;
  if (startfight_rsp) {
    set_has_startfight_rsp();
  } else {
    clear_has_startfight_rsp();
  }
}

// optional .vmsg.CSArenaEndFightRsp EndFight_Rsp = 7;
inline bool CSArenaRespond::has_endfight_rsp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSArenaRespond::set_has_endfight_rsp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSArenaRespond::clear_has_endfight_rsp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSArenaRespond::clear_endfight_rsp() {
  if (endfight_rsp_ != NULL) endfight_rsp_->::vmsg::CSArenaEndFightRsp::Clear();
  clear_has_endfight_rsp();
}
inline const ::vmsg::CSArenaEndFightRsp& CSArenaRespond::endfight_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return endfight_rsp_ != NULL ? *endfight_rsp_ : *default_instance().endfight_rsp_;
#else
  return endfight_rsp_ != NULL ? *endfight_rsp_ : *default_instance_->endfight_rsp_;
#endif
}
inline ::vmsg::CSArenaEndFightRsp* CSArenaRespond::mutable_endfight_rsp() {
  set_has_endfight_rsp();
  if (endfight_rsp_ == NULL) endfight_rsp_ = new ::vmsg::CSArenaEndFightRsp;
  return endfight_rsp_;
}
inline ::vmsg::CSArenaEndFightRsp* CSArenaRespond::release_endfight_rsp() {
  clear_has_endfight_rsp();
  ::vmsg::CSArenaEndFightRsp* temp = endfight_rsp_;
  endfight_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_endfight_rsp(::vmsg::CSArenaEndFightRsp* endfight_rsp) {
  delete endfight_rsp_;
  endfight_rsp_ = endfight_rsp;
  if (endfight_rsp) {
    set_has_endfight_rsp();
  } else {
    clear_has_endfight_rsp();
  }
}

// optional .vmsg.CSArenaStroeInfo StoreQuery_Rsp = 8;
inline bool CSArenaRespond::has_storequery_rsp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSArenaRespond::set_has_storequery_rsp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSArenaRespond::clear_has_storequery_rsp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSArenaRespond::clear_storequery_rsp() {
  if (storequery_rsp_ != NULL) storequery_rsp_->::vmsg::CSArenaStroeInfo::Clear();
  clear_has_storequery_rsp();
}
inline const ::vmsg::CSArenaStroeInfo& CSArenaRespond::storequery_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return storequery_rsp_ != NULL ? *storequery_rsp_ : *default_instance().storequery_rsp_;
#else
  return storequery_rsp_ != NULL ? *storequery_rsp_ : *default_instance_->storequery_rsp_;
#endif
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::mutable_storequery_rsp() {
  set_has_storequery_rsp();
  if (storequery_rsp_ == NULL) storequery_rsp_ = new ::vmsg::CSArenaStroeInfo;
  return storequery_rsp_;
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::release_storequery_rsp() {
  clear_has_storequery_rsp();
  ::vmsg::CSArenaStroeInfo* temp = storequery_rsp_;
  storequery_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_storequery_rsp(::vmsg::CSArenaStroeInfo* storequery_rsp) {
  delete storequery_rsp_;
  storequery_rsp_ = storequery_rsp;
  if (storequery_rsp) {
    set_has_storequery_rsp();
  } else {
    clear_has_storequery_rsp();
  }
}

// optional .vmsg.CSArenaStroeInfo StoreBuy_Rsp = 9;
inline bool CSArenaRespond::has_storebuy_rsp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSArenaRespond::set_has_storebuy_rsp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSArenaRespond::clear_has_storebuy_rsp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSArenaRespond::clear_storebuy_rsp() {
  if (storebuy_rsp_ != NULL) storebuy_rsp_->::vmsg::CSArenaStroeInfo::Clear();
  clear_has_storebuy_rsp();
}
inline const ::vmsg::CSArenaStroeInfo& CSArenaRespond::storebuy_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return storebuy_rsp_ != NULL ? *storebuy_rsp_ : *default_instance().storebuy_rsp_;
#else
  return storebuy_rsp_ != NULL ? *storebuy_rsp_ : *default_instance_->storebuy_rsp_;
#endif
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::mutable_storebuy_rsp() {
  set_has_storebuy_rsp();
  if (storebuy_rsp_ == NULL) storebuy_rsp_ = new ::vmsg::CSArenaStroeInfo;
  return storebuy_rsp_;
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::release_storebuy_rsp() {
  clear_has_storebuy_rsp();
  ::vmsg::CSArenaStroeInfo* temp = storebuy_rsp_;
  storebuy_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_storebuy_rsp(::vmsg::CSArenaStroeInfo* storebuy_rsp) {
  delete storebuy_rsp_;
  storebuy_rsp_ = storebuy_rsp;
  if (storebuy_rsp) {
    set_has_storebuy_rsp();
  } else {
    clear_has_storebuy_rsp();
  }
}

// optional .vmsg.CSArenaStroeInfo StoreRefresh_Rsp = 10;
inline bool CSArenaRespond::has_storerefresh_rsp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSArenaRespond::set_has_storerefresh_rsp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSArenaRespond::clear_has_storerefresh_rsp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSArenaRespond::clear_storerefresh_rsp() {
  if (storerefresh_rsp_ != NULL) storerefresh_rsp_->::vmsg::CSArenaStroeInfo::Clear();
  clear_has_storerefresh_rsp();
}
inline const ::vmsg::CSArenaStroeInfo& CSArenaRespond::storerefresh_rsp() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return storerefresh_rsp_ != NULL ? *storerefresh_rsp_ : *default_instance().storerefresh_rsp_;
#else
  return storerefresh_rsp_ != NULL ? *storerefresh_rsp_ : *default_instance_->storerefresh_rsp_;
#endif
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::mutable_storerefresh_rsp() {
  set_has_storerefresh_rsp();
  if (storerefresh_rsp_ == NULL) storerefresh_rsp_ = new ::vmsg::CSArenaStroeInfo;
  return storerefresh_rsp_;
}
inline ::vmsg::CSArenaStroeInfo* CSArenaRespond::release_storerefresh_rsp() {
  clear_has_storerefresh_rsp();
  ::vmsg::CSArenaStroeInfo* temp = storerefresh_rsp_;
  storerefresh_rsp_ = NULL;
  return temp;
}
inline void CSArenaRespond::set_allocated_storerefresh_rsp(::vmsg::CSArenaStroeInfo* storerefresh_rsp) {
  delete storerefresh_rsp_;
  storerefresh_rsp_ = storerefresh_rsp;
  if (storerefresh_rsp) {
    set_has_storerefresh_rsp();
  } else {
    clear_has_storerefresh_rsp();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vmsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSArenaMsg_2eproto__INCLUDED
