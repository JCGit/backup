// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VIPLvCfg.proto

#ifndef PROTOBUF_VIPLvCfg_2eproto__INCLUDED
#define PROTOBUF_VIPLvCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_VIPLvCfg_2eproto();
void protobuf_AssignDesc_VIPLvCfg_2eproto();
void protobuf_ShutdownFile_VIPLvCfg_2eproto();

class VIPLvCfg;
class VIPLvCfgSet;

// ===================================================================

class VIPLvCfg : public ::google::protobuf::MessageLite {
 public:
  VIPLvCfg();
  virtual ~VIPLvCfg();

  VIPLvCfg(const VIPLvCfg& from);

  inline VIPLvCfg& operator=(const VIPLvCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const VIPLvCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VIPLvCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VIPLvCfg* other);

  // implements Message ----------------------------------------------

  VIPLvCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VIPLvCfg& from);
  void MergeFrom(const VIPLvCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 VIPLv = 1;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kVIPLvFieldNumber = 1;
  inline ::google::protobuf::uint32 viplv() const;
  inline void set_viplv(::google::protobuf::uint32 value);

  // required uint32 NeedGold = 2;
  inline bool has_needgold() const;
  inline void clear_needgold();
  static const int kNeedGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 needgold() const;
  inline void set_needgold(::google::protobuf::uint32 value);

  // required uint32 PackageID = 3;
  inline bool has_packageid() const;
  inline void clear_packageid();
  static const int kPackageIDFieldNumber = 3;
  inline ::google::protobuf::uint32 packageid() const;
  inline void set_packageid(::google::protobuf::uint32 value);

  // required uint32 DailyGiftPkgID = 4;
  inline bool has_dailygiftpkgid() const;
  inline void clear_dailygiftpkgid();
  static const int kDailyGiftPkgIDFieldNumber = 4;
  inline ::google::protobuf::uint32 dailygiftpkgid() const;
  inline void set_dailygiftpkgid(::google::protobuf::uint32 value);

  // required string TitleIcon = 5;
  inline bool has_titleicon() const;
  inline void clear_titleicon();
  static const int kTitleIconFieldNumber = 5;
  inline const ::std::string& titleicon() const;
  inline void set_titleicon(const ::std::string& value);
  inline void set_titleicon(const char* value);
  inline void set_titleicon(const char* value, size_t size);
  inline ::std::string* mutable_titleicon();
  inline ::std::string* release_titleicon();
  inline void set_allocated_titleicon(::std::string* titleicon);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.VIPLvCfg)
 private:
  inline void set_has_viplv();
  inline void clear_has_viplv();
  inline void set_has_needgold();
  inline void clear_has_needgold();
  inline void set_has_packageid();
  inline void clear_has_packageid();
  inline void set_has_dailygiftpkgid();
  inline void clear_has_dailygiftpkgid();
  inline void set_has_titleicon();
  inline void clear_has_titleicon();

  ::google::protobuf::uint32 viplv_;
  ::google::protobuf::uint32 needgold_;
  ::google::protobuf::uint32 packageid_;
  ::google::protobuf::uint32 dailygiftpkgid_;
  ::std::string* titleicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_VIPLvCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_VIPLvCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_VIPLvCfg_2eproto();
  friend void protobuf_ShutdownFile_VIPLvCfg_2eproto();

  void InitAsDefaultInstance();
  static VIPLvCfg* default_instance_;
};
// -------------------------------------------------------------------

class VIPLvCfgSet : public ::google::protobuf::MessageLite {
 public:
  VIPLvCfgSet();
  virtual ~VIPLvCfgSet();

  VIPLvCfgSet(const VIPLvCfgSet& from);

  inline VIPLvCfgSet& operator=(const VIPLvCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const VIPLvCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VIPLvCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VIPLvCfgSet* other);

  // implements Message ----------------------------------------------

  VIPLvCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const VIPLvCfgSet& from);
  void MergeFrom(const VIPLvCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.VIPLvCfg viplvcfg = 1;
  inline int viplvcfg_size() const;
  inline void clear_viplvcfg();
  static const int kViplvcfgFieldNumber = 1;
  inline const ::com::cfg::vo::VIPLvCfg& viplvcfg(int index) const;
  inline ::com::cfg::vo::VIPLvCfg* mutable_viplvcfg(int index);
  inline ::com::cfg::vo::VIPLvCfg* add_viplvcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::VIPLvCfg >&
      viplvcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::VIPLvCfg >*
      mutable_viplvcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.VIPLvCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::VIPLvCfg > viplvcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_VIPLvCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_VIPLvCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_VIPLvCfg_2eproto();
  friend void protobuf_ShutdownFile_VIPLvCfg_2eproto();

  void InitAsDefaultInstance();
  static VIPLvCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// VIPLvCfg

// required uint32 VIPLv = 1;
inline bool VIPLvCfg::has_viplv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VIPLvCfg::set_has_viplv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VIPLvCfg::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VIPLvCfg::clear_viplv() {
  viplv_ = 0u;
  clear_has_viplv();
}
inline ::google::protobuf::uint32 VIPLvCfg::viplv() const {
  return viplv_;
}
inline void VIPLvCfg::set_viplv(::google::protobuf::uint32 value) {
  set_has_viplv();
  viplv_ = value;
}

// required uint32 NeedGold = 2;
inline bool VIPLvCfg::has_needgold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VIPLvCfg::set_has_needgold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VIPLvCfg::clear_has_needgold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VIPLvCfg::clear_needgold() {
  needgold_ = 0u;
  clear_has_needgold();
}
inline ::google::protobuf::uint32 VIPLvCfg::needgold() const {
  return needgold_;
}
inline void VIPLvCfg::set_needgold(::google::protobuf::uint32 value) {
  set_has_needgold();
  needgold_ = value;
}

// required uint32 PackageID = 3;
inline bool VIPLvCfg::has_packageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VIPLvCfg::set_has_packageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VIPLvCfg::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VIPLvCfg::clear_packageid() {
  packageid_ = 0u;
  clear_has_packageid();
}
inline ::google::protobuf::uint32 VIPLvCfg::packageid() const {
  return packageid_;
}
inline void VIPLvCfg::set_packageid(::google::protobuf::uint32 value) {
  set_has_packageid();
  packageid_ = value;
}

// required uint32 DailyGiftPkgID = 4;
inline bool VIPLvCfg::has_dailygiftpkgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VIPLvCfg::set_has_dailygiftpkgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VIPLvCfg::clear_has_dailygiftpkgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VIPLvCfg::clear_dailygiftpkgid() {
  dailygiftpkgid_ = 0u;
  clear_has_dailygiftpkgid();
}
inline ::google::protobuf::uint32 VIPLvCfg::dailygiftpkgid() const {
  return dailygiftpkgid_;
}
inline void VIPLvCfg::set_dailygiftpkgid(::google::protobuf::uint32 value) {
  set_has_dailygiftpkgid();
  dailygiftpkgid_ = value;
}

// required string TitleIcon = 5;
inline bool VIPLvCfg::has_titleicon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VIPLvCfg::set_has_titleicon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VIPLvCfg::clear_has_titleicon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VIPLvCfg::clear_titleicon() {
  if (titleicon_ != &::google::protobuf::internal::kEmptyString) {
    titleicon_->clear();
  }
  clear_has_titleicon();
}
inline const ::std::string& VIPLvCfg::titleicon() const {
  return *titleicon_;
}
inline void VIPLvCfg::set_titleicon(const ::std::string& value) {
  set_has_titleicon();
  if (titleicon_ == &::google::protobuf::internal::kEmptyString) {
    titleicon_ = new ::std::string;
  }
  titleicon_->assign(value);
}
inline void VIPLvCfg::set_titleicon(const char* value) {
  set_has_titleicon();
  if (titleicon_ == &::google::protobuf::internal::kEmptyString) {
    titleicon_ = new ::std::string;
  }
  titleicon_->assign(value);
}
inline void VIPLvCfg::set_titleicon(const char* value, size_t size) {
  set_has_titleicon();
  if (titleicon_ == &::google::protobuf::internal::kEmptyString) {
    titleicon_ = new ::std::string;
  }
  titleicon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* VIPLvCfg::mutable_titleicon() {
  set_has_titleicon();
  if (titleicon_ == &::google::protobuf::internal::kEmptyString) {
    titleicon_ = new ::std::string;
  }
  return titleicon_;
}
inline ::std::string* VIPLvCfg::release_titleicon() {
  clear_has_titleicon();
  if (titleicon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = titleicon_;
    titleicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void VIPLvCfg::set_allocated_titleicon(::std::string* titleicon) {
  if (titleicon_ != &::google::protobuf::internal::kEmptyString) {
    delete titleicon_;
  }
  if (titleicon) {
    set_has_titleicon();
    titleicon_ = titleicon;
  } else {
    clear_has_titleicon();
    titleicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// VIPLvCfgSet

// repeated .com.cfg.vo.VIPLvCfg viplvcfg = 1;
inline int VIPLvCfgSet::viplvcfg_size() const {
  return viplvcfg_.size();
}
inline void VIPLvCfgSet::clear_viplvcfg() {
  viplvcfg_.Clear();
}
inline const ::com::cfg::vo::VIPLvCfg& VIPLvCfgSet::viplvcfg(int index) const {
  return viplvcfg_.Get(index);
}
inline ::com::cfg::vo::VIPLvCfg* VIPLvCfgSet::mutable_viplvcfg(int index) {
  return viplvcfg_.Mutable(index);
}
inline ::com::cfg::vo::VIPLvCfg* VIPLvCfgSet::add_viplvcfg() {
  return viplvcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::VIPLvCfg >&
VIPLvCfgSet::viplvcfg() const {
  return viplvcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::VIPLvCfg >*
VIPLvCfgSet::mutable_viplvcfg() {
  return &viplvcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VIPLvCfg_2eproto__INCLUDED
