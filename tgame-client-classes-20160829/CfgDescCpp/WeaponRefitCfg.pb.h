// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeaponRefitCfg.proto

#ifndef PROTOBUF_WeaponRefitCfg_2eproto__INCLUDED
#define PROTOBUF_WeaponRefitCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WeaponRefitCfg_2eproto();
void protobuf_AssignDesc_WeaponRefitCfg_2eproto();
void protobuf_ShutdownFile_WeaponRefitCfg_2eproto();

class RefitConsumeElement;
class WeaponRefitCfg;
class WeaponRefitCfgSet;

// ===================================================================

class RefitConsumeElement : public ::google::protobuf::MessageLite {
 public:
  RefitConsumeElement();
  virtual ~RefitConsumeElement();

  RefitConsumeElement(const RefitConsumeElement& from);

  inline RefitConsumeElement& operator=(const RefitConsumeElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const RefitConsumeElement& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RefitConsumeElement* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RefitConsumeElement* other);

  // implements Message ----------------------------------------------

  RefitConsumeElement* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RefitConsumeElement& from);
  void MergeFrom(const RefitConsumeElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementID = 1;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 1;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementType = 2;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.RefitConsumeElement)
 private:
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WeaponRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_WeaponRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static RefitConsumeElement* default_instance_;
};
// -------------------------------------------------------------------

class WeaponRefitCfg : public ::google::protobuf::MessageLite {
 public:
  WeaponRefitCfg();
  virtual ~WeaponRefitCfg();

  WeaponRefitCfg(const WeaponRefitCfg& from);

  inline WeaponRefitCfg& operator=(const WeaponRefitCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const WeaponRefitCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WeaponRefitCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WeaponRefitCfg* other);

  // implements Message ----------------------------------------------

  WeaponRefitCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WeaponRefitCfg& from);
  void MergeFrom(const WeaponRefitCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 WeaponTypeID = 1;
  inline bool has_weapontypeid() const;
  inline void clear_weapontypeid();
  static const int kWeaponTypeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 weapontypeid() const;
  inline void set_weapontypeid(::google::protobuf::uint32 value);

  // required uint32 Color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.RefitConsumeElement ElmtList = 3;
  inline int elmtlist_size() const;
  inline void clear_elmtlist();
  static const int kElmtListFieldNumber = 3;
  inline const ::com::cfg::vo::RefitConsumeElement& elmtlist(int index) const;
  inline ::com::cfg::vo::RefitConsumeElement* mutable_elmtlist(int index);
  inline ::com::cfg::vo::RefitConsumeElement* add_elmtlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::RefitConsumeElement >&
      elmtlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::RefitConsumeElement >*
      mutable_elmtlist();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WeaponRefitCfg)
 private:
  inline void set_has_weapontypeid();
  inline void clear_has_weapontypeid();
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::uint32 weapontypeid_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::RefitConsumeElement > elmtlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WeaponRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_WeaponRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static WeaponRefitCfg* default_instance_;
};
// -------------------------------------------------------------------

class WeaponRefitCfgSet : public ::google::protobuf::MessageLite {
 public:
  WeaponRefitCfgSet();
  virtual ~WeaponRefitCfgSet();

  WeaponRefitCfgSet(const WeaponRefitCfgSet& from);

  inline WeaponRefitCfgSet& operator=(const WeaponRefitCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const WeaponRefitCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WeaponRefitCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WeaponRefitCfgSet* other);

  // implements Message ----------------------------------------------

  WeaponRefitCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WeaponRefitCfgSet& from);
  void MergeFrom(const WeaponRefitCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.WeaponRefitCfg weaponrefitcfg = 1;
  inline int weaponrefitcfg_size() const;
  inline void clear_weaponrefitcfg();
  static const int kWeaponrefitcfgFieldNumber = 1;
  inline const ::com::cfg::vo::WeaponRefitCfg& weaponrefitcfg(int index) const;
  inline ::com::cfg::vo::WeaponRefitCfg* mutable_weaponrefitcfg(int index);
  inline ::com::cfg::vo::WeaponRefitCfg* add_weaponrefitcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponRefitCfg >&
      weaponrefitcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponRefitCfg >*
      mutable_weaponrefitcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WeaponRefitCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponRefitCfg > weaponrefitcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WeaponRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WeaponRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_WeaponRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static WeaponRefitCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// RefitConsumeElement

// required uint32 ElementID = 1;
inline bool RefitConsumeElement::has_elementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefitConsumeElement::set_has_elementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefitConsumeElement::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefitConsumeElement::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 RefitConsumeElement::elementid() const {
  return elementid_;
}
inline void RefitConsumeElement::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementType = 2;
inline bool RefitConsumeElement::has_elementtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefitConsumeElement::set_has_elementtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefitConsumeElement::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefitConsumeElement::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 RefitConsumeElement::elementtype() const {
  return elementtype_;
}
inline void RefitConsumeElement::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementCnt = 3;
inline bool RefitConsumeElement::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefitConsumeElement::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefitConsumeElement::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefitConsumeElement::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 RefitConsumeElement::elementcnt() const {
  return elementcnt_;
}
inline void RefitConsumeElement::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// WeaponRefitCfg

// required uint32 WeaponTypeID = 1;
inline bool WeaponRefitCfg::has_weapontypeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeaponRefitCfg::set_has_weapontypeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeaponRefitCfg::clear_has_weapontypeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeaponRefitCfg::clear_weapontypeid() {
  weapontypeid_ = 0u;
  clear_has_weapontypeid();
}
inline ::google::protobuf::uint32 WeaponRefitCfg::weapontypeid() const {
  return weapontypeid_;
}
inline void WeaponRefitCfg::set_weapontypeid(::google::protobuf::uint32 value) {
  set_has_weapontypeid();
  weapontypeid_ = value;
}

// required uint32 Color = 2;
inline bool WeaponRefitCfg::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeaponRefitCfg::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeaponRefitCfg::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeaponRefitCfg::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 WeaponRefitCfg::color() const {
  return color_;
}
inline void WeaponRefitCfg::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
}

// repeated .com.cfg.vo.RefitConsumeElement ElmtList = 3;
inline int WeaponRefitCfg::elmtlist_size() const {
  return elmtlist_.size();
}
inline void WeaponRefitCfg::clear_elmtlist() {
  elmtlist_.Clear();
}
inline const ::com::cfg::vo::RefitConsumeElement& WeaponRefitCfg::elmtlist(int index) const {
  return elmtlist_.Get(index);
}
inline ::com::cfg::vo::RefitConsumeElement* WeaponRefitCfg::mutable_elmtlist(int index) {
  return elmtlist_.Mutable(index);
}
inline ::com::cfg::vo::RefitConsumeElement* WeaponRefitCfg::add_elmtlist() {
  return elmtlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::RefitConsumeElement >&
WeaponRefitCfg::elmtlist() const {
  return elmtlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::RefitConsumeElement >*
WeaponRefitCfg::mutable_elmtlist() {
  return &elmtlist_;
}

// -------------------------------------------------------------------

// WeaponRefitCfgSet

// repeated .com.cfg.vo.WeaponRefitCfg weaponrefitcfg = 1;
inline int WeaponRefitCfgSet::weaponrefitcfg_size() const {
  return weaponrefitcfg_.size();
}
inline void WeaponRefitCfgSet::clear_weaponrefitcfg() {
  weaponrefitcfg_.Clear();
}
inline const ::com::cfg::vo::WeaponRefitCfg& WeaponRefitCfgSet::weaponrefitcfg(int index) const {
  return weaponrefitcfg_.Get(index);
}
inline ::com::cfg::vo::WeaponRefitCfg* WeaponRefitCfgSet::mutable_weaponrefitcfg(int index) {
  return weaponrefitcfg_.Mutable(index);
}
inline ::com::cfg::vo::WeaponRefitCfg* WeaponRefitCfgSet::add_weaponrefitcfg() {
  return weaponrefitcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponRefitCfg >&
WeaponRefitCfgSet::weaponrefitcfg() const {
  return weaponrefitcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponRefitCfg >*
WeaponRefitCfgSet::mutable_weaponrefitcfg() {
  return &weaponrefitcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WeaponRefitCfg_2eproto__INCLUDED
