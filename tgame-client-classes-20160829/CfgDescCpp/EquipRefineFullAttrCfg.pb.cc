// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipRefineFullAttrCfg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EquipRefineFullAttrCfg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

void protobuf_ShutdownFile_EquipRefineFullAttrCfg_2eproto() {
  delete EquipRefineFullAttrCfg::default_instance_;
  delete EquipRefineFullAttrCfgSet::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::com::cfg::vo::protobuf_AddDesc_EquipmentCfg_2eproto();
  EquipRefineFullAttrCfg::default_instance_ = new EquipRefineFullAttrCfg();
  EquipRefineFullAttrCfgSet::default_instance_ = new EquipRefineFullAttrCfgSet();
  EquipRefineFullAttrCfg::default_instance_->InitAsDefaultInstance();
  EquipRefineFullAttrCfgSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EquipRefineFullAttrCfg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto_once_);
void protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto_once_,
                 &protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EquipRefineFullAttrCfg_2eproto {
  StaticDescriptorInitializer_EquipRefineFullAttrCfg_2eproto() {
    protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto();
  }
} static_descriptor_initializer_EquipRefineFullAttrCfg_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int EquipRefineFullAttrCfg::kRefineLevelFieldNumber;
const int EquipRefineFullAttrCfg::kAttrFieldNumber;
#endif  // !_MSC_VER

EquipRefineFullAttrCfg::EquipRefineFullAttrCfg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EquipRefineFullAttrCfg::InitAsDefaultInstance() {
}

EquipRefineFullAttrCfg::EquipRefineFullAttrCfg(const EquipRefineFullAttrCfg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EquipRefineFullAttrCfg::SharedCtor() {
  _cached_size_ = 0;
  refinelevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipRefineFullAttrCfg::~EquipRefineFullAttrCfg() {
  SharedDtor();
}

void EquipRefineFullAttrCfg::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EquipRefineFullAttrCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EquipRefineFullAttrCfg& EquipRefineFullAttrCfg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto();
#endif
  return *default_instance_;
}

EquipRefineFullAttrCfg* EquipRefineFullAttrCfg::default_instance_ = NULL;

EquipRefineFullAttrCfg* EquipRefineFullAttrCfg::New() const {
  return new EquipRefineFullAttrCfg;
}

void EquipRefineFullAttrCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refinelevel_ = 0u;
  }
  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EquipRefineFullAttrCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 RefineLevel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refinelevel_)));
          set_has_refinelevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Attr;
        break;
      }

      // repeated .com.cfg.vo.EquipAttr Attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipRefineFullAttrCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 RefineLevel = 1;
  if (has_refinelevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->refinelevel(), output);
  }

  // repeated .com.cfg.vo.EquipAttr Attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->attr(i), output);
  }

}

int EquipRefineFullAttrCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 RefineLevel = 1;
    if (has_refinelevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refinelevel());
    }

  }
  // repeated .com.cfg.vo.EquipAttr Attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipRefineFullAttrCfg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EquipRefineFullAttrCfg*>(&from));
}

void EquipRefineFullAttrCfg::MergeFrom(const EquipRefineFullAttrCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refinelevel()) {
      set_refinelevel(from.refinelevel());
    }
  }
}

void EquipRefineFullAttrCfg::CopyFrom(const EquipRefineFullAttrCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipRefineFullAttrCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < attr_size(); i++) {
    if (!this->attr(i).IsInitialized()) return false;
  }
  return true;
}

void EquipRefineFullAttrCfg::Swap(EquipRefineFullAttrCfg* other) {
  if (other != this) {
    std::swap(refinelevel_, other->refinelevel_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EquipRefineFullAttrCfg::GetTypeName() const {
  return "com.cfg.vo.EquipRefineFullAttrCfg";
}


// ===================================================================

#ifndef _MSC_VER
const int EquipRefineFullAttrCfgSet::kCfglstFieldNumber;
#endif  // !_MSC_VER

EquipRefineFullAttrCfgSet::EquipRefineFullAttrCfgSet()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EquipRefineFullAttrCfgSet::InitAsDefaultInstance() {
}

EquipRefineFullAttrCfgSet::EquipRefineFullAttrCfgSet(const EquipRefineFullAttrCfgSet& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EquipRefineFullAttrCfgSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipRefineFullAttrCfgSet::~EquipRefineFullAttrCfgSet() {
  SharedDtor();
}

void EquipRefineFullAttrCfgSet::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EquipRefineFullAttrCfgSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EquipRefineFullAttrCfgSet& EquipRefineFullAttrCfgSet::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EquipRefineFullAttrCfg_2eproto();
#endif
  return *default_instance_;
}

EquipRefineFullAttrCfgSet* EquipRefineFullAttrCfgSet::default_instance_ = NULL;

EquipRefineFullAttrCfgSet* EquipRefineFullAttrCfgSet::New() const {
  return new EquipRefineFullAttrCfgSet;
}

void EquipRefineFullAttrCfgSet::Clear() {
  cfglst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EquipRefineFullAttrCfgSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.cfg.vo.EquipRefineFullAttrCfg cfglst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cfglst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cfglst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cfglst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipRefineFullAttrCfgSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.cfg.vo.EquipRefineFullAttrCfg cfglst = 1;
  for (int i = 0; i < this->cfglst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->cfglst(i), output);
  }

}

int EquipRefineFullAttrCfgSet::ByteSize() const {
  int total_size = 0;

  // repeated .com.cfg.vo.EquipRefineFullAttrCfg cfglst = 1;
  total_size += 1 * this->cfglst_size();
  for (int i = 0; i < this->cfglst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cfglst(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipRefineFullAttrCfgSet::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EquipRefineFullAttrCfgSet*>(&from));
}

void EquipRefineFullAttrCfgSet::MergeFrom(const EquipRefineFullAttrCfgSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfglst_.MergeFrom(from.cfglst_);
}

void EquipRefineFullAttrCfgSet::CopyFrom(const EquipRefineFullAttrCfgSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipRefineFullAttrCfgSet::IsInitialized() const {

  for (int i = 0; i < cfglst_size(); i++) {
    if (!this->cfglst(i).IsInitialized()) return false;
  }
  return true;
}

void EquipRefineFullAttrCfgSet::Swap(EquipRefineFullAttrCfgSet* other) {
  if (other != this) {
    cfglst_.Swap(&other->cfglst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EquipRefineFullAttrCfgSet::GetTypeName() const {
  return "com.cfg.vo.EquipRefineFullAttrCfgSet";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)
