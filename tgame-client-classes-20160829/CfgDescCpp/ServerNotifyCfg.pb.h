// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerNotifyCfg.proto

#ifndef PROTOBUF_ServerNotifyCfg_2eproto__INCLUDED
#define PROTOBUF_ServerNotifyCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerNotifyCfg_2eproto();
void protobuf_AssignDesc_ServerNotifyCfg_2eproto();
void protobuf_ShutdownFile_ServerNotifyCfg_2eproto();

class ServerNotifyCfg;
class ServerNotifyCfgSet;

// ===================================================================

class ServerNotifyCfg : public ::google::protobuf::MessageLite {
 public:
  ServerNotifyCfg();
  virtual ~ServerNotifyCfg();

  ServerNotifyCfg(const ServerNotifyCfg& from);

  inline ServerNotifyCfg& operator=(const ServerNotifyCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ServerNotifyCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ServerNotifyCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ServerNotifyCfg* other);

  // implements Message ----------------------------------------------

  ServerNotifyCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ServerNotifyCfg& from);
  void MergeFrom(const ServerNotifyCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 NotifyID = 1;
  inline bool has_notifyid() const;
  inline void clear_notifyid();
  static const int kNotifyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 notifyid() const;
  inline void set_notifyid(::google::protobuf::uint32 value);

  // required string NotifyContent = 2;
  inline bool has_notifycontent() const;
  inline void clear_notifycontent();
  static const int kNotifyContentFieldNumber = 2;
  inline const ::std::string& notifycontent() const;
  inline void set_notifycontent(const ::std::string& value);
  inline void set_notifycontent(const char* value);
  inline void set_notifycontent(const char* value, size_t size);
  inline ::std::string* mutable_notifycontent();
  inline ::std::string* release_notifycontent();
  inline void set_allocated_notifycontent(::std::string* notifycontent);

  // required uint32 FlagType = 3;
  inline bool has_flagtype() const;
  inline void clear_flagtype();
  static const int kFlagTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 flagtype() const;
  inline void set_flagtype(::google::protobuf::uint32 value);

  // required uint32 StartFlag = 4;
  inline bool has_startflag() const;
  inline void clear_startflag();
  static const int kStartFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 startflag() const;
  inline void set_startflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ServerNotifyCfg)
 private:
  inline void set_has_notifyid();
  inline void clear_has_notifyid();
  inline void set_has_notifycontent();
  inline void clear_has_notifycontent();
  inline void set_has_flagtype();
  inline void clear_has_flagtype();
  inline void set_has_startflag();
  inline void clear_has_startflag();

  ::std::string* notifycontent_;
  ::google::protobuf::uint32 notifyid_;
  ::google::protobuf::uint32 flagtype_;
  ::google::protobuf::uint32 startflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ServerNotifyCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ServerNotifyCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ServerNotifyCfg_2eproto();
  friend void protobuf_ShutdownFile_ServerNotifyCfg_2eproto();

  void InitAsDefaultInstance();
  static ServerNotifyCfg* default_instance_;
};
// -------------------------------------------------------------------

class ServerNotifyCfgSet : public ::google::protobuf::MessageLite {
 public:
  ServerNotifyCfgSet();
  virtual ~ServerNotifyCfgSet();

  ServerNotifyCfgSet(const ServerNotifyCfgSet& from);

  inline ServerNotifyCfgSet& operator=(const ServerNotifyCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ServerNotifyCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ServerNotifyCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ServerNotifyCfgSet* other);

  // implements Message ----------------------------------------------

  ServerNotifyCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ServerNotifyCfgSet& from);
  void MergeFrom(const ServerNotifyCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.ServerNotifyCfg servernotifycfg = 1;
  inline int servernotifycfg_size() const;
  inline void clear_servernotifycfg();
  static const int kServernotifycfgFieldNumber = 1;
  inline const ::com::cfg::vo::ServerNotifyCfg& servernotifycfg(int index) const;
  inline ::com::cfg::vo::ServerNotifyCfg* mutable_servernotifycfg(int index);
  inline ::com::cfg::vo::ServerNotifyCfg* add_servernotifycfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ServerNotifyCfg >&
      servernotifycfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ServerNotifyCfg >*
      mutable_servernotifycfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ServerNotifyCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ServerNotifyCfg > servernotifycfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ServerNotifyCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ServerNotifyCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ServerNotifyCfg_2eproto();
  friend void protobuf_ShutdownFile_ServerNotifyCfg_2eproto();

  void InitAsDefaultInstance();
  static ServerNotifyCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerNotifyCfg

// required uint32 NotifyID = 1;
inline bool ServerNotifyCfg::has_notifyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerNotifyCfg::set_has_notifyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerNotifyCfg::clear_has_notifyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerNotifyCfg::clear_notifyid() {
  notifyid_ = 0u;
  clear_has_notifyid();
}
inline ::google::protobuf::uint32 ServerNotifyCfg::notifyid() const {
  return notifyid_;
}
inline void ServerNotifyCfg::set_notifyid(::google::protobuf::uint32 value) {
  set_has_notifyid();
  notifyid_ = value;
}

// required string NotifyContent = 2;
inline bool ServerNotifyCfg::has_notifycontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerNotifyCfg::set_has_notifycontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerNotifyCfg::clear_has_notifycontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerNotifyCfg::clear_notifycontent() {
  if (notifycontent_ != &::google::protobuf::internal::kEmptyString) {
    notifycontent_->clear();
  }
  clear_has_notifycontent();
}
inline const ::std::string& ServerNotifyCfg::notifycontent() const {
  return *notifycontent_;
}
inline void ServerNotifyCfg::set_notifycontent(const ::std::string& value) {
  set_has_notifycontent();
  if (notifycontent_ == &::google::protobuf::internal::kEmptyString) {
    notifycontent_ = new ::std::string;
  }
  notifycontent_->assign(value);
}
inline void ServerNotifyCfg::set_notifycontent(const char* value) {
  set_has_notifycontent();
  if (notifycontent_ == &::google::protobuf::internal::kEmptyString) {
    notifycontent_ = new ::std::string;
  }
  notifycontent_->assign(value);
}
inline void ServerNotifyCfg::set_notifycontent(const char* value, size_t size) {
  set_has_notifycontent();
  if (notifycontent_ == &::google::protobuf::internal::kEmptyString) {
    notifycontent_ = new ::std::string;
  }
  notifycontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerNotifyCfg::mutable_notifycontent() {
  set_has_notifycontent();
  if (notifycontent_ == &::google::protobuf::internal::kEmptyString) {
    notifycontent_ = new ::std::string;
  }
  return notifycontent_;
}
inline ::std::string* ServerNotifyCfg::release_notifycontent() {
  clear_has_notifycontent();
  if (notifycontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notifycontent_;
    notifycontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServerNotifyCfg::set_allocated_notifycontent(::std::string* notifycontent) {
  if (notifycontent_ != &::google::protobuf::internal::kEmptyString) {
    delete notifycontent_;
  }
  if (notifycontent) {
    set_has_notifycontent();
    notifycontent_ = notifycontent;
  } else {
    clear_has_notifycontent();
    notifycontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 FlagType = 3;
inline bool ServerNotifyCfg::has_flagtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerNotifyCfg::set_has_flagtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerNotifyCfg::clear_has_flagtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerNotifyCfg::clear_flagtype() {
  flagtype_ = 0u;
  clear_has_flagtype();
}
inline ::google::protobuf::uint32 ServerNotifyCfg::flagtype() const {
  return flagtype_;
}
inline void ServerNotifyCfg::set_flagtype(::google::protobuf::uint32 value) {
  set_has_flagtype();
  flagtype_ = value;
}

// required uint32 StartFlag = 4;
inline bool ServerNotifyCfg::has_startflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerNotifyCfg::set_has_startflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerNotifyCfg::clear_has_startflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerNotifyCfg::clear_startflag() {
  startflag_ = 0u;
  clear_has_startflag();
}
inline ::google::protobuf::uint32 ServerNotifyCfg::startflag() const {
  return startflag_;
}
inline void ServerNotifyCfg::set_startflag(::google::protobuf::uint32 value) {
  set_has_startflag();
  startflag_ = value;
}

// -------------------------------------------------------------------

// ServerNotifyCfgSet

// repeated .com.cfg.vo.ServerNotifyCfg servernotifycfg = 1;
inline int ServerNotifyCfgSet::servernotifycfg_size() const {
  return servernotifycfg_.size();
}
inline void ServerNotifyCfgSet::clear_servernotifycfg() {
  servernotifycfg_.Clear();
}
inline const ::com::cfg::vo::ServerNotifyCfg& ServerNotifyCfgSet::servernotifycfg(int index) const {
  return servernotifycfg_.Get(index);
}
inline ::com::cfg::vo::ServerNotifyCfg* ServerNotifyCfgSet::mutable_servernotifycfg(int index) {
  return servernotifycfg_.Mutable(index);
}
inline ::com::cfg::vo::ServerNotifyCfg* ServerNotifyCfgSet::add_servernotifycfg() {
  return servernotifycfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ServerNotifyCfg >&
ServerNotifyCfgSet::servernotifycfg() const {
  return servernotifycfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ServerNotifyCfg >*
ServerNotifyCfgSet::mutable_servernotifycfg() {
  return &servernotifycfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerNotifyCfg_2eproto__INCLUDED
