// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BuildItemCfg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BuildItemCfg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

void protobuf_ShutdownFile_BuildItemCfg_2eproto() {
  delete BuildItemCfg::default_instance_;
  delete BuildItemCfgSet::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_BuildItemCfg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_BuildItemCfg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  BuildItemCfg::default_instance_ = new BuildItemCfg();
  BuildItemCfgSet::default_instance_ = new BuildItemCfgSet();
  BuildItemCfg::default_instance_->InitAsDefaultInstance();
  BuildItemCfgSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BuildItemCfg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_BuildItemCfg_2eproto_once_);
void protobuf_AddDesc_BuildItemCfg_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_BuildItemCfg_2eproto_once_,
                 &protobuf_AddDesc_BuildItemCfg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BuildItemCfg_2eproto {
  StaticDescriptorInitializer_BuildItemCfg_2eproto() {
    protobuf_AddDesc_BuildItemCfg_2eproto();
  }
} static_descriptor_initializer_BuildItemCfg_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int BuildItemCfg::kItemIDFieldNumber;
const int BuildItemCfg::kItemResFieldNumber;
#endif  // !_MSC_VER

BuildItemCfg::BuildItemCfg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BuildItemCfg::InitAsDefaultInstance() {
}

BuildItemCfg::BuildItemCfg(const BuildItemCfg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BuildItemCfg::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  itemres_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildItemCfg::~BuildItemCfg() {
  SharedDtor();
}

void BuildItemCfg::SharedDtor() {
  if (itemres_ != &::google::protobuf::internal::kEmptyString) {
    delete itemres_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void BuildItemCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BuildItemCfg& BuildItemCfg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_BuildItemCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_BuildItemCfg_2eproto();
#endif
  return *default_instance_;
}

BuildItemCfg* BuildItemCfg::default_instance_ = NULL;

BuildItemCfg* BuildItemCfg::New() const {
  return new BuildItemCfg;
}

void BuildItemCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0u;
    if (has_itemres()) {
      if (itemres_ != &::google::protobuf::internal::kEmptyString) {
        itemres_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BuildItemCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ItemRes;
        break;
      }

      // required string ItemRes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ItemRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemres()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuildItemCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // required string ItemRes = 3;
  if (has_itemres()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->itemres(), output);
  }

}

int BuildItemCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // required string ItemRes = 3;
    if (has_itemres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemres());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildItemCfg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BuildItemCfg*>(&from));
}

void BuildItemCfg::MergeFrom(const BuildItemCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemres()) {
      set_itemres(from.itemres());
    }
  }
}

void BuildItemCfg::CopyFrom(const BuildItemCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildItemCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BuildItemCfg::Swap(BuildItemCfg* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(itemres_, other->itemres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BuildItemCfg::GetTypeName() const {
  return "com.cfg.vo.BuildItemCfg";
}


// ===================================================================

#ifndef _MSC_VER
const int BuildItemCfgSet::kBuildItemCfgFieldNumber;
#endif  // !_MSC_VER

BuildItemCfgSet::BuildItemCfgSet()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BuildItemCfgSet::InitAsDefaultInstance() {
}

BuildItemCfgSet::BuildItemCfgSet(const BuildItemCfgSet& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BuildItemCfgSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuildItemCfgSet::~BuildItemCfgSet() {
  SharedDtor();
}

void BuildItemCfgSet::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void BuildItemCfgSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BuildItemCfgSet& BuildItemCfgSet::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_BuildItemCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_BuildItemCfg_2eproto();
#endif
  return *default_instance_;
}

BuildItemCfgSet* BuildItemCfgSet::default_instance_ = NULL;

BuildItemCfgSet* BuildItemCfgSet::New() const {
  return new BuildItemCfgSet;
}

void BuildItemCfgSet::Clear() {
  builditemcfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BuildItemCfgSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.cfg.vo.BuildItemCfg buildItemCfg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildItemCfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builditemcfg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_buildItemCfg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuildItemCfgSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.cfg.vo.BuildItemCfg buildItemCfg = 1;
  for (int i = 0; i < this->builditemcfg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->builditemcfg(i), output);
  }

}

int BuildItemCfgSet::ByteSize() const {
  int total_size = 0;

  // repeated .com.cfg.vo.BuildItemCfg buildItemCfg = 1;
  total_size += 1 * this->builditemcfg_size();
  for (int i = 0; i < this->builditemcfg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builditemcfg(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildItemCfgSet::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BuildItemCfgSet*>(&from));
}

void BuildItemCfgSet::MergeFrom(const BuildItemCfgSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  builditemcfg_.MergeFrom(from.builditemcfg_);
}

void BuildItemCfgSet::CopyFrom(const BuildItemCfgSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildItemCfgSet::IsInitialized() const {

  for (int i = 0; i < builditemcfg_size(); i++) {
    if (!this->builditemcfg(i).IsInitialized()) return false;
  }
  return true;
}

void BuildItemCfgSet::Swap(BuildItemCfgSet* other) {
  if (other != this) {
    builditemcfg_.Swap(&other->builditemcfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BuildItemCfgSet::GetTypeName() const {
  return "com.cfg.vo.BuildItemCfgSet";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)
