// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipExpItemCfg.proto

#ifndef PROTOBUF_EquipExpItemCfg_2eproto__INCLUDED
#define PROTOBUF_EquipExpItemCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EquipExpItemCfg_2eproto();
void protobuf_AssignDesc_EquipExpItemCfg_2eproto();
void protobuf_ShutdownFile_EquipExpItemCfg_2eproto();

class EquipExpItemCfg;
class EquipExpItemCfgSet;

// ===================================================================

class EquipExpItemCfg : public ::google::protobuf::MessageLite {
 public:
  EquipExpItemCfg();
  virtual ~EquipExpItemCfg();

  EquipExpItemCfg(const EquipExpItemCfg& from);

  inline EquipExpItemCfg& operator=(const EquipExpItemCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipExpItemCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipExpItemCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipExpItemCfg* other);

  // implements Message ----------------------------------------------

  EquipExpItemCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipExpItemCfg& from);
  void MergeFrom(const EquipExpItemCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ItemCfgID = 1;
  inline bool has_itemcfgid() const;
  inline void clear_itemcfgid();
  static const int kItemCfgIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemcfgid() const;
  inline void set_itemcfgid(::google::protobuf::uint32 value);

  // required uint32 EquipExp = 2;
  inline bool has_equipexp() const;
  inline void clear_equipexp();
  static const int kEquipExpFieldNumber = 2;
  inline ::google::protobuf::uint32 equipexp() const;
  inline void set_equipexp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EquipExpItemCfg)
 private:
  inline void set_has_itemcfgid();
  inline void clear_has_itemcfgid();
  inline void set_has_equipexp();
  inline void clear_has_equipexp();

  ::google::protobuf::uint32 itemcfgid_;
  ::google::protobuf::uint32 equipexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EquipExpItemCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EquipExpItemCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EquipExpItemCfg_2eproto();
  friend void protobuf_ShutdownFile_EquipExpItemCfg_2eproto();

  void InitAsDefaultInstance();
  static EquipExpItemCfg* default_instance_;
};
// -------------------------------------------------------------------

class EquipExpItemCfgSet : public ::google::protobuf::MessageLite {
 public:
  EquipExpItemCfgSet();
  virtual ~EquipExpItemCfgSet();

  EquipExpItemCfgSet(const EquipExpItemCfgSet& from);

  inline EquipExpItemCfgSet& operator=(const EquipExpItemCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipExpItemCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipExpItemCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipExpItemCfgSet* other);

  // implements Message ----------------------------------------------

  EquipExpItemCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipExpItemCfgSet& from);
  void MergeFrom(const EquipExpItemCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.EquipExpItemCfg equipexpitemcfg = 1;
  inline int equipexpitemcfg_size() const;
  inline void clear_equipexpitemcfg();
  static const int kEquipexpitemcfgFieldNumber = 1;
  inline const ::com::cfg::vo::EquipExpItemCfg& equipexpitemcfg(int index) const;
  inline ::com::cfg::vo::EquipExpItemCfg* mutable_equipexpitemcfg(int index);
  inline ::com::cfg::vo::EquipExpItemCfg* add_equipexpitemcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipExpItemCfg >&
      equipexpitemcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipExpItemCfg >*
      mutable_equipexpitemcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EquipExpItemCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipExpItemCfg > equipexpitemcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EquipExpItemCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EquipExpItemCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EquipExpItemCfg_2eproto();
  friend void protobuf_ShutdownFile_EquipExpItemCfg_2eproto();

  void InitAsDefaultInstance();
  static EquipExpItemCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipExpItemCfg

// required uint32 ItemCfgID = 1;
inline bool EquipExpItemCfg::has_itemcfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipExpItemCfg::set_has_itemcfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipExpItemCfg::clear_has_itemcfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipExpItemCfg::clear_itemcfgid() {
  itemcfgid_ = 0u;
  clear_has_itemcfgid();
}
inline ::google::protobuf::uint32 EquipExpItemCfg::itemcfgid() const {
  return itemcfgid_;
}
inline void EquipExpItemCfg::set_itemcfgid(::google::protobuf::uint32 value) {
  set_has_itemcfgid();
  itemcfgid_ = value;
}

// required uint32 EquipExp = 2;
inline bool EquipExpItemCfg::has_equipexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipExpItemCfg::set_has_equipexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipExpItemCfg::clear_has_equipexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipExpItemCfg::clear_equipexp() {
  equipexp_ = 0u;
  clear_has_equipexp();
}
inline ::google::protobuf::uint32 EquipExpItemCfg::equipexp() const {
  return equipexp_;
}
inline void EquipExpItemCfg::set_equipexp(::google::protobuf::uint32 value) {
  set_has_equipexp();
  equipexp_ = value;
}

// -------------------------------------------------------------------

// EquipExpItemCfgSet

// repeated .com.cfg.vo.EquipExpItemCfg equipexpitemcfg = 1;
inline int EquipExpItemCfgSet::equipexpitemcfg_size() const {
  return equipexpitemcfg_.size();
}
inline void EquipExpItemCfgSet::clear_equipexpitemcfg() {
  equipexpitemcfg_.Clear();
}
inline const ::com::cfg::vo::EquipExpItemCfg& EquipExpItemCfgSet::equipexpitemcfg(int index) const {
  return equipexpitemcfg_.Get(index);
}
inline ::com::cfg::vo::EquipExpItemCfg* EquipExpItemCfgSet::mutable_equipexpitemcfg(int index) {
  return equipexpitemcfg_.Mutable(index);
}
inline ::com::cfg::vo::EquipExpItemCfg* EquipExpItemCfgSet::add_equipexpitemcfg() {
  return equipexpitemcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipExpItemCfg >&
EquipExpItemCfgSet::equipexpitemcfg() const {
  return equipexpitemcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipExpItemCfg >*
EquipExpItemCfgSet::mutable_equipexpitemcfg() {
  return &equipexpitemcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EquipExpItemCfg_2eproto__INCLUDED
