// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SumConsumeActCfg.proto

#ifndef PROTOBUF_SumConsumeActCfg_2eproto__INCLUDED
#define PROTOBUF_SumConsumeActCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SumConsumeActCfg_2eproto();
void protobuf_AssignDesc_SumConsumeActCfg_2eproto();
void protobuf_ShutdownFile_SumConsumeActCfg_2eproto();

class SumConsumeActCfgElmt;
class SumConsumeActCfg;
class SumConsumeActCfgSet;

// ===================================================================

class SumConsumeActCfgElmt : public ::google::protobuf::MessageLite {
 public:
  SumConsumeActCfgElmt();
  virtual ~SumConsumeActCfgElmt();

  SumConsumeActCfgElmt(const SumConsumeActCfgElmt& from);

  inline SumConsumeActCfgElmt& operator=(const SumConsumeActCfgElmt& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumeActCfgElmt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumeActCfgElmt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumeActCfgElmt* other);

  // implements Message ----------------------------------------------

  SumConsumeActCfgElmt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumeActCfgElmt& from);
  void MergeFrom(const SumConsumeActCfgElmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementType = 1;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementID = 2;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 2;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumConsumeActCfgElmt)
 private:
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumConsumeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumConsumeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumeActCfgElmt* default_instance_;
};
// -------------------------------------------------------------------

class SumConsumeActCfg : public ::google::protobuf::MessageLite {
 public:
  SumConsumeActCfg();
  virtual ~SumConsumeActCfg();

  SumConsumeActCfg(const SumConsumeActCfg& from);

  inline SumConsumeActCfg& operator=(const SumConsumeActCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumeActCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumeActCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumeActCfg* other);

  // implements Message ----------------------------------------------

  SumConsumeActCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumeActCfg& from);
  void MergeFrom(const SumConsumeActCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 TotalConsume = 2;
  inline bool has_totalconsume() const;
  inline void clear_totalconsume();
  static const int kTotalConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 totalconsume() const;
  inline void set_totalconsume(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.SumConsumeActCfgElmt ElmtLst = 3;
  inline int elmtlst_size() const;
  inline void clear_elmtlst();
  static const int kElmtLstFieldNumber = 3;
  inline const ::com::cfg::vo::SumConsumeActCfgElmt& elmtlst(int index) const;
  inline ::com::cfg::vo::SumConsumeActCfgElmt* mutable_elmtlst(int index);
  inline ::com::cfg::vo::SumConsumeActCfgElmt* add_elmtlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfgElmt >&
      elmtlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfgElmt >*
      mutable_elmtlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumConsumeActCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_totalconsume();
  inline void clear_has_totalconsume();

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 totalconsume_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfgElmt > elmtlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumConsumeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumConsumeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumeActCfg* default_instance_;
};
// -------------------------------------------------------------------

class SumConsumeActCfgSet : public ::google::protobuf::MessageLite {
 public:
  SumConsumeActCfgSet();
  virtual ~SumConsumeActCfgSet();

  SumConsumeActCfgSet(const SumConsumeActCfgSet& from);

  inline SumConsumeActCfgSet& operator=(const SumConsumeActCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumConsumeActCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumConsumeActCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumConsumeActCfgSet* other);

  // implements Message ----------------------------------------------

  SumConsumeActCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumConsumeActCfgSet& from);
  void MergeFrom(const SumConsumeActCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.SumConsumeActCfg sumConsumeActCfg = 1;
  inline int sumconsumeactcfg_size() const;
  inline void clear_sumconsumeactcfg();
  static const int kSumConsumeActCfgFieldNumber = 1;
  inline const ::com::cfg::vo::SumConsumeActCfg& sumconsumeactcfg(int index) const;
  inline ::com::cfg::vo::SumConsumeActCfg* mutable_sumconsumeactcfg(int index);
  inline ::com::cfg::vo::SumConsumeActCfg* add_sumconsumeactcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfg >&
      sumconsumeactcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfg >*
      mutable_sumconsumeactcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumConsumeActCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfg > sumconsumeactcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumConsumeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumConsumeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumConsumeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumConsumeActCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// SumConsumeActCfgElmt

// required uint32 ElementType = 1;
inline bool SumConsumeActCfgElmt::has_elementtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumConsumeActCfgElmt::set_has_elementtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumConsumeActCfgElmt::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumConsumeActCfgElmt::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 SumConsumeActCfgElmt::elementtype() const {
  return elementtype_;
}
inline void SumConsumeActCfgElmt::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementID = 2;
inline bool SumConsumeActCfgElmt::has_elementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumConsumeActCfgElmt::set_has_elementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumConsumeActCfgElmt::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumConsumeActCfgElmt::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 SumConsumeActCfgElmt::elementid() const {
  return elementid_;
}
inline void SumConsumeActCfgElmt::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementCnt = 3;
inline bool SumConsumeActCfgElmt::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SumConsumeActCfgElmt::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SumConsumeActCfgElmt::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SumConsumeActCfgElmt::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 SumConsumeActCfgElmt::elementcnt() const {
  return elementcnt_;
}
inline void SumConsumeActCfgElmt::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// SumConsumeActCfg

// required uint32 Level = 1;
inline bool SumConsumeActCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumConsumeActCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumConsumeActCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumConsumeActCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SumConsumeActCfg::level() const {
  return level_;
}
inline void SumConsumeActCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 TotalConsume = 2;
inline bool SumConsumeActCfg::has_totalconsume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumConsumeActCfg::set_has_totalconsume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumConsumeActCfg::clear_has_totalconsume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumConsumeActCfg::clear_totalconsume() {
  totalconsume_ = 0u;
  clear_has_totalconsume();
}
inline ::google::protobuf::uint32 SumConsumeActCfg::totalconsume() const {
  return totalconsume_;
}
inline void SumConsumeActCfg::set_totalconsume(::google::protobuf::uint32 value) {
  set_has_totalconsume();
  totalconsume_ = value;
}

// repeated .com.cfg.vo.SumConsumeActCfgElmt ElmtLst = 3;
inline int SumConsumeActCfg::elmtlst_size() const {
  return elmtlst_.size();
}
inline void SumConsumeActCfg::clear_elmtlst() {
  elmtlst_.Clear();
}
inline const ::com::cfg::vo::SumConsumeActCfgElmt& SumConsumeActCfg::elmtlst(int index) const {
  return elmtlst_.Get(index);
}
inline ::com::cfg::vo::SumConsumeActCfgElmt* SumConsumeActCfg::mutable_elmtlst(int index) {
  return elmtlst_.Mutable(index);
}
inline ::com::cfg::vo::SumConsumeActCfgElmt* SumConsumeActCfg::add_elmtlst() {
  return elmtlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfgElmt >&
SumConsumeActCfg::elmtlst() const {
  return elmtlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfgElmt >*
SumConsumeActCfg::mutable_elmtlst() {
  return &elmtlst_;
}

// -------------------------------------------------------------------

// SumConsumeActCfgSet

// repeated .com.cfg.vo.SumConsumeActCfg sumConsumeActCfg = 1;
inline int SumConsumeActCfgSet::sumconsumeactcfg_size() const {
  return sumconsumeactcfg_.size();
}
inline void SumConsumeActCfgSet::clear_sumconsumeactcfg() {
  sumconsumeactcfg_.Clear();
}
inline const ::com::cfg::vo::SumConsumeActCfg& SumConsumeActCfgSet::sumconsumeactcfg(int index) const {
  return sumconsumeactcfg_.Get(index);
}
inline ::com::cfg::vo::SumConsumeActCfg* SumConsumeActCfgSet::mutable_sumconsumeactcfg(int index) {
  return sumconsumeactcfg_.Mutable(index);
}
inline ::com::cfg::vo::SumConsumeActCfg* SumConsumeActCfgSet::add_sumconsumeactcfg() {
  return sumconsumeactcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfg >&
SumConsumeActCfgSet::sumconsumeactcfg() const {
  return sumconsumeactcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumConsumeActCfg >*
SumConsumeActCfgSet::mutable_sumconsumeactcfg() {
  return &sumconsumeactcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SumConsumeActCfg_2eproto__INCLUDED
