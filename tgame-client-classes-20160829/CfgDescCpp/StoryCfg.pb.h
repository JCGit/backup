// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoryCfg.proto

#ifndef PROTOBUF_StoryCfg_2eproto__INCLUDED
#define PROTOBUF_StoryCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_StoryCfg_2eproto();
void protobuf_AssignDesc_StoryCfg_2eproto();
void protobuf_ShutdownFile_StoryCfg_2eproto();

class StoryDialog;
class StoryCfg;
class StoryCfgSet;

// ===================================================================

class StoryDialog : public ::google::protobuf::MessageLite {
 public:
  StoryDialog();
  virtual ~StoryDialog();

  StoryDialog(const StoryDialog& from);

  inline StoryDialog& operator=(const StoryDialog& from) {
    CopyFrom(from);
    return *this;
  }

  static const StoryDialog& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StoryDialog* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StoryDialog* other);

  // implements Message ----------------------------------------------

  StoryDialog* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StoryDialog& from);
  void MergeFrom(const StoryDialog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 RoleType = 1;
  inline bool has_roletype() const;
  inline void clear_roletype();
  static const int kRoleTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 roletype() const;
  inline void set_roletype(::google::protobuf::uint32 value);

  // required uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // required string Words = 3;
  inline bool has_words() const;
  inline void clear_words();
  static const int kWordsFieldNumber = 3;
  inline const ::std::string& words() const;
  inline void set_words(const ::std::string& value);
  inline void set_words(const char* value);
  inline void set_words(const char* value, size_t size);
  inline ::std::string* mutable_words();
  inline ::std::string* release_words();
  inline void set_allocated_words(::std::string* words);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.StoryDialog)
 private:
  inline void set_has_roletype();
  inline void clear_has_roletype();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_words();
  inline void clear_has_words();

  ::google::protobuf::uint32 roletype_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* words_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_StoryCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_StoryCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_StoryCfg_2eproto();
  friend void protobuf_ShutdownFile_StoryCfg_2eproto();

  void InitAsDefaultInstance();
  static StoryDialog* default_instance_;
};
// -------------------------------------------------------------------

class StoryCfg : public ::google::protobuf::MessageLite {
 public:
  StoryCfg();
  virtual ~StoryCfg();

  StoryCfg(const StoryCfg& from);

  inline StoryCfg& operator=(const StoryCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const StoryCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StoryCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StoryCfg* other);

  // implements Message ----------------------------------------------

  StoryCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StoryCfg& from);
  void MergeFrom(const StoryCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StoryID = 1;
  inline bool has_storyid() const;
  inline void clear_storyid();
  static const int kStoryIDFieldNumber = 1;
  inline ::google::protobuf::uint32 storyid() const;
  inline void set_storyid(::google::protobuf::uint32 value);

  // required uint32 StoryType = 2;
  inline bool has_storytype() const;
  inline void clear_storytype();
  static const int kStoryTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 storytype() const;
  inline void set_storytype(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.StoryDialog StoryDialogs = 3;
  inline int storydialogs_size() const;
  inline void clear_storydialogs();
  static const int kStoryDialogsFieldNumber = 3;
  inline const ::com::cfg::vo::StoryDialog& storydialogs(int index) const;
  inline ::com::cfg::vo::StoryDialog* mutable_storydialogs(int index);
  inline ::com::cfg::vo::StoryDialog* add_storydialogs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryDialog >&
      storydialogs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryDialog >*
      mutable_storydialogs();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.StoryCfg)
 private:
  inline void set_has_storyid();
  inline void clear_has_storyid();
  inline void set_has_storytype();
  inline void clear_has_storytype();

  ::google::protobuf::uint32 storyid_;
  ::google::protobuf::uint32 storytype_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryDialog > storydialogs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_StoryCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_StoryCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_StoryCfg_2eproto();
  friend void protobuf_ShutdownFile_StoryCfg_2eproto();

  void InitAsDefaultInstance();
  static StoryCfg* default_instance_;
};
// -------------------------------------------------------------------

class StoryCfgSet : public ::google::protobuf::MessageLite {
 public:
  StoryCfgSet();
  virtual ~StoryCfgSet();

  StoryCfgSet(const StoryCfgSet& from);

  inline StoryCfgSet& operator=(const StoryCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const StoryCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StoryCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StoryCfgSet* other);

  // implements Message ----------------------------------------------

  StoryCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StoryCfgSet& from);
  void MergeFrom(const StoryCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.StoryCfg storycfg = 1;
  inline int storycfg_size() const;
  inline void clear_storycfg();
  static const int kStorycfgFieldNumber = 1;
  inline const ::com::cfg::vo::StoryCfg& storycfg(int index) const;
  inline ::com::cfg::vo::StoryCfg* mutable_storycfg(int index);
  inline ::com::cfg::vo::StoryCfg* add_storycfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryCfg >&
      storycfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryCfg >*
      mutable_storycfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.StoryCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryCfg > storycfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_StoryCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_StoryCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_StoryCfg_2eproto();
  friend void protobuf_ShutdownFile_StoryCfg_2eproto();

  void InitAsDefaultInstance();
  static StoryCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// StoryDialog

// required uint32 RoleType = 1;
inline bool StoryDialog::has_roletype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoryDialog::set_has_roletype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoryDialog::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoryDialog::clear_roletype() {
  roletype_ = 0u;
  clear_has_roletype();
}
inline ::google::protobuf::uint32 StoryDialog::roletype() const {
  return roletype_;
}
inline void StoryDialog::set_roletype(::google::protobuf::uint32 value) {
  set_has_roletype();
  roletype_ = value;
}

// required uint32 RoleID = 2;
inline bool StoryDialog::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoryDialog::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoryDialog::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoryDialog::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 StoryDialog::roleid() const {
  return roleid_;
}
inline void StoryDialog::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string Words = 3;
inline bool StoryDialog::has_words() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoryDialog::set_has_words() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoryDialog::clear_has_words() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoryDialog::clear_words() {
  if (words_ != &::google::protobuf::internal::kEmptyString) {
    words_->clear();
  }
  clear_has_words();
}
inline const ::std::string& StoryDialog::words() const {
  return *words_;
}
inline void StoryDialog::set_words(const ::std::string& value) {
  set_has_words();
  if (words_ == &::google::protobuf::internal::kEmptyString) {
    words_ = new ::std::string;
  }
  words_->assign(value);
}
inline void StoryDialog::set_words(const char* value) {
  set_has_words();
  if (words_ == &::google::protobuf::internal::kEmptyString) {
    words_ = new ::std::string;
  }
  words_->assign(value);
}
inline void StoryDialog::set_words(const char* value, size_t size) {
  set_has_words();
  if (words_ == &::google::protobuf::internal::kEmptyString) {
    words_ = new ::std::string;
  }
  words_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoryDialog::mutable_words() {
  set_has_words();
  if (words_ == &::google::protobuf::internal::kEmptyString) {
    words_ = new ::std::string;
  }
  return words_;
}
inline ::std::string* StoryDialog::release_words() {
  clear_has_words();
  if (words_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = words_;
    words_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StoryDialog::set_allocated_words(::std::string* words) {
  if (words_ != &::google::protobuf::internal::kEmptyString) {
    delete words_;
  }
  if (words) {
    set_has_words();
    words_ = words;
  } else {
    clear_has_words();
    words_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StoryCfg

// required uint32 StoryID = 1;
inline bool StoryCfg::has_storyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoryCfg::set_has_storyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoryCfg::clear_has_storyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoryCfg::clear_storyid() {
  storyid_ = 0u;
  clear_has_storyid();
}
inline ::google::protobuf::uint32 StoryCfg::storyid() const {
  return storyid_;
}
inline void StoryCfg::set_storyid(::google::protobuf::uint32 value) {
  set_has_storyid();
  storyid_ = value;
}

// required uint32 StoryType = 2;
inline bool StoryCfg::has_storytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoryCfg::set_has_storytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoryCfg::clear_has_storytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoryCfg::clear_storytype() {
  storytype_ = 0u;
  clear_has_storytype();
}
inline ::google::protobuf::uint32 StoryCfg::storytype() const {
  return storytype_;
}
inline void StoryCfg::set_storytype(::google::protobuf::uint32 value) {
  set_has_storytype();
  storytype_ = value;
}

// repeated .com.cfg.vo.StoryDialog StoryDialogs = 3;
inline int StoryCfg::storydialogs_size() const {
  return storydialogs_.size();
}
inline void StoryCfg::clear_storydialogs() {
  storydialogs_.Clear();
}
inline const ::com::cfg::vo::StoryDialog& StoryCfg::storydialogs(int index) const {
  return storydialogs_.Get(index);
}
inline ::com::cfg::vo::StoryDialog* StoryCfg::mutable_storydialogs(int index) {
  return storydialogs_.Mutable(index);
}
inline ::com::cfg::vo::StoryDialog* StoryCfg::add_storydialogs() {
  return storydialogs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryDialog >&
StoryCfg::storydialogs() const {
  return storydialogs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryDialog >*
StoryCfg::mutable_storydialogs() {
  return &storydialogs_;
}

// -------------------------------------------------------------------

// StoryCfgSet

// repeated .com.cfg.vo.StoryCfg storycfg = 1;
inline int StoryCfgSet::storycfg_size() const {
  return storycfg_.size();
}
inline void StoryCfgSet::clear_storycfg() {
  storycfg_.Clear();
}
inline const ::com::cfg::vo::StoryCfg& StoryCfgSet::storycfg(int index) const {
  return storycfg_.Get(index);
}
inline ::com::cfg::vo::StoryCfg* StoryCfgSet::mutable_storycfg(int index) {
  return storycfg_.Mutable(index);
}
inline ::com::cfg::vo::StoryCfg* StoryCfgSet::add_storycfg() {
  return storycfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryCfg >&
StoryCfgSet::storycfg() const {
  return storycfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::StoryCfg >*
StoryCfgSet::mutable_storycfg() {
  return &storycfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StoryCfg_2eproto__INCLUDED
