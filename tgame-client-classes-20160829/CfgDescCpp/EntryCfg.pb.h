// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EntryCfg.proto

#ifndef PROTOBUF_EntryCfg_2eproto__INCLUDED
#define PROTOBUF_EntryCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EntryCfg_2eproto();
void protobuf_AssignDesc_EntryCfg_2eproto();
void protobuf_ShutdownFile_EntryCfg_2eproto();

class EntryCfg;
class EntryCfgSet;

// ===================================================================

class EntryCfg : public ::google::protobuf::MessageLite {
 public:
  EntryCfg();
  virtual ~EntryCfg();

  EntryCfg(const EntryCfg& from);

  inline EntryCfg& operator=(const EntryCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const EntryCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EntryCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EntryCfg* other);

  // implements Message ----------------------------------------------

  EntryCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EntryCfg& from);
  void MergeFrom(const EntryCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 EntryID = 1;
  inline bool has_entryid() const;
  inline void clear_entryid();
  static const int kEntryIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entryid() const;
  inline void set_entryid(::google::protobuf::uint32 value);

  // required string EntryName = 2;
  inline bool has_entryname() const;
  inline void clear_entryname();
  static const int kEntryNameFieldNumber = 2;
  inline const ::std::string& entryname() const;
  inline void set_entryname(const ::std::string& value);
  inline void set_entryname(const char* value);
  inline void set_entryname(const char* value, size_t size);
  inline ::std::string* mutable_entryname();
  inline ::std::string* release_entryname();
  inline void set_allocated_entryname(::std::string* entryname);

  // required string EntryIcon = 3;
  inline bool has_entryicon() const;
  inline void clear_entryicon();
  static const int kEntryIconFieldNumber = 3;
  inline const ::std::string& entryicon() const;
  inline void set_entryicon(const ::std::string& value);
  inline void set_entryicon(const char* value);
  inline void set_entryicon(const char* value, size_t size);
  inline ::std::string* mutable_entryicon();
  inline ::std::string* release_entryicon();
  inline void set_allocated_entryicon(::std::string* entryicon);

  // required uint32 Locked = 4;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 4;
  inline ::google::protobuf::uint32 locked() const;
  inline void set_locked(::google::protobuf::uint32 value);

  // required uint32 NeedLevel = 5;
  inline bool has_needlevel() const;
  inline void clear_needlevel();
  static const int kNeedLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 needlevel() const;
  inline void set_needlevel(::google::protobuf::uint32 value);

  // repeated uint32 ChildEntryID = 6;
  inline int childentryid_size() const;
  inline void clear_childentryid();
  static const int kChildEntryIDFieldNumber = 6;
  inline ::google::protobuf::uint32 childentryid(int index) const;
  inline void set_childentryid(int index, ::google::protobuf::uint32 value);
  inline void add_childentryid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      childentryid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_childentryid();

  // repeated uint32 ModuleID = 7;
  inline int moduleid_size() const;
  inline void clear_moduleid();
  static const int kModuleIDFieldNumber = 7;
  inline ::google::protobuf::uint32 moduleid(int index) const;
  inline void set_moduleid(int index, ::google::protobuf::uint32 value);
  inline void add_moduleid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      moduleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_moduleid();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EntryCfg)
 private:
  inline void set_has_entryid();
  inline void clear_has_entryid();
  inline void set_has_entryname();
  inline void clear_has_entryname();
  inline void set_has_entryicon();
  inline void clear_has_entryicon();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_needlevel();
  inline void clear_has_needlevel();

  ::std::string* entryname_;
  ::google::protobuf::uint32 entryid_;
  ::google::protobuf::uint32 locked_;
  ::std::string* entryicon_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > childentryid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > moduleid_;
  ::google::protobuf::uint32 needlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EntryCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EntryCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EntryCfg_2eproto();
  friend void protobuf_ShutdownFile_EntryCfg_2eproto();

  void InitAsDefaultInstance();
  static EntryCfg* default_instance_;
};
// -------------------------------------------------------------------

class EntryCfgSet : public ::google::protobuf::MessageLite {
 public:
  EntryCfgSet();
  virtual ~EntryCfgSet();

  EntryCfgSet(const EntryCfgSet& from);

  inline EntryCfgSet& operator=(const EntryCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const EntryCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EntryCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EntryCfgSet* other);

  // implements Message ----------------------------------------------

  EntryCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EntryCfgSet& from);
  void MergeFrom(const EntryCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.EntryCfg entrycfg = 1;
  inline int entrycfg_size() const;
  inline void clear_entrycfg();
  static const int kEntrycfgFieldNumber = 1;
  inline const ::com::cfg::vo::EntryCfg& entrycfg(int index) const;
  inline ::com::cfg::vo::EntryCfg* mutable_entrycfg(int index);
  inline ::com::cfg::vo::EntryCfg* add_entrycfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EntryCfg >&
      entrycfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EntryCfg >*
      mutable_entrycfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EntryCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EntryCfg > entrycfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EntryCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EntryCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EntryCfg_2eproto();
  friend void protobuf_ShutdownFile_EntryCfg_2eproto();

  void InitAsDefaultInstance();
  static EntryCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// EntryCfg

// required uint32 EntryID = 1;
inline bool EntryCfg::has_entryid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntryCfg::set_has_entryid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntryCfg::clear_has_entryid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntryCfg::clear_entryid() {
  entryid_ = 0u;
  clear_has_entryid();
}
inline ::google::protobuf::uint32 EntryCfg::entryid() const {
  return entryid_;
}
inline void EntryCfg::set_entryid(::google::protobuf::uint32 value) {
  set_has_entryid();
  entryid_ = value;
}

// required string EntryName = 2;
inline bool EntryCfg::has_entryname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntryCfg::set_has_entryname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntryCfg::clear_has_entryname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntryCfg::clear_entryname() {
  if (entryname_ != &::google::protobuf::internal::kEmptyString) {
    entryname_->clear();
  }
  clear_has_entryname();
}
inline const ::std::string& EntryCfg::entryname() const {
  return *entryname_;
}
inline void EntryCfg::set_entryname(const ::std::string& value) {
  set_has_entryname();
  if (entryname_ == &::google::protobuf::internal::kEmptyString) {
    entryname_ = new ::std::string;
  }
  entryname_->assign(value);
}
inline void EntryCfg::set_entryname(const char* value) {
  set_has_entryname();
  if (entryname_ == &::google::protobuf::internal::kEmptyString) {
    entryname_ = new ::std::string;
  }
  entryname_->assign(value);
}
inline void EntryCfg::set_entryname(const char* value, size_t size) {
  set_has_entryname();
  if (entryname_ == &::google::protobuf::internal::kEmptyString) {
    entryname_ = new ::std::string;
  }
  entryname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EntryCfg::mutable_entryname() {
  set_has_entryname();
  if (entryname_ == &::google::protobuf::internal::kEmptyString) {
    entryname_ = new ::std::string;
  }
  return entryname_;
}
inline ::std::string* EntryCfg::release_entryname() {
  clear_has_entryname();
  if (entryname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = entryname_;
    entryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EntryCfg::set_allocated_entryname(::std::string* entryname) {
  if (entryname_ != &::google::protobuf::internal::kEmptyString) {
    delete entryname_;
  }
  if (entryname) {
    set_has_entryname();
    entryname_ = entryname;
  } else {
    clear_has_entryname();
    entryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string EntryIcon = 3;
inline bool EntryCfg::has_entryicon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EntryCfg::set_has_entryicon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EntryCfg::clear_has_entryicon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EntryCfg::clear_entryicon() {
  if (entryicon_ != &::google::protobuf::internal::kEmptyString) {
    entryicon_->clear();
  }
  clear_has_entryicon();
}
inline const ::std::string& EntryCfg::entryicon() const {
  return *entryicon_;
}
inline void EntryCfg::set_entryicon(const ::std::string& value) {
  set_has_entryicon();
  if (entryicon_ == &::google::protobuf::internal::kEmptyString) {
    entryicon_ = new ::std::string;
  }
  entryicon_->assign(value);
}
inline void EntryCfg::set_entryicon(const char* value) {
  set_has_entryicon();
  if (entryicon_ == &::google::protobuf::internal::kEmptyString) {
    entryicon_ = new ::std::string;
  }
  entryicon_->assign(value);
}
inline void EntryCfg::set_entryicon(const char* value, size_t size) {
  set_has_entryicon();
  if (entryicon_ == &::google::protobuf::internal::kEmptyString) {
    entryicon_ = new ::std::string;
  }
  entryicon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EntryCfg::mutable_entryicon() {
  set_has_entryicon();
  if (entryicon_ == &::google::protobuf::internal::kEmptyString) {
    entryicon_ = new ::std::string;
  }
  return entryicon_;
}
inline ::std::string* EntryCfg::release_entryicon() {
  clear_has_entryicon();
  if (entryicon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = entryicon_;
    entryicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EntryCfg::set_allocated_entryicon(::std::string* entryicon) {
  if (entryicon_ != &::google::protobuf::internal::kEmptyString) {
    delete entryicon_;
  }
  if (entryicon) {
    set_has_entryicon();
    entryicon_ = entryicon;
  } else {
    clear_has_entryicon();
    entryicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 Locked = 4;
inline bool EntryCfg::has_locked() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EntryCfg::set_has_locked() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EntryCfg::clear_has_locked() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EntryCfg::clear_locked() {
  locked_ = 0u;
  clear_has_locked();
}
inline ::google::protobuf::uint32 EntryCfg::locked() const {
  return locked_;
}
inline void EntryCfg::set_locked(::google::protobuf::uint32 value) {
  set_has_locked();
  locked_ = value;
}

// required uint32 NeedLevel = 5;
inline bool EntryCfg::has_needlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EntryCfg::set_has_needlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EntryCfg::clear_has_needlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EntryCfg::clear_needlevel() {
  needlevel_ = 0u;
  clear_has_needlevel();
}
inline ::google::protobuf::uint32 EntryCfg::needlevel() const {
  return needlevel_;
}
inline void EntryCfg::set_needlevel(::google::protobuf::uint32 value) {
  set_has_needlevel();
  needlevel_ = value;
}

// repeated uint32 ChildEntryID = 6;
inline int EntryCfg::childentryid_size() const {
  return childentryid_.size();
}
inline void EntryCfg::clear_childentryid() {
  childentryid_.Clear();
}
inline ::google::protobuf::uint32 EntryCfg::childentryid(int index) const {
  return childentryid_.Get(index);
}
inline void EntryCfg::set_childentryid(int index, ::google::protobuf::uint32 value) {
  childentryid_.Set(index, value);
}
inline void EntryCfg::add_childentryid(::google::protobuf::uint32 value) {
  childentryid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EntryCfg::childentryid() const {
  return childentryid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EntryCfg::mutable_childentryid() {
  return &childentryid_;
}

// repeated uint32 ModuleID = 7;
inline int EntryCfg::moduleid_size() const {
  return moduleid_.size();
}
inline void EntryCfg::clear_moduleid() {
  moduleid_.Clear();
}
inline ::google::protobuf::uint32 EntryCfg::moduleid(int index) const {
  return moduleid_.Get(index);
}
inline void EntryCfg::set_moduleid(int index, ::google::protobuf::uint32 value) {
  moduleid_.Set(index, value);
}
inline void EntryCfg::add_moduleid(::google::protobuf::uint32 value) {
  moduleid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EntryCfg::moduleid() const {
  return moduleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EntryCfg::mutable_moduleid() {
  return &moduleid_;
}

// -------------------------------------------------------------------

// EntryCfgSet

// repeated .com.cfg.vo.EntryCfg entrycfg = 1;
inline int EntryCfgSet::entrycfg_size() const {
  return entrycfg_.size();
}
inline void EntryCfgSet::clear_entrycfg() {
  entrycfg_.Clear();
}
inline const ::com::cfg::vo::EntryCfg& EntryCfgSet::entrycfg(int index) const {
  return entrycfg_.Get(index);
}
inline ::com::cfg::vo::EntryCfg* EntryCfgSet::mutable_entrycfg(int index) {
  return entrycfg_.Mutable(index);
}
inline ::com::cfg::vo::EntryCfg* EntryCfgSet::add_entrycfg() {
  return entrycfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EntryCfg >&
EntryCfgSet::entrycfg() const {
  return entrycfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EntryCfg >*
EntryCfgSet::mutable_entrycfg() {
  return &entrycfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EntryCfg_2eproto__INCLUDED
