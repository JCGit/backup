// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArenaRandHeroCfg.proto

#ifndef PROTOBUF_ArenaRandHeroCfg_2eproto__INCLUDED
#define PROTOBUF_ArenaRandHeroCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ArenaRandHeroCfg_2eproto();
void protobuf_AssignDesc_ArenaRandHeroCfg_2eproto();
void protobuf_ShutdownFile_ArenaRandHeroCfg_2eproto();

class ArenaRandHeroCfg;
class ArenaRandHeroCfgSet;

// ===================================================================

class ArenaRandHeroCfg : public ::google::protobuf::MessageLite {
 public:
  ArenaRandHeroCfg();
  virtual ~ArenaRandHeroCfg();

  ArenaRandHeroCfg(const ArenaRandHeroCfg& from);

  inline ArenaRandHeroCfg& operator=(const ArenaRandHeroCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaRandHeroCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaRandHeroCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaRandHeroCfg* other);

  // implements Message ----------------------------------------------

  ArenaRandHeroCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaRandHeroCfg& from);
  void MergeFrom(const ArenaRandHeroCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 HP = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 MP = 2;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 2;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // required uint32 DEF = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDEFFieldNumber = 3;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);

  // required uint32 ATK = 4;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kATKFieldNumber = 4;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);

  // required uint32 DEFType = 5;
  inline bool has_deftype() const;
  inline void clear_deftype();
  static const int kDEFTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 deftype() const;
  inline void set_deftype(::google::protobuf::uint32 value);

  // required uint32 ATKType = 6;
  inline bool has_atktype() const;
  inline void clear_atktype();
  static const int kATKTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 atktype() const;
  inline void set_atktype(::google::protobuf::uint32 value);

  // required uint32 MoveSpeed = 7;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 7;
  inline ::google::protobuf::uint32 movespeed() const;
  inline void set_movespeed(::google::protobuf::uint32 value);

  // required uint32 BackSpeed = 8;
  inline bool has_backspeed() const;
  inline void clear_backspeed();
  static const int kBackSpeedFieldNumber = 8;
  inline ::google::protobuf::uint32 backspeed() const;
  inline void set_backspeed(::google::protobuf::uint32 value);

  // required uint64 FightPower = 9;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightPowerFieldNumber = 9;
  inline ::google::protobuf::uint64 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint64 value);

  // required uint32 ShowID = 10;
  inline bool has_showid() const;
  inline void clear_showid();
  static const int kShowIDFieldNumber = 10;
  inline ::google::protobuf::uint32 showid() const;
  inline void set_showid(::google::protobuf::uint32 value);

  // required uint32 DodgeDist = 11;
  inline bool has_dodgedist() const;
  inline void clear_dodgedist();
  static const int kDodgeDistFieldNumber = 11;
  inline ::google::protobuf::uint32 dodgedist() const;
  inline void set_dodgedist(::google::protobuf::uint32 value);

  // required uint32 DodgeCD = 12;
  inline bool has_dodgecd() const;
  inline void clear_dodgecd();
  static const int kDodgeCDFieldNumber = 12;
  inline ::google::protobuf::uint32 dodgecd() const;
  inline void set_dodgecd(::google::protobuf::uint32 value);

  // required uint32 AtkSpeed = 13;
  inline bool has_atkspeed() const;
  inline void clear_atkspeed();
  static const int kAtkSpeedFieldNumber = 13;
  inline ::google::protobuf::uint32 atkspeed() const;
  inline void set_atkspeed(::google::protobuf::uint32 value);

  // required uint32 EvolutionSkillID = 14;
  inline bool has_evolutionskillid() const;
  inline void clear_evolutionskillid();
  static const int kEvolutionSkillIDFieldNumber = 14;
  inline ::google::protobuf::uint32 evolutionskillid() const;
  inline void set_evolutionskillid(::google::protobuf::uint32 value);

  // required uint32 Level = 15;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 Hit = 16;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 16;
  inline ::google::protobuf::uint32 hit() const;
  inline void set_hit(::google::protobuf::uint32 value);

  // required uint32 HitWithoutInitVal = 17;
  inline bool has_hitwithoutinitval() const;
  inline void clear_hitwithoutinitval();
  static const int kHitWithoutInitValFieldNumber = 17;
  inline ::google::protobuf::uint32 hitwithoutinitval() const;
  inline void set_hitwithoutinitval(::google::protobuf::uint32 value);

  // required uint32 WeaponCfgID = 18;
  inline bool has_weaponcfgid() const;
  inline void clear_weaponcfgid();
  static const int kWeaponCfgIDFieldNumber = 18;
  inline ::google::protobuf::uint32 weaponcfgid() const;
  inline void set_weaponcfgid(::google::protobuf::uint32 value);

  // required uint32 WeaponLevel = 19;
  inline bool has_weaponlevel() const;
  inline void clear_weaponlevel();
  static const int kWeaponLevelFieldNumber = 19;
  inline ::google::protobuf::uint32 weaponlevel() const;
  inline void set_weaponlevel(::google::protobuf::uint32 value);

  // required uint32 WeaponQuality = 20;
  inline bool has_weaponquality() const;
  inline void clear_weaponquality();
  static const int kWeaponQualityFieldNumber = 20;
  inline ::google::protobuf::uint32 weaponquality() const;
  inline void set_weaponquality(::google::protobuf::uint32 value);

  // required uint32 Score = 21;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 21;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaRandHeroCfg)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_deftype();
  inline void clear_has_deftype();
  inline void set_has_atktype();
  inline void clear_has_atktype();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_backspeed();
  inline void clear_has_backspeed();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_showid();
  inline void clear_has_showid();
  inline void set_has_dodgedist();
  inline void clear_has_dodgedist();
  inline void set_has_dodgecd();
  inline void clear_has_dodgecd();
  inline void set_has_atkspeed();
  inline void clear_has_atkspeed();
  inline void set_has_evolutionskillid();
  inline void clear_has_evolutionskillid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_hitwithoutinitval();
  inline void clear_has_hitwithoutinitval();
  inline void set_has_weaponcfgid();
  inline void clear_has_weaponcfgid();
  inline void set_has_weaponlevel();
  inline void clear_has_weaponlevel();
  inline void set_has_weaponquality();
  inline void clear_has_weaponquality();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 deftype_;
  ::google::protobuf::uint32 atktype_;
  ::google::protobuf::uint32 movespeed_;
  ::google::protobuf::uint32 backspeed_;
  ::google::protobuf::uint64 fightpower_;
  ::google::protobuf::uint32 showid_;
  ::google::protobuf::uint32 dodgedist_;
  ::google::protobuf::uint32 dodgecd_;
  ::google::protobuf::uint32 atkspeed_;
  ::google::protobuf::uint32 evolutionskillid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 hitwithoutinitval_;
  ::google::protobuf::uint32 weaponcfgid_;
  ::google::protobuf::uint32 weaponlevel_;
  ::google::protobuf::uint32 weaponquality_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaRandHeroCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaRandHeroCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaRandHeroCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaRandHeroCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaRandHeroCfg* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRandHeroCfgSet : public ::google::protobuf::MessageLite {
 public:
  ArenaRandHeroCfgSet();
  virtual ~ArenaRandHeroCfgSet();

  ArenaRandHeroCfgSet(const ArenaRandHeroCfgSet& from);

  inline ArenaRandHeroCfgSet& operator=(const ArenaRandHeroCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaRandHeroCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaRandHeroCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaRandHeroCfgSet* other);

  // implements Message ----------------------------------------------

  ArenaRandHeroCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaRandHeroCfgSet& from);
  void MergeFrom(const ArenaRandHeroCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.ArenaRandHeroCfg arenaRandHeroCfg = 1;
  inline int arenarandherocfg_size() const;
  inline void clear_arenarandherocfg();
  static const int kArenaRandHeroCfgFieldNumber = 1;
  inline const ::com::cfg::vo::ArenaRandHeroCfg& arenarandherocfg(int index) const;
  inline ::com::cfg::vo::ArenaRandHeroCfg* mutable_arenarandherocfg(int index);
  inline ::com::cfg::vo::ArenaRandHeroCfg* add_arenarandherocfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaRandHeroCfg >&
      arenarandherocfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaRandHeroCfg >*
      mutable_arenarandherocfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaRandHeroCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaRandHeroCfg > arenarandherocfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaRandHeroCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaRandHeroCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaRandHeroCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaRandHeroCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaRandHeroCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ArenaRandHeroCfg

// required uint32 HP = 1;
inline bool ArenaRandHeroCfg::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaRandHeroCfg::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaRandHeroCfg::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaRandHeroCfg::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::hp() const {
  return hp_;
}
inline void ArenaRandHeroCfg::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 MP = 2;
inline bool ArenaRandHeroCfg::has_mp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaRandHeroCfg::set_has_mp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaRandHeroCfg::clear_has_mp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaRandHeroCfg::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::mp() const {
  return mp_;
}
inline void ArenaRandHeroCfg::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
}

// required uint32 DEF = 3;
inline bool ArenaRandHeroCfg::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaRandHeroCfg::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaRandHeroCfg::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaRandHeroCfg::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::def() const {
  return def_;
}
inline void ArenaRandHeroCfg::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 ATK = 4;
inline bool ArenaRandHeroCfg::has_atk() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaRandHeroCfg::set_has_atk() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaRandHeroCfg::clear_has_atk() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaRandHeroCfg::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::atk() const {
  return atk_;
}
inline void ArenaRandHeroCfg::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
}

// required uint32 DEFType = 5;
inline bool ArenaRandHeroCfg::has_deftype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaRandHeroCfg::set_has_deftype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaRandHeroCfg::clear_has_deftype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaRandHeroCfg::clear_deftype() {
  deftype_ = 0u;
  clear_has_deftype();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::deftype() const {
  return deftype_;
}
inline void ArenaRandHeroCfg::set_deftype(::google::protobuf::uint32 value) {
  set_has_deftype();
  deftype_ = value;
}

// required uint32 ATKType = 6;
inline bool ArenaRandHeroCfg::has_atktype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaRandHeroCfg::set_has_atktype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaRandHeroCfg::clear_has_atktype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaRandHeroCfg::clear_atktype() {
  atktype_ = 0u;
  clear_has_atktype();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::atktype() const {
  return atktype_;
}
inline void ArenaRandHeroCfg::set_atktype(::google::protobuf::uint32 value) {
  set_has_atktype();
  atktype_ = value;
}

// required uint32 MoveSpeed = 7;
inline bool ArenaRandHeroCfg::has_movespeed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ArenaRandHeroCfg::set_has_movespeed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ArenaRandHeroCfg::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ArenaRandHeroCfg::clear_movespeed() {
  movespeed_ = 0u;
  clear_has_movespeed();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::movespeed() const {
  return movespeed_;
}
inline void ArenaRandHeroCfg::set_movespeed(::google::protobuf::uint32 value) {
  set_has_movespeed();
  movespeed_ = value;
}

// required uint32 BackSpeed = 8;
inline bool ArenaRandHeroCfg::has_backspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaRandHeroCfg::set_has_backspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaRandHeroCfg::clear_has_backspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaRandHeroCfg::clear_backspeed() {
  backspeed_ = 0u;
  clear_has_backspeed();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::backspeed() const {
  return backspeed_;
}
inline void ArenaRandHeroCfg::set_backspeed(::google::protobuf::uint32 value) {
  set_has_backspeed();
  backspeed_ = value;
}

// required uint64 FightPower = 9;
inline bool ArenaRandHeroCfg::has_fightpower() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ArenaRandHeroCfg::set_has_fightpower() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ArenaRandHeroCfg::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ArenaRandHeroCfg::clear_fightpower() {
  fightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_fightpower();
}
inline ::google::protobuf::uint64 ArenaRandHeroCfg::fightpower() const {
  return fightpower_;
}
inline void ArenaRandHeroCfg::set_fightpower(::google::protobuf::uint64 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// required uint32 ShowID = 10;
inline bool ArenaRandHeroCfg::has_showid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ArenaRandHeroCfg::set_has_showid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ArenaRandHeroCfg::clear_has_showid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ArenaRandHeroCfg::clear_showid() {
  showid_ = 0u;
  clear_has_showid();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::showid() const {
  return showid_;
}
inline void ArenaRandHeroCfg::set_showid(::google::protobuf::uint32 value) {
  set_has_showid();
  showid_ = value;
}

// required uint32 DodgeDist = 11;
inline bool ArenaRandHeroCfg::has_dodgedist() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ArenaRandHeroCfg::set_has_dodgedist() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ArenaRandHeroCfg::clear_has_dodgedist() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ArenaRandHeroCfg::clear_dodgedist() {
  dodgedist_ = 0u;
  clear_has_dodgedist();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::dodgedist() const {
  return dodgedist_;
}
inline void ArenaRandHeroCfg::set_dodgedist(::google::protobuf::uint32 value) {
  set_has_dodgedist();
  dodgedist_ = value;
}

// required uint32 DodgeCD = 12;
inline bool ArenaRandHeroCfg::has_dodgecd() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ArenaRandHeroCfg::set_has_dodgecd() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ArenaRandHeroCfg::clear_has_dodgecd() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ArenaRandHeroCfg::clear_dodgecd() {
  dodgecd_ = 0u;
  clear_has_dodgecd();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::dodgecd() const {
  return dodgecd_;
}
inline void ArenaRandHeroCfg::set_dodgecd(::google::protobuf::uint32 value) {
  set_has_dodgecd();
  dodgecd_ = value;
}

// required uint32 AtkSpeed = 13;
inline bool ArenaRandHeroCfg::has_atkspeed() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_atkspeed() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ArenaRandHeroCfg::clear_has_atkspeed() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ArenaRandHeroCfg::clear_atkspeed() {
  atkspeed_ = 0u;
  clear_has_atkspeed();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::atkspeed() const {
  return atkspeed_;
}
inline void ArenaRandHeroCfg::set_atkspeed(::google::protobuf::uint32 value) {
  set_has_atkspeed();
  atkspeed_ = value;
}

// required uint32 EvolutionSkillID = 14;
inline bool ArenaRandHeroCfg::has_evolutionskillid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_evolutionskillid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ArenaRandHeroCfg::clear_has_evolutionskillid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ArenaRandHeroCfg::clear_evolutionskillid() {
  evolutionskillid_ = 0u;
  clear_has_evolutionskillid();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::evolutionskillid() const {
  return evolutionskillid_;
}
inline void ArenaRandHeroCfg::set_evolutionskillid(::google::protobuf::uint32 value) {
  set_has_evolutionskillid();
  evolutionskillid_ = value;
}

// required uint32 Level = 15;
inline bool ArenaRandHeroCfg::has_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ArenaRandHeroCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ArenaRandHeroCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::level() const {
  return level_;
}
inline void ArenaRandHeroCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 Hit = 16;
inline bool ArenaRandHeroCfg::has_hit() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_hit() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ArenaRandHeroCfg::clear_has_hit() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ArenaRandHeroCfg::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::hit() const {
  return hit_;
}
inline void ArenaRandHeroCfg::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
}

// required uint32 HitWithoutInitVal = 17;
inline bool ArenaRandHeroCfg::has_hitwithoutinitval() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_hitwithoutinitval() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ArenaRandHeroCfg::clear_has_hitwithoutinitval() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ArenaRandHeroCfg::clear_hitwithoutinitval() {
  hitwithoutinitval_ = 0u;
  clear_has_hitwithoutinitval();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::hitwithoutinitval() const {
  return hitwithoutinitval_;
}
inline void ArenaRandHeroCfg::set_hitwithoutinitval(::google::protobuf::uint32 value) {
  set_has_hitwithoutinitval();
  hitwithoutinitval_ = value;
}

// required uint32 WeaponCfgID = 18;
inline bool ArenaRandHeroCfg::has_weaponcfgid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_weaponcfgid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ArenaRandHeroCfg::clear_has_weaponcfgid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ArenaRandHeroCfg::clear_weaponcfgid() {
  weaponcfgid_ = 0u;
  clear_has_weaponcfgid();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::weaponcfgid() const {
  return weaponcfgid_;
}
inline void ArenaRandHeroCfg::set_weaponcfgid(::google::protobuf::uint32 value) {
  set_has_weaponcfgid();
  weaponcfgid_ = value;
}

// required uint32 WeaponLevel = 19;
inline bool ArenaRandHeroCfg::has_weaponlevel() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_weaponlevel() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ArenaRandHeroCfg::clear_has_weaponlevel() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ArenaRandHeroCfg::clear_weaponlevel() {
  weaponlevel_ = 0u;
  clear_has_weaponlevel();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::weaponlevel() const {
  return weaponlevel_;
}
inline void ArenaRandHeroCfg::set_weaponlevel(::google::protobuf::uint32 value) {
  set_has_weaponlevel();
  weaponlevel_ = value;
}

// required uint32 WeaponQuality = 20;
inline bool ArenaRandHeroCfg::has_weaponquality() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_weaponquality() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ArenaRandHeroCfg::clear_has_weaponquality() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ArenaRandHeroCfg::clear_weaponquality() {
  weaponquality_ = 0u;
  clear_has_weaponquality();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::weaponquality() const {
  return weaponquality_;
}
inline void ArenaRandHeroCfg::set_weaponquality(::google::protobuf::uint32 value) {
  set_has_weaponquality();
  weaponquality_ = value;
}

// required uint32 Score = 21;
inline bool ArenaRandHeroCfg::has_score() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ArenaRandHeroCfg::set_has_score() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ArenaRandHeroCfg::clear_has_score() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ArenaRandHeroCfg::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ArenaRandHeroCfg::score() const {
  return score_;
}
inline void ArenaRandHeroCfg::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// ArenaRandHeroCfgSet

// repeated .com.cfg.vo.ArenaRandHeroCfg arenaRandHeroCfg = 1;
inline int ArenaRandHeroCfgSet::arenarandherocfg_size() const {
  return arenarandherocfg_.size();
}
inline void ArenaRandHeroCfgSet::clear_arenarandherocfg() {
  arenarandherocfg_.Clear();
}
inline const ::com::cfg::vo::ArenaRandHeroCfg& ArenaRandHeroCfgSet::arenarandherocfg(int index) const {
  return arenarandherocfg_.Get(index);
}
inline ::com::cfg::vo::ArenaRandHeroCfg* ArenaRandHeroCfgSet::mutable_arenarandherocfg(int index) {
  return arenarandherocfg_.Mutable(index);
}
inline ::com::cfg::vo::ArenaRandHeroCfg* ArenaRandHeroCfgSet::add_arenarandherocfg() {
  return arenarandherocfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaRandHeroCfg >&
ArenaRandHeroCfgSet::arenarandherocfg() const {
  return arenarandherocfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaRandHeroCfg >*
ArenaRandHeroCfgSet::mutable_arenarandherocfg() {
  return &arenarandherocfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ArenaRandHeroCfg_2eproto__INCLUDED
