// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BagenlargeCfg.proto

#ifndef PROTOBUF_BagenlargeCfg_2eproto__INCLUDED
#define PROTOBUF_BagenlargeCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BagenlargeCfg_2eproto();
void protobuf_AssignDesc_BagenlargeCfg_2eproto();
void protobuf_ShutdownFile_BagenlargeCfg_2eproto();

class BagenlargeCfg;
class BagenlargeCfgSet;

// ===================================================================

class BagenlargeCfg : public ::google::protobuf::MessageLite {
 public:
  BagenlargeCfg();
  virtual ~BagenlargeCfg();

  BagenlargeCfg(const BagenlargeCfg& from);

  inline BagenlargeCfg& operator=(const BagenlargeCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const BagenlargeCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BagenlargeCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BagenlargeCfg* other);

  // implements Message ----------------------------------------------

  BagenlargeCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BagenlargeCfg& from);
  void MergeFrom(const BagenlargeCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BagIdx = 1;
  inline bool has_bagidx() const;
  inline void clear_bagidx();
  static const int kBagIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 bagidx() const;
  inline void set_bagidx(::google::protobuf::uint32 value);

  // required uint32 Price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BagenlargeCfg)
 private:
  inline void set_has_bagidx();
  inline void clear_has_bagidx();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::uint32 bagidx_;
  ::google::protobuf::uint32 price_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BagenlargeCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BagenlargeCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_BagenlargeCfg_2eproto();
  friend void protobuf_ShutdownFile_BagenlargeCfg_2eproto();

  void InitAsDefaultInstance();
  static BagenlargeCfg* default_instance_;
};
// -------------------------------------------------------------------

class BagenlargeCfgSet : public ::google::protobuf::MessageLite {
 public:
  BagenlargeCfgSet();
  virtual ~BagenlargeCfgSet();

  BagenlargeCfgSet(const BagenlargeCfgSet& from);

  inline BagenlargeCfgSet& operator=(const BagenlargeCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const BagenlargeCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BagenlargeCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BagenlargeCfgSet* other);

  // implements Message ----------------------------------------------

  BagenlargeCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BagenlargeCfgSet& from);
  void MergeFrom(const BagenlargeCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.BagenlargeCfg Bagenlarge1 = 1;
  inline int bagenlarge1_size() const;
  inline void clear_bagenlarge1();
  static const int kBagenlarge1FieldNumber = 1;
  inline const ::com::cfg::vo::BagenlargeCfg& bagenlarge1(int index) const;
  inline ::com::cfg::vo::BagenlargeCfg* mutable_bagenlarge1(int index);
  inline ::com::cfg::vo::BagenlargeCfg* add_bagenlarge1();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BagenlargeCfg >&
      bagenlarge1() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BagenlargeCfg >*
      mutable_bagenlarge1();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BagenlargeCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BagenlargeCfg > bagenlarge1_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BagenlargeCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BagenlargeCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_BagenlargeCfg_2eproto();
  friend void protobuf_ShutdownFile_BagenlargeCfg_2eproto();

  void InitAsDefaultInstance();
  static BagenlargeCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// BagenlargeCfg

// required uint32 BagIdx = 1;
inline bool BagenlargeCfg::has_bagidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagenlargeCfg::set_has_bagidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagenlargeCfg::clear_has_bagidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagenlargeCfg::clear_bagidx() {
  bagidx_ = 0u;
  clear_has_bagidx();
}
inline ::google::protobuf::uint32 BagenlargeCfg::bagidx() const {
  return bagidx_;
}
inline void BagenlargeCfg::set_bagidx(::google::protobuf::uint32 value) {
  set_has_bagidx();
  bagidx_ = value;
}

// required uint32 Price = 2;
inline bool BagenlargeCfg::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagenlargeCfg::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagenlargeCfg::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagenlargeCfg::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 BagenlargeCfg::price() const {
  return price_;
}
inline void BagenlargeCfg::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// -------------------------------------------------------------------

// BagenlargeCfgSet

// repeated .com.cfg.vo.BagenlargeCfg Bagenlarge1 = 1;
inline int BagenlargeCfgSet::bagenlarge1_size() const {
  return bagenlarge1_.size();
}
inline void BagenlargeCfgSet::clear_bagenlarge1() {
  bagenlarge1_.Clear();
}
inline const ::com::cfg::vo::BagenlargeCfg& BagenlargeCfgSet::bagenlarge1(int index) const {
  return bagenlarge1_.Get(index);
}
inline ::com::cfg::vo::BagenlargeCfg* BagenlargeCfgSet::mutable_bagenlarge1(int index) {
  return bagenlarge1_.Mutable(index);
}
inline ::com::cfg::vo::BagenlargeCfg* BagenlargeCfgSet::add_bagenlarge1() {
  return bagenlarge1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BagenlargeCfg >&
BagenlargeCfgSet::bagenlarge1() const {
  return bagenlarge1_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BagenlargeCfg >*
BagenlargeCfgSet::mutable_bagenlarge1() {
  return &bagenlarge1_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BagenlargeCfg_2eproto__INCLUDED
