// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CardCfg.proto

#ifndef PROTOBUF_CardCfg_2eproto__INCLUDED
#define PROTOBUF_CardCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CardCfg_2eproto();
void protobuf_AssignDesc_CardCfg_2eproto();
void protobuf_ShutdownFile_CardCfg_2eproto();

class CardElement;
class CardCfg;
class CardCfgSet;

// ===================================================================

class CardElement : public ::google::protobuf::MessageLite {
 public:
  CardElement();
  virtual ~CardElement();

  CardElement(const CardElement& from);

  inline CardElement& operator=(const CardElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const CardElement& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CardElement* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CardElement* other);

  // implements Message ----------------------------------------------

  CardElement* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CardElement& from);
  void MergeFrom(const CardElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementID = 1;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 1;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementType = 2;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // required uint32 Prob = 4;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 4;
  inline ::google::protobuf::uint32 prob() const;
  inline void set_prob(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.CardElement)
 private:
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();
  inline void set_has_prob();
  inline void clear_has_prob();

  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementcnt_;
  ::google::protobuf::uint32 prob_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CardCfg_2eproto();
  friend void protobuf_ShutdownFile_CardCfg_2eproto();

  void InitAsDefaultInstance();
  static CardElement* default_instance_;
};
// -------------------------------------------------------------------

class CardCfg : public ::google::protobuf::MessageLite {
 public:
  CardCfg();
  virtual ~CardCfg();

  CardCfg(const CardCfg& from);

  inline CardCfg& operator=(const CardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const CardCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CardCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CardCfg* other);

  // implements Message ----------------------------------------------

  CardCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CardCfg& from);
  void MergeFrom(const CardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cardID = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIDFieldNumber = 1;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.CardElement freeElementLst = 2;
  inline int freeelementlst_size() const;
  inline void clear_freeelementlst();
  static const int kFreeElementLstFieldNumber = 2;
  inline const ::com::cfg::vo::CardElement& freeelementlst(int index) const;
  inline ::com::cfg::vo::CardElement* mutable_freeelementlst(int index);
  inline ::com::cfg::vo::CardElement* add_freeelementlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >&
      freeelementlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >*
      mutable_freeelementlst();

  // repeated .com.cfg.vo.CardElement costElementLst = 3;
  inline int costelementlst_size() const;
  inline void clear_costelementlst();
  static const int kCostElementLstFieldNumber = 3;
  inline const ::com::cfg::vo::CardElement& costelementlst(int index) const;
  inline ::com::cfg::vo::CardElement* mutable_costelementlst(int index);
  inline ::com::cfg::vo::CardElement* add_costelementlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >&
      costelementlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >*
      mutable_costelementlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.CardCfg)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement > freeelementlst_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement > costelementlst_;
  ::google::protobuf::uint32 cardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CardCfg_2eproto();
  friend void protobuf_ShutdownFile_CardCfg_2eproto();

  void InitAsDefaultInstance();
  static CardCfg* default_instance_;
};
// -------------------------------------------------------------------

class CardCfgSet : public ::google::protobuf::MessageLite {
 public:
  CardCfgSet();
  virtual ~CardCfgSet();

  CardCfgSet(const CardCfgSet& from);

  inline CardCfgSet& operator=(const CardCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const CardCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CardCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CardCfgSet* other);

  // implements Message ----------------------------------------------

  CardCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CardCfgSet& from);
  void MergeFrom(const CardCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.CardCfg cardCfg = 1;
  inline int cardcfg_size() const;
  inline void clear_cardcfg();
  static const int kCardCfgFieldNumber = 1;
  inline const ::com::cfg::vo::CardCfg& cardcfg(int index) const;
  inline ::com::cfg::vo::CardCfg* mutable_cardcfg(int index);
  inline ::com::cfg::vo::CardCfg* add_cardcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardCfg >&
      cardcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardCfg >*
      mutable_cardcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.CardCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardCfg > cardcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_CardCfg_2eproto();
  friend void protobuf_ShutdownFile_CardCfg_2eproto();

  void InitAsDefaultInstance();
  static CardCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// CardElement

// required uint32 ElementID = 1;
inline bool CardElement::has_elementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardElement::set_has_elementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardElement::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardElement::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 CardElement::elementid() const {
  return elementid_;
}
inline void CardElement::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementType = 2;
inline bool CardElement::has_elementtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardElement::set_has_elementtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardElement::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardElement::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 CardElement::elementtype() const {
  return elementtype_;
}
inline void CardElement::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementCnt = 3;
inline bool CardElement::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardElement::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardElement::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardElement::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 CardElement::elementcnt() const {
  return elementcnt_;
}
inline void CardElement::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// required uint32 Prob = 4;
inline bool CardElement::has_prob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardElement::set_has_prob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardElement::clear_has_prob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardElement::clear_prob() {
  prob_ = 0u;
  clear_has_prob();
}
inline ::google::protobuf::uint32 CardElement::prob() const {
  return prob_;
}
inline void CardElement::set_prob(::google::protobuf::uint32 value) {
  set_has_prob();
  prob_ = value;
}

// -------------------------------------------------------------------

// CardCfg

// required uint32 cardID = 1;
inline bool CardCfg::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardCfg::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardCfg::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardCfg::clear_cardid() {
  cardid_ = 0u;
  clear_has_cardid();
}
inline ::google::protobuf::uint32 CardCfg::cardid() const {
  return cardid_;
}
inline void CardCfg::set_cardid(::google::protobuf::uint32 value) {
  set_has_cardid();
  cardid_ = value;
}

// repeated .com.cfg.vo.CardElement freeElementLst = 2;
inline int CardCfg::freeelementlst_size() const {
  return freeelementlst_.size();
}
inline void CardCfg::clear_freeelementlst() {
  freeelementlst_.Clear();
}
inline const ::com::cfg::vo::CardElement& CardCfg::freeelementlst(int index) const {
  return freeelementlst_.Get(index);
}
inline ::com::cfg::vo::CardElement* CardCfg::mutable_freeelementlst(int index) {
  return freeelementlst_.Mutable(index);
}
inline ::com::cfg::vo::CardElement* CardCfg::add_freeelementlst() {
  return freeelementlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >&
CardCfg::freeelementlst() const {
  return freeelementlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >*
CardCfg::mutable_freeelementlst() {
  return &freeelementlst_;
}

// repeated .com.cfg.vo.CardElement costElementLst = 3;
inline int CardCfg::costelementlst_size() const {
  return costelementlst_.size();
}
inline void CardCfg::clear_costelementlst() {
  costelementlst_.Clear();
}
inline const ::com::cfg::vo::CardElement& CardCfg::costelementlst(int index) const {
  return costelementlst_.Get(index);
}
inline ::com::cfg::vo::CardElement* CardCfg::mutable_costelementlst(int index) {
  return costelementlst_.Mutable(index);
}
inline ::com::cfg::vo::CardElement* CardCfg::add_costelementlst() {
  return costelementlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >&
CardCfg::costelementlst() const {
  return costelementlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardElement >*
CardCfg::mutable_costelementlst() {
  return &costelementlst_;
}

// -------------------------------------------------------------------

// CardCfgSet

// repeated .com.cfg.vo.CardCfg cardCfg = 1;
inline int CardCfgSet::cardcfg_size() const {
  return cardcfg_.size();
}
inline void CardCfgSet::clear_cardcfg() {
  cardcfg_.Clear();
}
inline const ::com::cfg::vo::CardCfg& CardCfgSet::cardcfg(int index) const {
  return cardcfg_.Get(index);
}
inline ::com::cfg::vo::CardCfg* CardCfgSet::mutable_cardcfg(int index) {
  return cardcfg_.Mutable(index);
}
inline ::com::cfg::vo::CardCfg* CardCfgSet::add_cardcfg() {
  return cardcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardCfg >&
CardCfgSet::cardcfg() const {
  return cardcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::CardCfg >*
CardCfgSet::mutable_cardcfg() {
  return &cardcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CardCfg_2eproto__INCLUDED
