// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MilestoneCfg.proto

#ifndef PROTOBUF_MilestoneCfg_2eproto__INCLUDED
#define PROTOBUF_MilestoneCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MilestoneCfg_2eproto();
void protobuf_AssignDesc_MilestoneCfg_2eproto();
void protobuf_ShutdownFile_MilestoneCfg_2eproto();

class MilestoneTarget;
class MilestoneAward;
class MilestoneCfg;
class MilestoneCfgSet;

// ===================================================================

class MilestoneTarget : public ::google::protobuf::MessageLite {
 public:
  MilestoneTarget();
  virtual ~MilestoneTarget();

  MilestoneTarget(const MilestoneTarget& from);

  inline MilestoneTarget& operator=(const MilestoneTarget& from) {
    CopyFrom(from);
    return *this;
  }

  static const MilestoneTarget& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MilestoneTarget* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MilestoneTarget* other);

  // implements Message ----------------------------------------------

  MilestoneTarget* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MilestoneTarget& from);
  void MergeFrom(const MilestoneTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 TargetType = 1;
  inline bool has_targettype() const;
  inline void clear_targettype();
  static const int kTargetTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 targettype() const;
  inline void set_targettype(::google::protobuf::uint32 value);

  // required uint32 R1 = 2;
  inline bool has_r1() const;
  inline void clear_r1();
  static const int kR1FieldNumber = 2;
  inline ::google::protobuf::uint32 r1() const;
  inline void set_r1(::google::protobuf::uint32 value);

  // required uint32 R2 = 3;
  inline bool has_r2() const;
  inline void clear_r2();
  static const int kR2FieldNumber = 3;
  inline ::google::protobuf::uint32 r2() const;
  inline void set_r2(::google::protobuf::uint32 value);

  // required uint32 R3 = 4;
  inline bool has_r3() const;
  inline void clear_r3();
  static const int kR3FieldNumber = 4;
  inline ::google::protobuf::uint32 r3() const;
  inline void set_r3(::google::protobuf::uint32 value);

  // required uint32 R4 = 5;
  inline bool has_r4() const;
  inline void clear_r4();
  static const int kR4FieldNumber = 5;
  inline ::google::protobuf::uint32 r4() const;
  inline void set_r4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MilestoneTarget)
 private:
  inline void set_has_targettype();
  inline void clear_has_targettype();
  inline void set_has_r1();
  inline void clear_has_r1();
  inline void set_has_r2();
  inline void clear_has_r2();
  inline void set_has_r3();
  inline void clear_has_r3();
  inline void set_has_r4();
  inline void clear_has_r4();

  ::google::protobuf::uint32 targettype_;
  ::google::protobuf::uint32 r1_;
  ::google::protobuf::uint32 r2_;
  ::google::protobuf::uint32 r3_;
  ::google::protobuf::uint32 r4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MilestoneCfg_2eproto();
  friend void protobuf_ShutdownFile_MilestoneCfg_2eproto();

  void InitAsDefaultInstance();
  static MilestoneTarget* default_instance_;
};
// -------------------------------------------------------------------

class MilestoneAward : public ::google::protobuf::MessageLite {
 public:
  MilestoneAward();
  virtual ~MilestoneAward();

  MilestoneAward(const MilestoneAward& from);

  inline MilestoneAward& operator=(const MilestoneAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const MilestoneAward& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MilestoneAward* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MilestoneAward* other);

  // implements Message ----------------------------------------------

  MilestoneAward* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MilestoneAward& from);
  void MergeFrom(const MilestoneAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 Gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 AwardType = 3;
  inline bool has_awardtype() const;
  inline void clear_awardtype();
  static const int kAwardTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 awardtype() const;
  inline void set_awardtype(::google::protobuf::uint32 value);

  // required uint32 AwardCfgID = 4;
  inline bool has_awardcfgid() const;
  inline void clear_awardcfgid();
  static const int kAwardCfgIDFieldNumber = 4;
  inline ::google::protobuf::uint32 awardcfgid() const;
  inline void set_awardcfgid(::google::protobuf::uint32 value);

  // required uint32 AwardCnt = 5;
  inline bool has_awardcnt() const;
  inline void clear_awardcnt();
  static const int kAwardCntFieldNumber = 5;
  inline ::google::protobuf::uint32 awardcnt() const;
  inline void set_awardcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MilestoneAward)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_awardtype();
  inline void clear_has_awardtype();
  inline void set_has_awardcfgid();
  inline void clear_has_awardcfgid();
  inline void set_has_awardcnt();
  inline void clear_has_awardcnt();

  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 awardtype_;
  ::google::protobuf::uint32 awardcfgid_;
  ::google::protobuf::uint32 awardcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MilestoneCfg_2eproto();
  friend void protobuf_ShutdownFile_MilestoneCfg_2eproto();

  void InitAsDefaultInstance();
  static MilestoneAward* default_instance_;
};
// -------------------------------------------------------------------

class MilestoneCfg : public ::google::protobuf::MessageLite {
 public:
  MilestoneCfg();
  virtual ~MilestoneCfg();

  MilestoneCfg(const MilestoneCfg& from);

  inline MilestoneCfg& operator=(const MilestoneCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const MilestoneCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MilestoneCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MilestoneCfg* other);

  // implements Message ----------------------------------------------

  MilestoneCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MilestoneCfg& from);
  void MergeFrom(const MilestoneCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 MilestoneID = 1;
  inline bool has_milestoneid() const;
  inline void clear_milestoneid();
  static const int kMilestoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 milestoneid() const;
  inline void set_milestoneid(::google::protobuf::uint32 value);

  // required string MilestoneIcon = 2;
  inline bool has_milestoneicon() const;
  inline void clear_milestoneicon();
  static const int kMilestoneIconFieldNumber = 2;
  inline const ::std::string& milestoneicon() const;
  inline void set_milestoneicon(const ::std::string& value);
  inline void set_milestoneicon(const char* value);
  inline void set_milestoneicon(const char* value, size_t size);
  inline ::std::string* mutable_milestoneicon();
  inline ::std::string* release_milestoneicon();
  inline void set_allocated_milestoneicon(::std::string* milestoneicon);

  // required string MilestoneName = 3;
  inline bool has_milestonename() const;
  inline void clear_milestonename();
  static const int kMilestoneNameFieldNumber = 3;
  inline const ::std::string& milestonename() const;
  inline void set_milestonename(const ::std::string& value);
  inline void set_milestonename(const char* value);
  inline void set_milestonename(const char* value, size_t size);
  inline ::std::string* mutable_milestonename();
  inline ::std::string* release_milestonename();
  inline void set_allocated_milestonename(::std::string* milestonename);

  // required string MilestoneDesc = 4;
  inline bool has_milestonedesc() const;
  inline void clear_milestonedesc();
  static const int kMilestoneDescFieldNumber = 4;
  inline const ::std::string& milestonedesc() const;
  inline void set_milestonedesc(const ::std::string& value);
  inline void set_milestonedesc(const char* value);
  inline void set_milestonedesc(const char* value, size_t size);
  inline ::std::string* mutable_milestonedesc();
  inline ::std::string* release_milestonedesc();
  inline void set_allocated_milestonedesc(::std::string* milestonedesc);

  // required string MilestoneIntro = 5;
  inline bool has_milestoneintro() const;
  inline void clear_milestoneintro();
  static const int kMilestoneIntroFieldNumber = 5;
  inline const ::std::string& milestoneintro() const;
  inline void set_milestoneintro(const ::std::string& value);
  inline void set_milestoneintro(const char* value);
  inline void set_milestoneintro(const char* value, size_t size);
  inline ::std::string* mutable_milestoneintro();
  inline ::std::string* release_milestoneintro();
  inline void set_allocated_milestoneintro(::std::string* milestoneintro);

  // required uint32 LeadID = 6;
  inline bool has_leadid() const;
  inline void clear_leadid();
  static const int kLeadIDFieldNumber = 6;
  inline ::google::protobuf::uint32 leadid() const;
  inline void set_leadid(::google::protobuf::uint32 value);

  // required uint32 FirstMilestoneID = 7;
  inline bool has_firstmilestoneid() const;
  inline void clear_firstmilestoneid();
  static const int kFirstMilestoneIDFieldNumber = 7;
  inline ::google::protobuf::uint32 firstmilestoneid() const;
  inline void set_firstmilestoneid(::google::protobuf::uint32 value);

  // required uint32 NextMilestoneID = 8;
  inline bool has_nextmilestoneid() const;
  inline void clear_nextmilestoneid();
  static const int kNextMilestoneIDFieldNumber = 8;
  inline ::google::protobuf::uint32 nextmilestoneid() const;
  inline void set_nextmilestoneid(::google::protobuf::uint32 value);

  // required .com.cfg.vo.MilestoneTarget Target = 9;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 9;
  inline const ::com::cfg::vo::MilestoneTarget& target() const;
  inline ::com::cfg::vo::MilestoneTarget* mutable_target();
  inline ::com::cfg::vo::MilestoneTarget* release_target();
  inline void set_allocated_target(::com::cfg::vo::MilestoneTarget* target);

  // required .com.cfg.vo.MilestoneAward Award = 10;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 10;
  inline const ::com::cfg::vo::MilestoneAward& award() const;
  inline ::com::cfg::vo::MilestoneAward* mutable_award();
  inline ::com::cfg::vo::MilestoneAward* release_award();
  inline void set_allocated_award(::com::cfg::vo::MilestoneAward* award);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MilestoneCfg)
 private:
  inline void set_has_milestoneid();
  inline void clear_has_milestoneid();
  inline void set_has_milestoneicon();
  inline void clear_has_milestoneicon();
  inline void set_has_milestonename();
  inline void clear_has_milestonename();
  inline void set_has_milestonedesc();
  inline void clear_has_milestonedesc();
  inline void set_has_milestoneintro();
  inline void clear_has_milestoneintro();
  inline void set_has_leadid();
  inline void clear_has_leadid();
  inline void set_has_firstmilestoneid();
  inline void clear_has_firstmilestoneid();
  inline void set_has_nextmilestoneid();
  inline void clear_has_nextmilestoneid();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_award();
  inline void clear_has_award();

  ::std::string* milestoneicon_;
  ::std::string* milestonename_;
  ::google::protobuf::uint32 milestoneid_;
  ::google::protobuf::uint32 leadid_;
  ::std::string* milestonedesc_;
  ::std::string* milestoneintro_;
  ::google::protobuf::uint32 firstmilestoneid_;
  ::google::protobuf::uint32 nextmilestoneid_;
  ::com::cfg::vo::MilestoneTarget* target_;
  ::com::cfg::vo::MilestoneAward* award_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MilestoneCfg_2eproto();
  friend void protobuf_ShutdownFile_MilestoneCfg_2eproto();

  void InitAsDefaultInstance();
  static MilestoneCfg* default_instance_;
};
// -------------------------------------------------------------------

class MilestoneCfgSet : public ::google::protobuf::MessageLite {
 public:
  MilestoneCfgSet();
  virtual ~MilestoneCfgSet();

  MilestoneCfgSet(const MilestoneCfgSet& from);

  inline MilestoneCfgSet& operator=(const MilestoneCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const MilestoneCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MilestoneCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MilestoneCfgSet* other);

  // implements Message ----------------------------------------------

  MilestoneCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MilestoneCfgSet& from);
  void MergeFrom(const MilestoneCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.MilestoneCfg milestonecfg = 1;
  inline int milestonecfg_size() const;
  inline void clear_milestonecfg();
  static const int kMilestonecfgFieldNumber = 1;
  inline const ::com::cfg::vo::MilestoneCfg& milestonecfg(int index) const;
  inline ::com::cfg::vo::MilestoneCfg* mutable_milestonecfg(int index);
  inline ::com::cfg::vo::MilestoneCfg* add_milestonecfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MilestoneCfg >&
      milestonecfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MilestoneCfg >*
      mutable_milestonecfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MilestoneCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MilestoneCfg > milestonecfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MilestoneCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MilestoneCfg_2eproto();
  friend void protobuf_ShutdownFile_MilestoneCfg_2eproto();

  void InitAsDefaultInstance();
  static MilestoneCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// MilestoneTarget

// required uint32 TargetType = 1;
inline bool MilestoneTarget::has_targettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MilestoneTarget::set_has_targettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MilestoneTarget::clear_has_targettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MilestoneTarget::clear_targettype() {
  targettype_ = 0u;
  clear_has_targettype();
}
inline ::google::protobuf::uint32 MilestoneTarget::targettype() const {
  return targettype_;
}
inline void MilestoneTarget::set_targettype(::google::protobuf::uint32 value) {
  set_has_targettype();
  targettype_ = value;
}

// required uint32 R1 = 2;
inline bool MilestoneTarget::has_r1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MilestoneTarget::set_has_r1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MilestoneTarget::clear_has_r1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MilestoneTarget::clear_r1() {
  r1_ = 0u;
  clear_has_r1();
}
inline ::google::protobuf::uint32 MilestoneTarget::r1() const {
  return r1_;
}
inline void MilestoneTarget::set_r1(::google::protobuf::uint32 value) {
  set_has_r1();
  r1_ = value;
}

// required uint32 R2 = 3;
inline bool MilestoneTarget::has_r2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MilestoneTarget::set_has_r2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MilestoneTarget::clear_has_r2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MilestoneTarget::clear_r2() {
  r2_ = 0u;
  clear_has_r2();
}
inline ::google::protobuf::uint32 MilestoneTarget::r2() const {
  return r2_;
}
inline void MilestoneTarget::set_r2(::google::protobuf::uint32 value) {
  set_has_r2();
  r2_ = value;
}

// required uint32 R3 = 4;
inline bool MilestoneTarget::has_r3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MilestoneTarget::set_has_r3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MilestoneTarget::clear_has_r3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MilestoneTarget::clear_r3() {
  r3_ = 0u;
  clear_has_r3();
}
inline ::google::protobuf::uint32 MilestoneTarget::r3() const {
  return r3_;
}
inline void MilestoneTarget::set_r3(::google::protobuf::uint32 value) {
  set_has_r3();
  r3_ = value;
}

// required uint32 R4 = 5;
inline bool MilestoneTarget::has_r4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MilestoneTarget::set_has_r4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MilestoneTarget::clear_has_r4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MilestoneTarget::clear_r4() {
  r4_ = 0u;
  clear_has_r4();
}
inline ::google::protobuf::uint32 MilestoneTarget::r4() const {
  return r4_;
}
inline void MilestoneTarget::set_r4(::google::protobuf::uint32 value) {
  set_has_r4();
  r4_ = value;
}

// -------------------------------------------------------------------

// MilestoneAward

// required uint32 Coin = 1;
inline bool MilestoneAward::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MilestoneAward::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MilestoneAward::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MilestoneAward::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 MilestoneAward::coin() const {
  return coin_;
}
inline void MilestoneAward::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required uint32 Gold = 2;
inline bool MilestoneAward::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MilestoneAward::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MilestoneAward::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MilestoneAward::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 MilestoneAward::gold() const {
  return gold_;
}
inline void MilestoneAward::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 AwardType = 3;
inline bool MilestoneAward::has_awardtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MilestoneAward::set_has_awardtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MilestoneAward::clear_has_awardtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MilestoneAward::clear_awardtype() {
  awardtype_ = 0u;
  clear_has_awardtype();
}
inline ::google::protobuf::uint32 MilestoneAward::awardtype() const {
  return awardtype_;
}
inline void MilestoneAward::set_awardtype(::google::protobuf::uint32 value) {
  set_has_awardtype();
  awardtype_ = value;
}

// required uint32 AwardCfgID = 4;
inline bool MilestoneAward::has_awardcfgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MilestoneAward::set_has_awardcfgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MilestoneAward::clear_has_awardcfgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MilestoneAward::clear_awardcfgid() {
  awardcfgid_ = 0u;
  clear_has_awardcfgid();
}
inline ::google::protobuf::uint32 MilestoneAward::awardcfgid() const {
  return awardcfgid_;
}
inline void MilestoneAward::set_awardcfgid(::google::protobuf::uint32 value) {
  set_has_awardcfgid();
  awardcfgid_ = value;
}

// required uint32 AwardCnt = 5;
inline bool MilestoneAward::has_awardcnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MilestoneAward::set_has_awardcnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MilestoneAward::clear_has_awardcnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MilestoneAward::clear_awardcnt() {
  awardcnt_ = 0u;
  clear_has_awardcnt();
}
inline ::google::protobuf::uint32 MilestoneAward::awardcnt() const {
  return awardcnt_;
}
inline void MilestoneAward::set_awardcnt(::google::protobuf::uint32 value) {
  set_has_awardcnt();
  awardcnt_ = value;
}

// -------------------------------------------------------------------

// MilestoneCfg

// required uint32 MilestoneID = 1;
inline bool MilestoneCfg::has_milestoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MilestoneCfg::set_has_milestoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MilestoneCfg::clear_has_milestoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MilestoneCfg::clear_milestoneid() {
  milestoneid_ = 0u;
  clear_has_milestoneid();
}
inline ::google::protobuf::uint32 MilestoneCfg::milestoneid() const {
  return milestoneid_;
}
inline void MilestoneCfg::set_milestoneid(::google::protobuf::uint32 value) {
  set_has_milestoneid();
  milestoneid_ = value;
}

// required string MilestoneIcon = 2;
inline bool MilestoneCfg::has_milestoneicon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MilestoneCfg::set_has_milestoneicon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MilestoneCfg::clear_has_milestoneicon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MilestoneCfg::clear_milestoneicon() {
  if (milestoneicon_ != &::google::protobuf::internal::kEmptyString) {
    milestoneicon_->clear();
  }
  clear_has_milestoneicon();
}
inline const ::std::string& MilestoneCfg::milestoneicon() const {
  return *milestoneicon_;
}
inline void MilestoneCfg::set_milestoneicon(const ::std::string& value) {
  set_has_milestoneicon();
  if (milestoneicon_ == &::google::protobuf::internal::kEmptyString) {
    milestoneicon_ = new ::std::string;
  }
  milestoneicon_->assign(value);
}
inline void MilestoneCfg::set_milestoneicon(const char* value) {
  set_has_milestoneicon();
  if (milestoneicon_ == &::google::protobuf::internal::kEmptyString) {
    milestoneicon_ = new ::std::string;
  }
  milestoneicon_->assign(value);
}
inline void MilestoneCfg::set_milestoneicon(const char* value, size_t size) {
  set_has_milestoneicon();
  if (milestoneicon_ == &::google::protobuf::internal::kEmptyString) {
    milestoneicon_ = new ::std::string;
  }
  milestoneicon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MilestoneCfg::mutable_milestoneicon() {
  set_has_milestoneicon();
  if (milestoneicon_ == &::google::protobuf::internal::kEmptyString) {
    milestoneicon_ = new ::std::string;
  }
  return milestoneicon_;
}
inline ::std::string* MilestoneCfg::release_milestoneicon() {
  clear_has_milestoneicon();
  if (milestoneicon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = milestoneicon_;
    milestoneicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MilestoneCfg::set_allocated_milestoneicon(::std::string* milestoneicon) {
  if (milestoneicon_ != &::google::protobuf::internal::kEmptyString) {
    delete milestoneicon_;
  }
  if (milestoneicon) {
    set_has_milestoneicon();
    milestoneicon_ = milestoneicon;
  } else {
    clear_has_milestoneicon();
    milestoneicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string MilestoneName = 3;
inline bool MilestoneCfg::has_milestonename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MilestoneCfg::set_has_milestonename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MilestoneCfg::clear_has_milestonename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MilestoneCfg::clear_milestonename() {
  if (milestonename_ != &::google::protobuf::internal::kEmptyString) {
    milestonename_->clear();
  }
  clear_has_milestonename();
}
inline const ::std::string& MilestoneCfg::milestonename() const {
  return *milestonename_;
}
inline void MilestoneCfg::set_milestonename(const ::std::string& value) {
  set_has_milestonename();
  if (milestonename_ == &::google::protobuf::internal::kEmptyString) {
    milestonename_ = new ::std::string;
  }
  milestonename_->assign(value);
}
inline void MilestoneCfg::set_milestonename(const char* value) {
  set_has_milestonename();
  if (milestonename_ == &::google::protobuf::internal::kEmptyString) {
    milestonename_ = new ::std::string;
  }
  milestonename_->assign(value);
}
inline void MilestoneCfg::set_milestonename(const char* value, size_t size) {
  set_has_milestonename();
  if (milestonename_ == &::google::protobuf::internal::kEmptyString) {
    milestonename_ = new ::std::string;
  }
  milestonename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MilestoneCfg::mutable_milestonename() {
  set_has_milestonename();
  if (milestonename_ == &::google::protobuf::internal::kEmptyString) {
    milestonename_ = new ::std::string;
  }
  return milestonename_;
}
inline ::std::string* MilestoneCfg::release_milestonename() {
  clear_has_milestonename();
  if (milestonename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = milestonename_;
    milestonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MilestoneCfg::set_allocated_milestonename(::std::string* milestonename) {
  if (milestonename_ != &::google::protobuf::internal::kEmptyString) {
    delete milestonename_;
  }
  if (milestonename) {
    set_has_milestonename();
    milestonename_ = milestonename;
  } else {
    clear_has_milestonename();
    milestonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string MilestoneDesc = 4;
inline bool MilestoneCfg::has_milestonedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MilestoneCfg::set_has_milestonedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MilestoneCfg::clear_has_milestonedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MilestoneCfg::clear_milestonedesc() {
  if (milestonedesc_ != &::google::protobuf::internal::kEmptyString) {
    milestonedesc_->clear();
  }
  clear_has_milestonedesc();
}
inline const ::std::string& MilestoneCfg::milestonedesc() const {
  return *milestonedesc_;
}
inline void MilestoneCfg::set_milestonedesc(const ::std::string& value) {
  set_has_milestonedesc();
  if (milestonedesc_ == &::google::protobuf::internal::kEmptyString) {
    milestonedesc_ = new ::std::string;
  }
  milestonedesc_->assign(value);
}
inline void MilestoneCfg::set_milestonedesc(const char* value) {
  set_has_milestonedesc();
  if (milestonedesc_ == &::google::protobuf::internal::kEmptyString) {
    milestonedesc_ = new ::std::string;
  }
  milestonedesc_->assign(value);
}
inline void MilestoneCfg::set_milestonedesc(const char* value, size_t size) {
  set_has_milestonedesc();
  if (milestonedesc_ == &::google::protobuf::internal::kEmptyString) {
    milestonedesc_ = new ::std::string;
  }
  milestonedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MilestoneCfg::mutable_milestonedesc() {
  set_has_milestonedesc();
  if (milestonedesc_ == &::google::protobuf::internal::kEmptyString) {
    milestonedesc_ = new ::std::string;
  }
  return milestonedesc_;
}
inline ::std::string* MilestoneCfg::release_milestonedesc() {
  clear_has_milestonedesc();
  if (milestonedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = milestonedesc_;
    milestonedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MilestoneCfg::set_allocated_milestonedesc(::std::string* milestonedesc) {
  if (milestonedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete milestonedesc_;
  }
  if (milestonedesc) {
    set_has_milestonedesc();
    milestonedesc_ = milestonedesc;
  } else {
    clear_has_milestonedesc();
    milestonedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string MilestoneIntro = 5;
inline bool MilestoneCfg::has_milestoneintro() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MilestoneCfg::set_has_milestoneintro() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MilestoneCfg::clear_has_milestoneintro() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MilestoneCfg::clear_milestoneintro() {
  if (milestoneintro_ != &::google::protobuf::internal::kEmptyString) {
    milestoneintro_->clear();
  }
  clear_has_milestoneintro();
}
inline const ::std::string& MilestoneCfg::milestoneintro() const {
  return *milestoneintro_;
}
inline void MilestoneCfg::set_milestoneintro(const ::std::string& value) {
  set_has_milestoneintro();
  if (milestoneintro_ == &::google::protobuf::internal::kEmptyString) {
    milestoneintro_ = new ::std::string;
  }
  milestoneintro_->assign(value);
}
inline void MilestoneCfg::set_milestoneintro(const char* value) {
  set_has_milestoneintro();
  if (milestoneintro_ == &::google::protobuf::internal::kEmptyString) {
    milestoneintro_ = new ::std::string;
  }
  milestoneintro_->assign(value);
}
inline void MilestoneCfg::set_milestoneintro(const char* value, size_t size) {
  set_has_milestoneintro();
  if (milestoneintro_ == &::google::protobuf::internal::kEmptyString) {
    milestoneintro_ = new ::std::string;
  }
  milestoneintro_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MilestoneCfg::mutable_milestoneintro() {
  set_has_milestoneintro();
  if (milestoneintro_ == &::google::protobuf::internal::kEmptyString) {
    milestoneintro_ = new ::std::string;
  }
  return milestoneintro_;
}
inline ::std::string* MilestoneCfg::release_milestoneintro() {
  clear_has_milestoneintro();
  if (milestoneintro_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = milestoneintro_;
    milestoneintro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MilestoneCfg::set_allocated_milestoneintro(::std::string* milestoneintro) {
  if (milestoneintro_ != &::google::protobuf::internal::kEmptyString) {
    delete milestoneintro_;
  }
  if (milestoneintro) {
    set_has_milestoneintro();
    milestoneintro_ = milestoneintro;
  } else {
    clear_has_milestoneintro();
    milestoneintro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 LeadID = 6;
inline bool MilestoneCfg::has_leadid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MilestoneCfg::set_has_leadid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MilestoneCfg::clear_has_leadid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MilestoneCfg::clear_leadid() {
  leadid_ = 0u;
  clear_has_leadid();
}
inline ::google::protobuf::uint32 MilestoneCfg::leadid() const {
  return leadid_;
}
inline void MilestoneCfg::set_leadid(::google::protobuf::uint32 value) {
  set_has_leadid();
  leadid_ = value;
}

// required uint32 FirstMilestoneID = 7;
inline bool MilestoneCfg::has_firstmilestoneid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MilestoneCfg::set_has_firstmilestoneid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MilestoneCfg::clear_has_firstmilestoneid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MilestoneCfg::clear_firstmilestoneid() {
  firstmilestoneid_ = 0u;
  clear_has_firstmilestoneid();
}
inline ::google::protobuf::uint32 MilestoneCfg::firstmilestoneid() const {
  return firstmilestoneid_;
}
inline void MilestoneCfg::set_firstmilestoneid(::google::protobuf::uint32 value) {
  set_has_firstmilestoneid();
  firstmilestoneid_ = value;
}

// required uint32 NextMilestoneID = 8;
inline bool MilestoneCfg::has_nextmilestoneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MilestoneCfg::set_has_nextmilestoneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MilestoneCfg::clear_has_nextmilestoneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MilestoneCfg::clear_nextmilestoneid() {
  nextmilestoneid_ = 0u;
  clear_has_nextmilestoneid();
}
inline ::google::protobuf::uint32 MilestoneCfg::nextmilestoneid() const {
  return nextmilestoneid_;
}
inline void MilestoneCfg::set_nextmilestoneid(::google::protobuf::uint32 value) {
  set_has_nextmilestoneid();
  nextmilestoneid_ = value;
}

// required .com.cfg.vo.MilestoneTarget Target = 9;
inline bool MilestoneCfg::has_target() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MilestoneCfg::set_has_target() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MilestoneCfg::clear_has_target() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MilestoneCfg::clear_target() {
  if (target_ != NULL) target_->::com::cfg::vo::MilestoneTarget::Clear();
  clear_has_target();
}
inline const ::com::cfg::vo::MilestoneTarget& MilestoneCfg::target() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return target_ != NULL ? *target_ : *default_instance().target_;
#else
  return target_ != NULL ? *target_ : *default_instance_->target_;
#endif
}
inline ::com::cfg::vo::MilestoneTarget* MilestoneCfg::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::com::cfg::vo::MilestoneTarget;
  return target_;
}
inline ::com::cfg::vo::MilestoneTarget* MilestoneCfg::release_target() {
  clear_has_target();
  ::com::cfg::vo::MilestoneTarget* temp = target_;
  target_ = NULL;
  return temp;
}
inline void MilestoneCfg::set_allocated_target(::com::cfg::vo::MilestoneTarget* target) {
  delete target_;
  target_ = target;
  if (target) {
    set_has_target();
  } else {
    clear_has_target();
  }
}

// required .com.cfg.vo.MilestoneAward Award = 10;
inline bool MilestoneCfg::has_award() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MilestoneCfg::set_has_award() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MilestoneCfg::clear_has_award() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MilestoneCfg::clear_award() {
  if (award_ != NULL) award_->::com::cfg::vo::MilestoneAward::Clear();
  clear_has_award();
}
inline const ::com::cfg::vo::MilestoneAward& MilestoneCfg::award() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return award_ != NULL ? *award_ : *default_instance().award_;
#else
  return award_ != NULL ? *award_ : *default_instance_->award_;
#endif
}
inline ::com::cfg::vo::MilestoneAward* MilestoneCfg::mutable_award() {
  set_has_award();
  if (award_ == NULL) award_ = new ::com::cfg::vo::MilestoneAward;
  return award_;
}
inline ::com::cfg::vo::MilestoneAward* MilestoneCfg::release_award() {
  clear_has_award();
  ::com::cfg::vo::MilestoneAward* temp = award_;
  award_ = NULL;
  return temp;
}
inline void MilestoneCfg::set_allocated_award(::com::cfg::vo::MilestoneAward* award) {
  delete award_;
  award_ = award;
  if (award) {
    set_has_award();
  } else {
    clear_has_award();
  }
}

// -------------------------------------------------------------------

// MilestoneCfgSet

// repeated .com.cfg.vo.MilestoneCfg milestonecfg = 1;
inline int MilestoneCfgSet::milestonecfg_size() const {
  return milestonecfg_.size();
}
inline void MilestoneCfgSet::clear_milestonecfg() {
  milestonecfg_.Clear();
}
inline const ::com::cfg::vo::MilestoneCfg& MilestoneCfgSet::milestonecfg(int index) const {
  return milestonecfg_.Get(index);
}
inline ::com::cfg::vo::MilestoneCfg* MilestoneCfgSet::mutable_milestonecfg(int index) {
  return milestonecfg_.Mutable(index);
}
inline ::com::cfg::vo::MilestoneCfg* MilestoneCfgSet::add_milestonecfg() {
  return milestonecfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MilestoneCfg >&
MilestoneCfgSet::milestonecfg() const {
  return milestonecfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MilestoneCfg >*
MilestoneCfgSet::mutable_milestonecfg() {
  return &milestonecfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MilestoneCfg_2eproto__INCLUDED
