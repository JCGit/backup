// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QiangHunCfg.proto

#ifndef PROTOBUF_QiangHunCfg_2eproto__INCLUDED
#define PROTOBUF_QiangHunCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_QiangHunCfg_2eproto();
void protobuf_AssignDesc_QiangHunCfg_2eproto();
void protobuf_ShutdownFile_QiangHunCfg_2eproto();

class QiangHunElementCfg;
class QiangHunGetElement;
class QiangHunCfg;
class QiangHunCfgSet;

// ===================================================================

class QiangHunElementCfg : public ::google::protobuf::MessageLite {
 public:
  QiangHunElementCfg();
  virtual ~QiangHunElementCfg();

  QiangHunElementCfg(const QiangHunElementCfg& from);

  inline QiangHunElementCfg& operator=(const QiangHunElementCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const QiangHunElementCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QiangHunElementCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QiangHunElementCfg* other);

  // implements Message ----------------------------------------------

  QiangHunElementCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const QiangHunElementCfg& from);
  void MergeFrom(const QiangHunElementCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 IsKey = 1;
  inline bool has_iskey() const;
  inline void clear_iskey();
  static const int kIsKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 iskey() const;
  inline void set_iskey(::google::protobuf::uint32 value);

  // required uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 CfgID = 3;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIDFieldNumber = 3;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // required uint32 Cnt = 4;
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 4;
  inline ::google::protobuf::uint32 cnt() const;
  inline void set_cnt(::google::protobuf::uint32 value);

  // required uint32 Prob = 5;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 5;
  inline ::google::protobuf::uint32 prob() const;
  inline void set_prob(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.QiangHunElementCfg)
 private:
  inline void set_has_iskey();
  inline void clear_has_iskey();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_cnt();
  inline void clear_has_cnt();
  inline void set_has_prob();
  inline void clear_has_prob();

  ::google::protobuf::uint32 iskey_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cfgid_;
  ::google::protobuf::uint32 cnt_;
  ::google::protobuf::uint32 prob_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_QiangHunCfg_2eproto();
  friend void protobuf_ShutdownFile_QiangHunCfg_2eproto();

  void InitAsDefaultInstance();
  static QiangHunElementCfg* default_instance_;
};
// -------------------------------------------------------------------

class QiangHunGetElement : public ::google::protobuf::MessageLite {
 public:
  QiangHunGetElement();
  virtual ~QiangHunGetElement();

  QiangHunGetElement(const QiangHunGetElement& from);

  inline QiangHunGetElement& operator=(const QiangHunGetElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const QiangHunGetElement& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QiangHunGetElement* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QiangHunGetElement* other);

  // implements Message ----------------------------------------------

  QiangHunGetElement* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const QiangHunGetElement& from);
  void MergeFrom(const QiangHunGetElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 CfgID = 2;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // required uint32 CountDesc = 3;
  inline bool has_countdesc() const;
  inline void clear_countdesc();
  static const int kCountDescFieldNumber = 3;
  inline ::google::protobuf::uint32 countdesc() const;
  inline void set_countdesc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.QiangHunGetElement)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_countdesc();
  inline void clear_has_countdesc();

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cfgid_;
  ::google::protobuf::uint32 countdesc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_QiangHunCfg_2eproto();
  friend void protobuf_ShutdownFile_QiangHunCfg_2eproto();

  void InitAsDefaultInstance();
  static QiangHunGetElement* default_instance_;
};
// -------------------------------------------------------------------

class QiangHunCfg : public ::google::protobuf::MessageLite {
 public:
  QiangHunCfg();
  virtual ~QiangHunCfg();

  QiangHunCfg(const QiangHunCfg& from);

  inline QiangHunCfg& operator=(const QiangHunCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const QiangHunCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QiangHunCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QiangHunCfg* other);

  // implements Message ----------------------------------------------

  QiangHunCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const QiangHunCfg& from);
  void MergeFrom(const QiangHunCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);

  // required uint32 MinLevel = 2;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);

  // required uint32 MaxLevel = 3;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.QiangHunElementCfg ElmtCfgs = 4;
  inline int elmtcfgs_size() const;
  inline void clear_elmtcfgs();
  static const int kElmtCfgsFieldNumber = 4;
  inline const ::com::cfg::vo::QiangHunElementCfg& elmtcfgs(int index) const;
  inline ::com::cfg::vo::QiangHunElementCfg* mutable_elmtcfgs(int index);
  inline ::com::cfg::vo::QiangHunElementCfg* add_elmtcfgs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunElementCfg >&
      elmtcfgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunElementCfg >*
      mutable_elmtcfgs();

  // repeated .com.cfg.vo.QiangHunGetElement GetElmts = 5;
  inline int getelmts_size() const;
  inline void clear_getelmts();
  static const int kGetElmtsFieldNumber = 5;
  inline const ::com::cfg::vo::QiangHunGetElement& getelmts(int index) const;
  inline ::com::cfg::vo::QiangHunGetElement* mutable_getelmts(int index);
  inline ::com::cfg::vo::QiangHunGetElement* add_getelmts();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunGetElement >&
      getelmts() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunGetElement >*
      mutable_getelmts();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.QiangHunCfg)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_minlevel();
  inline void clear_has_minlevel();
  inline void set_has_maxlevel();
  inline void clear_has_maxlevel();

  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunElementCfg > elmtcfgs_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunGetElement > getelmts_;
  ::google::protobuf::uint32 maxlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_QiangHunCfg_2eproto();
  friend void protobuf_ShutdownFile_QiangHunCfg_2eproto();

  void InitAsDefaultInstance();
  static QiangHunCfg* default_instance_;
};
// -------------------------------------------------------------------

class QiangHunCfgSet : public ::google::protobuf::MessageLite {
 public:
  QiangHunCfgSet();
  virtual ~QiangHunCfgSet();

  QiangHunCfgSet(const QiangHunCfgSet& from);

  inline QiangHunCfgSet& operator=(const QiangHunCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const QiangHunCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QiangHunCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QiangHunCfgSet* other);

  // implements Message ----------------------------------------------

  QiangHunCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const QiangHunCfgSet& from);
  void MergeFrom(const QiangHunCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.QiangHunCfg qianghuncfg = 1;
  inline int qianghuncfg_size() const;
  inline void clear_qianghuncfg();
  static const int kQianghuncfgFieldNumber = 1;
  inline const ::com::cfg::vo::QiangHunCfg& qianghuncfg(int index) const;
  inline ::com::cfg::vo::QiangHunCfg* mutable_qianghuncfg(int index);
  inline ::com::cfg::vo::QiangHunCfg* add_qianghuncfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunCfg >&
      qianghuncfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunCfg >*
      mutable_qianghuncfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.QiangHunCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunCfg > qianghuncfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_QiangHunCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_QiangHunCfg_2eproto();
  friend void protobuf_ShutdownFile_QiangHunCfg_2eproto();

  void InitAsDefaultInstance();
  static QiangHunCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// QiangHunElementCfg

// required uint32 IsKey = 1;
inline bool QiangHunElementCfg::has_iskey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QiangHunElementCfg::set_has_iskey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QiangHunElementCfg::clear_has_iskey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QiangHunElementCfg::clear_iskey() {
  iskey_ = 0u;
  clear_has_iskey();
}
inline ::google::protobuf::uint32 QiangHunElementCfg::iskey() const {
  return iskey_;
}
inline void QiangHunElementCfg::set_iskey(::google::protobuf::uint32 value) {
  set_has_iskey();
  iskey_ = value;
}

// required uint32 Type = 2;
inline bool QiangHunElementCfg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QiangHunElementCfg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QiangHunElementCfg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QiangHunElementCfg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 QiangHunElementCfg::type() const {
  return type_;
}
inline void QiangHunElementCfg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 CfgID = 3;
inline bool QiangHunElementCfg::has_cfgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QiangHunElementCfg::set_has_cfgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QiangHunElementCfg::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QiangHunElementCfg::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 QiangHunElementCfg::cfgid() const {
  return cfgid_;
}
inline void QiangHunElementCfg::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// required uint32 Cnt = 4;
inline bool QiangHunElementCfg::has_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QiangHunElementCfg::set_has_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QiangHunElementCfg::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QiangHunElementCfg::clear_cnt() {
  cnt_ = 0u;
  clear_has_cnt();
}
inline ::google::protobuf::uint32 QiangHunElementCfg::cnt() const {
  return cnt_;
}
inline void QiangHunElementCfg::set_cnt(::google::protobuf::uint32 value) {
  set_has_cnt();
  cnt_ = value;
}

// required uint32 Prob = 5;
inline bool QiangHunElementCfg::has_prob() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QiangHunElementCfg::set_has_prob() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QiangHunElementCfg::clear_has_prob() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QiangHunElementCfg::clear_prob() {
  prob_ = 0u;
  clear_has_prob();
}
inline ::google::protobuf::uint32 QiangHunElementCfg::prob() const {
  return prob_;
}
inline void QiangHunElementCfg::set_prob(::google::protobuf::uint32 value) {
  set_has_prob();
  prob_ = value;
}

// -------------------------------------------------------------------

// QiangHunGetElement

// required uint32 Type = 1;
inline bool QiangHunGetElement::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QiangHunGetElement::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QiangHunGetElement::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QiangHunGetElement::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 QiangHunGetElement::type() const {
  return type_;
}
inline void QiangHunGetElement::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 CfgID = 2;
inline bool QiangHunGetElement::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QiangHunGetElement::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QiangHunGetElement::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QiangHunGetElement::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 QiangHunGetElement::cfgid() const {
  return cfgid_;
}
inline void QiangHunGetElement::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// required uint32 CountDesc = 3;
inline bool QiangHunGetElement::has_countdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QiangHunGetElement::set_has_countdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QiangHunGetElement::clear_has_countdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QiangHunGetElement::clear_countdesc() {
  countdesc_ = 0u;
  clear_has_countdesc();
}
inline ::google::protobuf::uint32 QiangHunGetElement::countdesc() const {
  return countdesc_;
}
inline void QiangHunGetElement::set_countdesc(::google::protobuf::uint32 value) {
  set_has_countdesc();
  countdesc_ = value;
}

// -------------------------------------------------------------------

// QiangHunCfg

// required uint32 Layer = 1;
inline bool QiangHunCfg::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QiangHunCfg::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QiangHunCfg::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QiangHunCfg::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 QiangHunCfg::layer() const {
  return layer_;
}
inline void QiangHunCfg::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// required uint32 MinLevel = 2;
inline bool QiangHunCfg::has_minlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QiangHunCfg::set_has_minlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QiangHunCfg::clear_has_minlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QiangHunCfg::clear_minlevel() {
  minlevel_ = 0u;
  clear_has_minlevel();
}
inline ::google::protobuf::uint32 QiangHunCfg::minlevel() const {
  return minlevel_;
}
inline void QiangHunCfg::set_minlevel(::google::protobuf::uint32 value) {
  set_has_minlevel();
  minlevel_ = value;
}

// required uint32 MaxLevel = 3;
inline bool QiangHunCfg::has_maxlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QiangHunCfg::set_has_maxlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QiangHunCfg::clear_has_maxlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QiangHunCfg::clear_maxlevel() {
  maxlevel_ = 0u;
  clear_has_maxlevel();
}
inline ::google::protobuf::uint32 QiangHunCfg::maxlevel() const {
  return maxlevel_;
}
inline void QiangHunCfg::set_maxlevel(::google::protobuf::uint32 value) {
  set_has_maxlevel();
  maxlevel_ = value;
}

// repeated .com.cfg.vo.QiangHunElementCfg ElmtCfgs = 4;
inline int QiangHunCfg::elmtcfgs_size() const {
  return elmtcfgs_.size();
}
inline void QiangHunCfg::clear_elmtcfgs() {
  elmtcfgs_.Clear();
}
inline const ::com::cfg::vo::QiangHunElementCfg& QiangHunCfg::elmtcfgs(int index) const {
  return elmtcfgs_.Get(index);
}
inline ::com::cfg::vo::QiangHunElementCfg* QiangHunCfg::mutable_elmtcfgs(int index) {
  return elmtcfgs_.Mutable(index);
}
inline ::com::cfg::vo::QiangHunElementCfg* QiangHunCfg::add_elmtcfgs() {
  return elmtcfgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunElementCfg >&
QiangHunCfg::elmtcfgs() const {
  return elmtcfgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunElementCfg >*
QiangHunCfg::mutable_elmtcfgs() {
  return &elmtcfgs_;
}

// repeated .com.cfg.vo.QiangHunGetElement GetElmts = 5;
inline int QiangHunCfg::getelmts_size() const {
  return getelmts_.size();
}
inline void QiangHunCfg::clear_getelmts() {
  getelmts_.Clear();
}
inline const ::com::cfg::vo::QiangHunGetElement& QiangHunCfg::getelmts(int index) const {
  return getelmts_.Get(index);
}
inline ::com::cfg::vo::QiangHunGetElement* QiangHunCfg::mutable_getelmts(int index) {
  return getelmts_.Mutable(index);
}
inline ::com::cfg::vo::QiangHunGetElement* QiangHunCfg::add_getelmts() {
  return getelmts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunGetElement >&
QiangHunCfg::getelmts() const {
  return getelmts_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunGetElement >*
QiangHunCfg::mutable_getelmts() {
  return &getelmts_;
}

// -------------------------------------------------------------------

// QiangHunCfgSet

// repeated .com.cfg.vo.QiangHunCfg qianghuncfg = 1;
inline int QiangHunCfgSet::qianghuncfg_size() const {
  return qianghuncfg_.size();
}
inline void QiangHunCfgSet::clear_qianghuncfg() {
  qianghuncfg_.Clear();
}
inline const ::com::cfg::vo::QiangHunCfg& QiangHunCfgSet::qianghuncfg(int index) const {
  return qianghuncfg_.Get(index);
}
inline ::com::cfg::vo::QiangHunCfg* QiangHunCfgSet::mutable_qianghuncfg(int index) {
  return qianghuncfg_.Mutable(index);
}
inline ::com::cfg::vo::QiangHunCfg* QiangHunCfgSet::add_qianghuncfg() {
  return qianghuncfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunCfg >&
QiangHunCfgSet::qianghuncfg() const {
  return qianghuncfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::QiangHunCfg >*
QiangHunCfgSet::mutable_qianghuncfg() {
  return &qianghuncfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_QiangHunCfg_2eproto__INCLUDED
