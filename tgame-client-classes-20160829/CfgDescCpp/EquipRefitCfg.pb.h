// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EquipRefitCfg.proto

#ifndef PROTOBUF_EquipRefitCfg_2eproto__INCLUDED
#define PROTOBUF_EquipRefitCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EquipRefitCfg_2eproto();
void protobuf_AssignDesc_EquipRefitCfg_2eproto();
void protobuf_ShutdownFile_EquipRefitCfg_2eproto();

class EquipRefitConsumeElement;
class EquipRefitCfg;
class EquipRefitCfgSet;

// ===================================================================

class EquipRefitConsumeElement : public ::google::protobuf::MessageLite {
 public:
  EquipRefitConsumeElement();
  virtual ~EquipRefitConsumeElement();

  EquipRefitConsumeElement(const EquipRefitConsumeElement& from);

  inline EquipRefitConsumeElement& operator=(const EquipRefitConsumeElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipRefitConsumeElement& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipRefitConsumeElement* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipRefitConsumeElement* other);

  // implements Message ----------------------------------------------

  EquipRefitConsumeElement* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipRefitConsumeElement& from);
  void MergeFrom(const EquipRefitConsumeElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementID = 1;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 1;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementType = 2;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EquipRefitConsumeElement)
 private:
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EquipRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_EquipRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static EquipRefitConsumeElement* default_instance_;
};
// -------------------------------------------------------------------

class EquipRefitCfg : public ::google::protobuf::MessageLite {
 public:
  EquipRefitCfg();
  virtual ~EquipRefitCfg();

  EquipRefitCfg(const EquipRefitCfg& from);

  inline EquipRefitCfg& operator=(const EquipRefitCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipRefitCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipRefitCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipRefitCfg* other);

  // implements Message ----------------------------------------------

  EquipRefitCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipRefitCfg& from);
  void MergeFrom(const EquipRefitCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);

  // required uint32 Color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // required uint32 CostCoin = 3;
  inline bool has_costcoin() const;
  inline void clear_costcoin();
  static const int kCostCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 costcoin() const;
  inline void set_costcoin(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.EquipRefitConsumeElement ElmtList = 4;
  inline int elmtlist_size() const;
  inline void clear_elmtlist();
  static const int kElmtListFieldNumber = 4;
  inline const ::com::cfg::vo::EquipRefitConsumeElement& elmtlist(int index) const;
  inline ::com::cfg::vo::EquipRefitConsumeElement* mutable_elmtlist(int index);
  inline ::com::cfg::vo::EquipRefitConsumeElement* add_elmtlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitConsumeElement >&
      elmtlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitConsumeElement >*
      mutable_elmtlist();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EquipRefitCfg)
 private:
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_costcoin();
  inline void clear_has_costcoin();

  ::google::protobuf::uint32 part_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitConsumeElement > elmtlist_;
  ::google::protobuf::uint32 costcoin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EquipRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_EquipRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static EquipRefitCfg* default_instance_;
};
// -------------------------------------------------------------------

class EquipRefitCfgSet : public ::google::protobuf::MessageLite {
 public:
  EquipRefitCfgSet();
  virtual ~EquipRefitCfgSet();

  EquipRefitCfgSet(const EquipRefitCfgSet& from);

  inline EquipRefitCfgSet& operator=(const EquipRefitCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const EquipRefitCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EquipRefitCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EquipRefitCfgSet* other);

  // implements Message ----------------------------------------------

  EquipRefitCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EquipRefitCfgSet& from);
  void MergeFrom(const EquipRefitCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.EquipRefitCfg equiprefitcfg = 1;
  inline int equiprefitcfg_size() const;
  inline void clear_equiprefitcfg();
  static const int kEquiprefitcfgFieldNumber = 1;
  inline const ::com::cfg::vo::EquipRefitCfg& equiprefitcfg(int index) const;
  inline ::com::cfg::vo::EquipRefitCfg* mutable_equiprefitcfg(int index);
  inline ::com::cfg::vo::EquipRefitCfg* add_equiprefitcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitCfg >&
      equiprefitcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitCfg >*
      mutable_equiprefitcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.EquipRefitCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitCfg > equiprefitcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_EquipRefitCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_EquipRefitCfg_2eproto();
  friend void protobuf_ShutdownFile_EquipRefitCfg_2eproto();

  void InitAsDefaultInstance();
  static EquipRefitCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipRefitConsumeElement

// required uint32 ElementID = 1;
inline bool EquipRefitConsumeElement::has_elementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipRefitConsumeElement::set_has_elementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipRefitConsumeElement::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipRefitConsumeElement::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 EquipRefitConsumeElement::elementid() const {
  return elementid_;
}
inline void EquipRefitConsumeElement::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementType = 2;
inline bool EquipRefitConsumeElement::has_elementtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipRefitConsumeElement::set_has_elementtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipRefitConsumeElement::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipRefitConsumeElement::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 EquipRefitConsumeElement::elementtype() const {
  return elementtype_;
}
inline void EquipRefitConsumeElement::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementCnt = 3;
inline bool EquipRefitConsumeElement::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipRefitConsumeElement::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipRefitConsumeElement::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipRefitConsumeElement::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 EquipRefitConsumeElement::elementcnt() const {
  return elementcnt_;
}
inline void EquipRefitConsumeElement::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// EquipRefitCfg

// required uint32 Part = 1;
inline bool EquipRefitCfg::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipRefitCfg::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipRefitCfg::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipRefitCfg::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 EquipRefitCfg::part() const {
  return part_;
}
inline void EquipRefitCfg::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required uint32 Color = 2;
inline bool EquipRefitCfg::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipRefitCfg::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipRefitCfg::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipRefitCfg::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 EquipRefitCfg::color() const {
  return color_;
}
inline void EquipRefitCfg::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
}

// required uint32 CostCoin = 3;
inline bool EquipRefitCfg::has_costcoin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipRefitCfg::set_has_costcoin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipRefitCfg::clear_has_costcoin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipRefitCfg::clear_costcoin() {
  costcoin_ = 0u;
  clear_has_costcoin();
}
inline ::google::protobuf::uint32 EquipRefitCfg::costcoin() const {
  return costcoin_;
}
inline void EquipRefitCfg::set_costcoin(::google::protobuf::uint32 value) {
  set_has_costcoin();
  costcoin_ = value;
}

// repeated .com.cfg.vo.EquipRefitConsumeElement ElmtList = 4;
inline int EquipRefitCfg::elmtlist_size() const {
  return elmtlist_.size();
}
inline void EquipRefitCfg::clear_elmtlist() {
  elmtlist_.Clear();
}
inline const ::com::cfg::vo::EquipRefitConsumeElement& EquipRefitCfg::elmtlist(int index) const {
  return elmtlist_.Get(index);
}
inline ::com::cfg::vo::EquipRefitConsumeElement* EquipRefitCfg::mutable_elmtlist(int index) {
  return elmtlist_.Mutable(index);
}
inline ::com::cfg::vo::EquipRefitConsumeElement* EquipRefitCfg::add_elmtlist() {
  return elmtlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitConsumeElement >&
EquipRefitCfg::elmtlist() const {
  return elmtlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitConsumeElement >*
EquipRefitCfg::mutable_elmtlist() {
  return &elmtlist_;
}

// -------------------------------------------------------------------

// EquipRefitCfgSet

// repeated .com.cfg.vo.EquipRefitCfg equiprefitcfg = 1;
inline int EquipRefitCfgSet::equiprefitcfg_size() const {
  return equiprefitcfg_.size();
}
inline void EquipRefitCfgSet::clear_equiprefitcfg() {
  equiprefitcfg_.Clear();
}
inline const ::com::cfg::vo::EquipRefitCfg& EquipRefitCfgSet::equiprefitcfg(int index) const {
  return equiprefitcfg_.Get(index);
}
inline ::com::cfg::vo::EquipRefitCfg* EquipRefitCfgSet::mutable_equiprefitcfg(int index) {
  return equiprefitcfg_.Mutable(index);
}
inline ::com::cfg::vo::EquipRefitCfg* EquipRefitCfgSet::add_equiprefitcfg() {
  return equiprefitcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitCfg >&
EquipRefitCfgSet::equiprefitcfg() const {
  return equiprefitcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::EquipRefitCfg >*
EquipRefitCfgSet::mutable_equiprefitcfg() {
  return &equiprefitcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EquipRefitCfg_2eproto__INCLUDED
