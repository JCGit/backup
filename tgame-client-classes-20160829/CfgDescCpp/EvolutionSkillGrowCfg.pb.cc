// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EvolutionSkillGrowCfg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EvolutionSkillGrowCfg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

void protobuf_ShutdownFile_EvolutionSkillGrowCfg_2eproto() {
  delete EvolutionSkillGrowCfg::default_instance_;
  delete EvolutionSkillGrowCfgSet::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  EvolutionSkillGrowCfg::default_instance_ = new EvolutionSkillGrowCfg();
  EvolutionSkillGrowCfgSet::default_instance_ = new EvolutionSkillGrowCfgSet();
  EvolutionSkillGrowCfg::default_instance_->InitAsDefaultInstance();
  EvolutionSkillGrowCfgSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EvolutionSkillGrowCfg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto_once_);
void protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto_once_,
                 &protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EvolutionSkillGrowCfg_2eproto {
  StaticDescriptorInitializer_EvolutionSkillGrowCfg_2eproto() {
    protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto();
  }
} static_descriptor_initializer_EvolutionSkillGrowCfg_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int EvolutionSkillGrowCfg::kStartSkillIDFieldNumber;
const int EvolutionSkillGrowCfg::kGrowMultiFieldNumber;
const int EvolutionSkillGrowCfg::kSkillIDsFieldNumber;
#endif  // !_MSC_VER

EvolutionSkillGrowCfg::EvolutionSkillGrowCfg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EvolutionSkillGrowCfg::InitAsDefaultInstance() {
}

EvolutionSkillGrowCfg::EvolutionSkillGrowCfg(const EvolutionSkillGrowCfg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EvolutionSkillGrowCfg::SharedCtor() {
  _cached_size_ = 0;
  startskillid_ = 0u;
  growmulti_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EvolutionSkillGrowCfg::~EvolutionSkillGrowCfg() {
  SharedDtor();
}

void EvolutionSkillGrowCfg::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EvolutionSkillGrowCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EvolutionSkillGrowCfg& EvolutionSkillGrowCfg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto();
#endif
  return *default_instance_;
}

EvolutionSkillGrowCfg* EvolutionSkillGrowCfg::default_instance_ = NULL;

EvolutionSkillGrowCfg* EvolutionSkillGrowCfg::New() const {
  return new EvolutionSkillGrowCfg;
}

void EvolutionSkillGrowCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    startskillid_ = 0u;
    growmulti_ = 0u;
  }
  skillids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EvolutionSkillGrowCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 StartSkillID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startskillid_)));
          set_has_startskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_GrowMulti;
        break;
      }

      // required uint32 GrowMulti = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GrowMulti:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &growmulti_)));
          set_has_growmulti();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_SkillIDs;
        break;
      }

      // repeated uint32 SkillIDs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SkillIDs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_skillids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_skillids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_SkillIDs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EvolutionSkillGrowCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 StartSkillID = 1;
  if (has_startskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->startskillid(), output);
  }

  // required uint32 GrowMulti = 2;
  if (has_growmulti()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->growmulti(), output);
  }

  // repeated uint32 SkillIDs = 3;
  for (int i = 0; i < this->skillids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->skillids(i), output);
  }

}

int EvolutionSkillGrowCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 StartSkillID = 1;
    if (has_startskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->startskillid());
    }

    // required uint32 GrowMulti = 2;
    if (has_growmulti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->growmulti());
    }

  }
  // repeated uint32 SkillIDs = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->skillids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->skillids(i));
    }
    total_size += 1 * this->skillids_size() + data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvolutionSkillGrowCfg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EvolutionSkillGrowCfg*>(&from));
}

void EvolutionSkillGrowCfg::MergeFrom(const EvolutionSkillGrowCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillids_.MergeFrom(from.skillids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startskillid()) {
      set_startskillid(from.startskillid());
    }
    if (from.has_growmulti()) {
      set_growmulti(from.growmulti());
    }
  }
}

void EvolutionSkillGrowCfg::CopyFrom(const EvolutionSkillGrowCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvolutionSkillGrowCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EvolutionSkillGrowCfg::Swap(EvolutionSkillGrowCfg* other) {
  if (other != this) {
    std::swap(startskillid_, other->startskillid_);
    std::swap(growmulti_, other->growmulti_);
    skillids_.Swap(&other->skillids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EvolutionSkillGrowCfg::GetTypeName() const {
  return "com.cfg.vo.EvolutionSkillGrowCfg";
}


// ===================================================================

#ifndef _MSC_VER
const int EvolutionSkillGrowCfgSet::kEvolutionskillgrowcfgFieldNumber;
#endif  // !_MSC_VER

EvolutionSkillGrowCfgSet::EvolutionSkillGrowCfgSet()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EvolutionSkillGrowCfgSet::InitAsDefaultInstance() {
}

EvolutionSkillGrowCfgSet::EvolutionSkillGrowCfgSet(const EvolutionSkillGrowCfgSet& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EvolutionSkillGrowCfgSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EvolutionSkillGrowCfgSet::~EvolutionSkillGrowCfgSet() {
  SharedDtor();
}

void EvolutionSkillGrowCfgSet::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EvolutionSkillGrowCfgSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EvolutionSkillGrowCfgSet& EvolutionSkillGrowCfgSet::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EvolutionSkillGrowCfg_2eproto();
#endif
  return *default_instance_;
}

EvolutionSkillGrowCfgSet* EvolutionSkillGrowCfgSet::default_instance_ = NULL;

EvolutionSkillGrowCfgSet* EvolutionSkillGrowCfgSet::New() const {
  return new EvolutionSkillGrowCfgSet;
}

void EvolutionSkillGrowCfgSet::Clear() {
  evolutionskillgrowcfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EvolutionSkillGrowCfgSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.cfg.vo.EvolutionSkillGrowCfg evolutionskillgrowcfg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_evolutionskillgrowcfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_evolutionskillgrowcfg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_evolutionskillgrowcfg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EvolutionSkillGrowCfgSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.cfg.vo.EvolutionSkillGrowCfg evolutionskillgrowcfg = 1;
  for (int i = 0; i < this->evolutionskillgrowcfg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->evolutionskillgrowcfg(i), output);
  }

}

int EvolutionSkillGrowCfgSet::ByteSize() const {
  int total_size = 0;

  // repeated .com.cfg.vo.EvolutionSkillGrowCfg evolutionskillgrowcfg = 1;
  total_size += 1 * this->evolutionskillgrowcfg_size();
  for (int i = 0; i < this->evolutionskillgrowcfg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->evolutionskillgrowcfg(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvolutionSkillGrowCfgSet::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EvolutionSkillGrowCfgSet*>(&from));
}

void EvolutionSkillGrowCfgSet::MergeFrom(const EvolutionSkillGrowCfgSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  evolutionskillgrowcfg_.MergeFrom(from.evolutionskillgrowcfg_);
}

void EvolutionSkillGrowCfgSet::CopyFrom(const EvolutionSkillGrowCfgSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvolutionSkillGrowCfgSet::IsInitialized() const {

  for (int i = 0; i < evolutionskillgrowcfg_size(); i++) {
    if (!this->evolutionskillgrowcfg(i).IsInitialized()) return false;
  }
  return true;
}

void EvolutionSkillGrowCfgSet::Swap(EvolutionSkillGrowCfgSet* other) {
  if (other != this) {
    evolutionskillgrowcfg_.Swap(&other->evolutionskillgrowcfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EvolutionSkillGrowCfgSet::GetTypeName() const {
  return "com.cfg.vo.EvolutionSkillGrowCfgSet";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)
