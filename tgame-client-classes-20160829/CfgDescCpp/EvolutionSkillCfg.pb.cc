// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EvolutionSkillCfg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EvolutionSkillCfg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

void protobuf_ShutdownFile_EvolutionSkillCfg_2eproto() {
  delete EvolutionSkillCfg::default_instance_;
  delete EvolutionSkillCfgSet::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_EvolutionSkillCfg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_EvolutionSkillCfg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  EvolutionSkillCfg::default_instance_ = new EvolutionSkillCfg();
  EvolutionSkillCfgSet::default_instance_ = new EvolutionSkillCfgSet();
  EvolutionSkillCfg::default_instance_->InitAsDefaultInstance();
  EvolutionSkillCfgSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EvolutionSkillCfg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_EvolutionSkillCfg_2eproto_once_);
void protobuf_AddDesc_EvolutionSkillCfg_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_EvolutionSkillCfg_2eproto_once_,
                 &protobuf_AddDesc_EvolutionSkillCfg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EvolutionSkillCfg_2eproto {
  StaticDescriptorInitializer_EvolutionSkillCfg_2eproto() {
    protobuf_AddDesc_EvolutionSkillCfg_2eproto();
  }
} static_descriptor_initializer_EvolutionSkillCfg_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int EvolutionSkillCfg::kEvolutionIDFieldNumber;
const int EvolutionSkillCfg::kHPFieldNumber;
const int EvolutionSkillCfg::kMPFieldNumber;
const int EvolutionSkillCfg::kATKFieldNumber;
const int EvolutionSkillCfg::kDEFFieldNumber;
const int EvolutionSkillCfg::kMoveSpeedFieldNumber;
const int EvolutionSkillCfg::kRunSpeedFieldNumber;
const int EvolutionSkillCfg::kDodgeDistFieldNumber;
const int EvolutionSkillCfg::kDodgeCDFieldNumber;
const int EvolutionSkillCfg::kNeedLevelFieldNumber;
const int EvolutionSkillCfg::kNeedCoinFieldNumber;
const int EvolutionSkillCfg::kNeedPowerStoneFieldNumber;
const int EvolutionSkillCfg::kSkillIDFieldNumber;
#endif  // !_MSC_VER

EvolutionSkillCfg::EvolutionSkillCfg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EvolutionSkillCfg::InitAsDefaultInstance() {
}

EvolutionSkillCfg::EvolutionSkillCfg(const EvolutionSkillCfg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EvolutionSkillCfg::SharedCtor() {
  _cached_size_ = 0;
  evolutionid_ = 0u;
  hp_ = 0u;
  mp_ = 0u;
  atk_ = 0u;
  def_ = 0u;
  movespeed_ = 0u;
  runspeed_ = 0u;
  dodgedist_ = 0u;
  dodgecd_ = 0u;
  needlevel_ = 0u;
  needcoin_ = 0u;
  needpowerstone_ = 0u;
  skillid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EvolutionSkillCfg::~EvolutionSkillCfg() {
  SharedDtor();
}

void EvolutionSkillCfg::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EvolutionSkillCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EvolutionSkillCfg& EvolutionSkillCfg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EvolutionSkillCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EvolutionSkillCfg_2eproto();
#endif
  return *default_instance_;
}

EvolutionSkillCfg* EvolutionSkillCfg::default_instance_ = NULL;

EvolutionSkillCfg* EvolutionSkillCfg::New() const {
  return new EvolutionSkillCfg;
}

void EvolutionSkillCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    evolutionid_ = 0u;
    hp_ = 0u;
    mp_ = 0u;
    atk_ = 0u;
    def_ = 0u;
    movespeed_ = 0u;
    runspeed_ = 0u;
    dodgedist_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    dodgecd_ = 0u;
    needlevel_ = 0u;
    needcoin_ = 0u;
    needpowerstone_ = 0u;
    skillid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EvolutionSkillCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 EvolutionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evolutionid_)));
          set_has_evolutionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_HP;
        break;
      }

      // required uint32 HP = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_HP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_MP;
        break;
      }

      // required uint32 MP = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ATK;
        break;
      }

      // required uint32 ATK = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ATK:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &atk_)));
          set_has_atk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_DEF;
        break;
      }

      // required uint32 DEF = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DEF:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_)));
          set_has_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_MoveSpeed;
        break;
      }

      // required uint32 MoveSpeed = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MoveSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movespeed_)));
          set_has_movespeed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_RunSpeed;
        break;
      }

      // required uint32 RunSpeed = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RunSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runspeed_)));
          set_has_runspeed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_DodgeDist;
        break;
      }

      // required uint32 DodgeDist = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DodgeDist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dodgedist_)));
          set_has_dodgedist();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_DodgeCD;
        break;
      }

      // required uint32 DodgeCD = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DodgeCD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dodgecd_)));
          set_has_dodgecd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_NeedLevel;
        break;
      }

      // required uint32 NeedLevel = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_NeedLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &needlevel_)));
          set_has_needlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_NeedCoin;
        break;
      }

      // required uint32 NeedCoin = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_NeedCoin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &needcoin_)));
          set_has_needcoin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_NeedPowerStone;
        break;
      }

      // required uint32 NeedPowerStone = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_NeedPowerStone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &needpowerstone_)));
          set_has_needpowerstone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_SkillID;
        break;
      }

      // required uint32 SkillID = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EvolutionSkillCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 EvolutionID = 1;
  if (has_evolutionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->evolutionid(), output);
  }

  // required uint32 HP = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hp(), output);
  }

  // required uint32 MP = 3;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mp(), output);
  }

  // required uint32 ATK = 4;
  if (has_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->atk(), output);
  }

  // required uint32 DEF = 5;
  if (has_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->def(), output);
  }

  // required uint32 MoveSpeed = 6;
  if (has_movespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->movespeed(), output);
  }

  // required uint32 RunSpeed = 7;
  if (has_runspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->runspeed(), output);
  }

  // required uint32 DodgeDist = 8;
  if (has_dodgedist()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dodgedist(), output);
  }

  // required uint32 DodgeCD = 9;
  if (has_dodgecd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->dodgecd(), output);
  }

  // required uint32 NeedLevel = 10;
  if (has_needlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->needlevel(), output);
  }

  // required uint32 NeedCoin = 11;
  if (has_needcoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->needcoin(), output);
  }

  // required uint32 NeedPowerStone = 12;
  if (has_needpowerstone()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->needpowerstone(), output);
  }

  // required uint32 SkillID = 13;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->skillid(), output);
  }

}

int EvolutionSkillCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 EvolutionID = 1;
    if (has_evolutionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evolutionid());
    }

    // required uint32 HP = 2;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hp());
    }

    // required uint32 MP = 3;
    if (has_mp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mp());
    }

    // required uint32 ATK = 4;
    if (has_atk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->atk());
    }

    // required uint32 DEF = 5;
    if (has_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def());
    }

    // required uint32 MoveSpeed = 6;
    if (has_movespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->movespeed());
    }

    // required uint32 RunSpeed = 7;
    if (has_runspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->runspeed());
    }

    // required uint32 DodgeDist = 8;
    if (has_dodgedist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dodgedist());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 DodgeCD = 9;
    if (has_dodgecd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dodgecd());
    }

    // required uint32 NeedLevel = 10;
    if (has_needlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->needlevel());
    }

    // required uint32 NeedCoin = 11;
    if (has_needcoin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->needcoin());
    }

    // required uint32 NeedPowerStone = 12;
    if (has_needpowerstone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->needpowerstone());
    }

    // required uint32 SkillID = 13;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvolutionSkillCfg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EvolutionSkillCfg*>(&from));
}

void EvolutionSkillCfg::MergeFrom(const EvolutionSkillCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_evolutionid()) {
      set_evolutionid(from.evolutionid());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_atk()) {
      set_atk(from.atk());
    }
    if (from.has_def()) {
      set_def(from.def());
    }
    if (from.has_movespeed()) {
      set_movespeed(from.movespeed());
    }
    if (from.has_runspeed()) {
      set_runspeed(from.runspeed());
    }
    if (from.has_dodgedist()) {
      set_dodgedist(from.dodgedist());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dodgecd()) {
      set_dodgecd(from.dodgecd());
    }
    if (from.has_needlevel()) {
      set_needlevel(from.needlevel());
    }
    if (from.has_needcoin()) {
      set_needcoin(from.needcoin());
    }
    if (from.has_needpowerstone()) {
      set_needpowerstone(from.needpowerstone());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
}

void EvolutionSkillCfg::CopyFrom(const EvolutionSkillCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvolutionSkillCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;

  return true;
}

void EvolutionSkillCfg::Swap(EvolutionSkillCfg* other) {
  if (other != this) {
    std::swap(evolutionid_, other->evolutionid_);
    std::swap(hp_, other->hp_);
    std::swap(mp_, other->mp_);
    std::swap(atk_, other->atk_);
    std::swap(def_, other->def_);
    std::swap(movespeed_, other->movespeed_);
    std::swap(runspeed_, other->runspeed_);
    std::swap(dodgedist_, other->dodgedist_);
    std::swap(dodgecd_, other->dodgecd_);
    std::swap(needlevel_, other->needlevel_);
    std::swap(needcoin_, other->needcoin_);
    std::swap(needpowerstone_, other->needpowerstone_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EvolutionSkillCfg::GetTypeName() const {
  return "com.cfg.vo.EvolutionSkillCfg";
}


// ===================================================================

#ifndef _MSC_VER
const int EvolutionSkillCfgSet::kEvolutionskillcfgFieldNumber;
#endif  // !_MSC_VER

EvolutionSkillCfgSet::EvolutionSkillCfgSet()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void EvolutionSkillCfgSet::InitAsDefaultInstance() {
}

EvolutionSkillCfgSet::EvolutionSkillCfgSet(const EvolutionSkillCfgSet& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void EvolutionSkillCfgSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EvolutionSkillCfgSet::~EvolutionSkillCfgSet() {
  SharedDtor();
}

void EvolutionSkillCfgSet::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void EvolutionSkillCfgSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EvolutionSkillCfgSet& EvolutionSkillCfgSet::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_EvolutionSkillCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_EvolutionSkillCfg_2eproto();
#endif
  return *default_instance_;
}

EvolutionSkillCfgSet* EvolutionSkillCfgSet::default_instance_ = NULL;

EvolutionSkillCfgSet* EvolutionSkillCfgSet::New() const {
  return new EvolutionSkillCfgSet;
}

void EvolutionSkillCfgSet::Clear() {
  evolutionskillcfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool EvolutionSkillCfgSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.cfg.vo.EvolutionSkillCfg evolutionskillcfg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_evolutionskillcfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_evolutionskillcfg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_evolutionskillcfg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EvolutionSkillCfgSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.cfg.vo.EvolutionSkillCfg evolutionskillcfg = 1;
  for (int i = 0; i < this->evolutionskillcfg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->evolutionskillcfg(i), output);
  }

}

int EvolutionSkillCfgSet::ByteSize() const {
  int total_size = 0;

  // repeated .com.cfg.vo.EvolutionSkillCfg evolutionskillcfg = 1;
  total_size += 1 * this->evolutionskillcfg_size();
  for (int i = 0; i < this->evolutionskillcfg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->evolutionskillcfg(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvolutionSkillCfgSet::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const EvolutionSkillCfgSet*>(&from));
}

void EvolutionSkillCfgSet::MergeFrom(const EvolutionSkillCfgSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  evolutionskillcfg_.MergeFrom(from.evolutionskillcfg_);
}

void EvolutionSkillCfgSet::CopyFrom(const EvolutionSkillCfgSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvolutionSkillCfgSet::IsInitialized() const {

  for (int i = 0; i < evolutionskillcfg_size(); i++) {
    if (!this->evolutionskillcfg(i).IsInitialized()) return false;
  }
  return true;
}

void EvolutionSkillCfgSet::Swap(EvolutionSkillCfgSet* other) {
  if (other != this) {
    evolutionskillcfg_.Swap(&other->evolutionskillcfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string EvolutionSkillCfgSet::GetTypeName() const {
  return "com.cfg.vo.EvolutionSkillCfgSet";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)
