// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SumChargeActCfg.proto

#ifndef PROTOBUF_SumChargeActCfg_2eproto__INCLUDED
#define PROTOBUF_SumChargeActCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SumChargeActCfg_2eproto();
void protobuf_AssignDesc_SumChargeActCfg_2eproto();
void protobuf_ShutdownFile_SumChargeActCfg_2eproto();

class SumChargeActCfgElmt;
class SumChargeActCfg;
class SumChargeActCfgSet;

// ===================================================================

class SumChargeActCfgElmt : public ::google::protobuf::MessageLite {
 public:
  SumChargeActCfgElmt();
  virtual ~SumChargeActCfgElmt();

  SumChargeActCfgElmt(const SumChargeActCfgElmt& from);

  inline SumChargeActCfgElmt& operator=(const SumChargeActCfgElmt& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargeActCfgElmt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargeActCfgElmt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargeActCfgElmt* other);

  // implements Message ----------------------------------------------

  SumChargeActCfgElmt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargeActCfgElmt& from);
  void MergeFrom(const SumChargeActCfgElmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementType = 1;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementID = 2;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 2;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumChargeActCfgElmt)
 private:
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumChargeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumChargeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumChargeActCfgElmt* default_instance_;
};
// -------------------------------------------------------------------

class SumChargeActCfg : public ::google::protobuf::MessageLite {
 public:
  SumChargeActCfg();
  virtual ~SumChargeActCfg();

  SumChargeActCfg(const SumChargeActCfg& from);

  inline SumChargeActCfg& operator=(const SumChargeActCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargeActCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargeActCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargeActCfg* other);

  // implements Message ----------------------------------------------

  SumChargeActCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargeActCfg& from);
  void MergeFrom(const SumChargeActCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 TotalCharge = 2;
  inline bool has_totalcharge() const;
  inline void clear_totalcharge();
  static const int kTotalChargeFieldNumber = 2;
  inline ::google::protobuf::uint32 totalcharge() const;
  inline void set_totalcharge(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.SumChargeActCfgElmt ElmtLst = 3;
  inline int elmtlst_size() const;
  inline void clear_elmtlst();
  static const int kElmtLstFieldNumber = 3;
  inline const ::com::cfg::vo::SumChargeActCfgElmt& elmtlst(int index) const;
  inline ::com::cfg::vo::SumChargeActCfgElmt* mutable_elmtlst(int index);
  inline ::com::cfg::vo::SumChargeActCfgElmt* add_elmtlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfgElmt >&
      elmtlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfgElmt >*
      mutable_elmtlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumChargeActCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_totalcharge();
  inline void clear_has_totalcharge();

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 totalcharge_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfgElmt > elmtlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumChargeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumChargeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumChargeActCfg* default_instance_;
};
// -------------------------------------------------------------------

class SumChargeActCfgSet : public ::google::protobuf::MessageLite {
 public:
  SumChargeActCfgSet();
  virtual ~SumChargeActCfgSet();

  SumChargeActCfgSet(const SumChargeActCfgSet& from);

  inline SumChargeActCfgSet& operator=(const SumChargeActCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const SumChargeActCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SumChargeActCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SumChargeActCfgSet* other);

  // implements Message ----------------------------------------------

  SumChargeActCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SumChargeActCfgSet& from);
  void MergeFrom(const SumChargeActCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.SumChargeActCfg sumChargeActCfg = 1;
  inline int sumchargeactcfg_size() const;
  inline void clear_sumchargeactcfg();
  static const int kSumChargeActCfgFieldNumber = 1;
  inline const ::com::cfg::vo::SumChargeActCfg& sumchargeactcfg(int index) const;
  inline ::com::cfg::vo::SumChargeActCfg* mutable_sumchargeactcfg(int index);
  inline ::com::cfg::vo::SumChargeActCfg* add_sumchargeactcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfg >&
      sumchargeactcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfg >*
      mutable_sumchargeactcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SumChargeActCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfg > sumchargeactcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SumChargeActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SumChargeActCfg_2eproto();
  friend void protobuf_ShutdownFile_SumChargeActCfg_2eproto();

  void InitAsDefaultInstance();
  static SumChargeActCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// SumChargeActCfgElmt

// required uint32 ElementType = 1;
inline bool SumChargeActCfgElmt::has_elementtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumChargeActCfgElmt::set_has_elementtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumChargeActCfgElmt::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumChargeActCfgElmt::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 SumChargeActCfgElmt::elementtype() const {
  return elementtype_;
}
inline void SumChargeActCfgElmt::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementID = 2;
inline bool SumChargeActCfgElmt::has_elementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumChargeActCfgElmt::set_has_elementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumChargeActCfgElmt::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumChargeActCfgElmt::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 SumChargeActCfgElmt::elementid() const {
  return elementid_;
}
inline void SumChargeActCfgElmt::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementCnt = 3;
inline bool SumChargeActCfgElmt::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SumChargeActCfgElmt::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SumChargeActCfgElmt::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SumChargeActCfgElmt::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 SumChargeActCfgElmt::elementcnt() const {
  return elementcnt_;
}
inline void SumChargeActCfgElmt::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// SumChargeActCfg

// required uint32 Level = 1;
inline bool SumChargeActCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SumChargeActCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SumChargeActCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SumChargeActCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SumChargeActCfg::level() const {
  return level_;
}
inline void SumChargeActCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 TotalCharge = 2;
inline bool SumChargeActCfg::has_totalcharge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SumChargeActCfg::set_has_totalcharge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SumChargeActCfg::clear_has_totalcharge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SumChargeActCfg::clear_totalcharge() {
  totalcharge_ = 0u;
  clear_has_totalcharge();
}
inline ::google::protobuf::uint32 SumChargeActCfg::totalcharge() const {
  return totalcharge_;
}
inline void SumChargeActCfg::set_totalcharge(::google::protobuf::uint32 value) {
  set_has_totalcharge();
  totalcharge_ = value;
}

// repeated .com.cfg.vo.SumChargeActCfgElmt ElmtLst = 3;
inline int SumChargeActCfg::elmtlst_size() const {
  return elmtlst_.size();
}
inline void SumChargeActCfg::clear_elmtlst() {
  elmtlst_.Clear();
}
inline const ::com::cfg::vo::SumChargeActCfgElmt& SumChargeActCfg::elmtlst(int index) const {
  return elmtlst_.Get(index);
}
inline ::com::cfg::vo::SumChargeActCfgElmt* SumChargeActCfg::mutable_elmtlst(int index) {
  return elmtlst_.Mutable(index);
}
inline ::com::cfg::vo::SumChargeActCfgElmt* SumChargeActCfg::add_elmtlst() {
  return elmtlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfgElmt >&
SumChargeActCfg::elmtlst() const {
  return elmtlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfgElmt >*
SumChargeActCfg::mutable_elmtlst() {
  return &elmtlst_;
}

// -------------------------------------------------------------------

// SumChargeActCfgSet

// repeated .com.cfg.vo.SumChargeActCfg sumChargeActCfg = 1;
inline int SumChargeActCfgSet::sumchargeactcfg_size() const {
  return sumchargeactcfg_.size();
}
inline void SumChargeActCfgSet::clear_sumchargeactcfg() {
  sumchargeactcfg_.Clear();
}
inline const ::com::cfg::vo::SumChargeActCfg& SumChargeActCfgSet::sumchargeactcfg(int index) const {
  return sumchargeactcfg_.Get(index);
}
inline ::com::cfg::vo::SumChargeActCfg* SumChargeActCfgSet::mutable_sumchargeactcfg(int index) {
  return sumchargeactcfg_.Mutable(index);
}
inline ::com::cfg::vo::SumChargeActCfg* SumChargeActCfgSet::add_sumchargeactcfg() {
  return sumchargeactcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfg >&
SumChargeActCfgSet::sumchargeactcfg() const {
  return sumchargeactcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SumChargeActCfg >*
SumChargeActCfgSet::mutable_sumchargeactcfg() {
  return &sumchargeactcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SumChargeActCfg_2eproto__INCLUDED
