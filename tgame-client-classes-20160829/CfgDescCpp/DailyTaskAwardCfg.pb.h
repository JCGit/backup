// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DailyTaskAwardCfg.proto

#ifndef PROTOBUF_DailyTaskAwardCfg_2eproto__INCLUDED
#define PROTOBUF_DailyTaskAwardCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto();
void protobuf_AssignDesc_DailyTaskAwardCfg_2eproto();
void protobuf_ShutdownFile_DailyTaskAwardCfg_2eproto();

class DailyTaskAward;
class DailyTaskAwardCfg;
class DailyTaskAwardCfgSet;

// ===================================================================

class DailyTaskAward : public ::google::protobuf::MessageLite {
 public:
  DailyTaskAward();
  virtual ~DailyTaskAward();

  DailyTaskAward(const DailyTaskAward& from);

  inline DailyTaskAward& operator=(const DailyTaskAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyTaskAward& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyTaskAward* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyTaskAward* other);

  // implements Message ----------------------------------------------

  DailyTaskAward* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyTaskAward& from);
  void MergeFrom(const DailyTaskAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 Exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 Gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 AwardType = 4;
  inline bool has_awardtype() const;
  inline void clear_awardtype();
  static const int kAwardTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 awardtype() const;
  inline void set_awardtype(::google::protobuf::uint32 value);

  // required uint32 AwardCfgID = 5;
  inline bool has_awardcfgid() const;
  inline void clear_awardcfgid();
  static const int kAwardCfgIDFieldNumber = 5;
  inline ::google::protobuf::uint32 awardcfgid() const;
  inline void set_awardcfgid(::google::protobuf::uint32 value);

  // required uint32 AwardCnt = 6;
  inline bool has_awardcnt() const;
  inline void clear_awardcnt();
  static const int kAwardCntFieldNumber = 6;
  inline ::google::protobuf::uint32 awardcnt() const;
  inline void set_awardcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyTaskAward)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_awardtype();
  inline void clear_has_awardtype();
  inline void set_has_awardcfgid();
  inline void clear_has_awardcfgid();
  inline void set_has_awardcnt();
  inline void clear_has_awardcnt();

  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 awardtype_;
  ::google::protobuf::uint32 awardcfgid_;
  ::google::protobuf::uint32 awardcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyTaskAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyTaskAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAward* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskAwardCfg : public ::google::protobuf::MessageLite {
 public:
  DailyTaskAwardCfg();
  virtual ~DailyTaskAwardCfg();

  DailyTaskAwardCfg(const DailyTaskAwardCfg& from);

  inline DailyTaskAwardCfg& operator=(const DailyTaskAwardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyTaskAwardCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyTaskAwardCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyTaskAwardCfg* other);

  // implements Message ----------------------------------------------

  DailyTaskAwardCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyTaskAwardCfg& from);
  void MergeFrom(const DailyTaskAwardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 StartLv = 1;
  inline bool has_startlv() const;
  inline void clear_startlv();
  static const int kStartLvFieldNumber = 1;
  inline ::google::protobuf::uint32 startlv() const;
  inline void set_startlv(::google::protobuf::uint32 value);

  // required uint32 EndLv = 2;
  inline bool has_endlv() const;
  inline void clear_endlv();
  static const int kEndLvFieldNumber = 2;
  inline ::google::protobuf::uint32 endlv() const;
  inline void set_endlv(::google::protobuf::uint32 value);

  // required uint32 MainAwardType = 3;
  inline bool has_mainawardtype() const;
  inline void clear_mainawardtype();
  static const int kMainAwardTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 mainawardtype() const;
  inline void set_mainawardtype(::google::protobuf::uint32 value);

  // required .com.cfg.vo.DailyTaskAward Award = 4;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 4;
  inline const ::com::cfg::vo::DailyTaskAward& award() const;
  inline ::com::cfg::vo::DailyTaskAward* mutable_award();
  inline ::com::cfg::vo::DailyTaskAward* release_award();
  inline void set_allocated_award(::com::cfg::vo::DailyTaskAward* award);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyTaskAwardCfg)
 private:
  inline void set_has_startlv();
  inline void clear_has_startlv();
  inline void set_has_endlv();
  inline void clear_has_endlv();
  inline void set_has_mainawardtype();
  inline void clear_has_mainawardtype();
  inline void set_has_award();
  inline void clear_has_award();

  ::google::protobuf::uint32 startlv_;
  ::google::protobuf::uint32 endlv_;
  ::com::cfg::vo::DailyTaskAward* award_;
  ::google::protobuf::uint32 mainawardtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyTaskAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyTaskAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAwardCfg* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskAwardCfgSet : public ::google::protobuf::MessageLite {
 public:
  DailyTaskAwardCfgSet();
  virtual ~DailyTaskAwardCfgSet();

  DailyTaskAwardCfgSet(const DailyTaskAwardCfgSet& from);

  inline DailyTaskAwardCfgSet& operator=(const DailyTaskAwardCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyTaskAwardCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyTaskAwardCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyTaskAwardCfgSet* other);

  // implements Message ----------------------------------------------

  DailyTaskAwardCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyTaskAwardCfgSet& from);
  void MergeFrom(const DailyTaskAwardCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.DailyTaskAwardCfg dailytaskawardcfg = 1;
  inline int dailytaskawardcfg_size() const;
  inline void clear_dailytaskawardcfg();
  static const int kDailytaskawardcfgFieldNumber = 1;
  inline const ::com::cfg::vo::DailyTaskAwardCfg& dailytaskawardcfg(int index) const;
  inline ::com::cfg::vo::DailyTaskAwardCfg* mutable_dailytaskawardcfg(int index);
  inline ::com::cfg::vo::DailyTaskAwardCfg* add_dailytaskawardcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyTaskAwardCfg >&
      dailytaskawardcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyTaskAwardCfg >*
      mutable_dailytaskawardcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyTaskAwardCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyTaskAwardCfg > dailytaskawardcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyTaskAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyTaskAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyTaskAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyTaskAwardCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyTaskAward

// required uint32 Coin = 1;
inline bool DailyTaskAward::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskAward::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskAward::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskAward::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 DailyTaskAward::coin() const {
  return coin_;
}
inline void DailyTaskAward::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required uint32 Exp = 2;
inline bool DailyTaskAward::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskAward::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskAward::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskAward::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 DailyTaskAward::exp() const {
  return exp_;
}
inline void DailyTaskAward::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 Gold = 3;
inline bool DailyTaskAward::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskAward::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskAward::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskAward::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 DailyTaskAward::gold() const {
  return gold_;
}
inline void DailyTaskAward::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 AwardType = 4;
inline bool DailyTaskAward::has_awardtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskAward::set_has_awardtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskAward::clear_has_awardtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskAward::clear_awardtype() {
  awardtype_ = 0u;
  clear_has_awardtype();
}
inline ::google::protobuf::uint32 DailyTaskAward::awardtype() const {
  return awardtype_;
}
inline void DailyTaskAward::set_awardtype(::google::protobuf::uint32 value) {
  set_has_awardtype();
  awardtype_ = value;
}

// required uint32 AwardCfgID = 5;
inline bool DailyTaskAward::has_awardcfgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyTaskAward::set_has_awardcfgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyTaskAward::clear_has_awardcfgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyTaskAward::clear_awardcfgid() {
  awardcfgid_ = 0u;
  clear_has_awardcfgid();
}
inline ::google::protobuf::uint32 DailyTaskAward::awardcfgid() const {
  return awardcfgid_;
}
inline void DailyTaskAward::set_awardcfgid(::google::protobuf::uint32 value) {
  set_has_awardcfgid();
  awardcfgid_ = value;
}

// required uint32 AwardCnt = 6;
inline bool DailyTaskAward::has_awardcnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyTaskAward::set_has_awardcnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyTaskAward::clear_has_awardcnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyTaskAward::clear_awardcnt() {
  awardcnt_ = 0u;
  clear_has_awardcnt();
}
inline ::google::protobuf::uint32 DailyTaskAward::awardcnt() const {
  return awardcnt_;
}
inline void DailyTaskAward::set_awardcnt(::google::protobuf::uint32 value) {
  set_has_awardcnt();
  awardcnt_ = value;
}

// -------------------------------------------------------------------

// DailyTaskAwardCfg

// required uint32 StartLv = 1;
inline bool DailyTaskAwardCfg::has_startlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskAwardCfg::set_has_startlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskAwardCfg::clear_has_startlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskAwardCfg::clear_startlv() {
  startlv_ = 0u;
  clear_has_startlv();
}
inline ::google::protobuf::uint32 DailyTaskAwardCfg::startlv() const {
  return startlv_;
}
inline void DailyTaskAwardCfg::set_startlv(::google::protobuf::uint32 value) {
  set_has_startlv();
  startlv_ = value;
}

// required uint32 EndLv = 2;
inline bool DailyTaskAwardCfg::has_endlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskAwardCfg::set_has_endlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskAwardCfg::clear_has_endlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskAwardCfg::clear_endlv() {
  endlv_ = 0u;
  clear_has_endlv();
}
inline ::google::protobuf::uint32 DailyTaskAwardCfg::endlv() const {
  return endlv_;
}
inline void DailyTaskAwardCfg::set_endlv(::google::protobuf::uint32 value) {
  set_has_endlv();
  endlv_ = value;
}

// required uint32 MainAwardType = 3;
inline bool DailyTaskAwardCfg::has_mainawardtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyTaskAwardCfg::set_has_mainawardtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyTaskAwardCfg::clear_has_mainawardtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyTaskAwardCfg::clear_mainawardtype() {
  mainawardtype_ = 0u;
  clear_has_mainawardtype();
}
inline ::google::protobuf::uint32 DailyTaskAwardCfg::mainawardtype() const {
  return mainawardtype_;
}
inline void DailyTaskAwardCfg::set_mainawardtype(::google::protobuf::uint32 value) {
  set_has_mainawardtype();
  mainawardtype_ = value;
}

// required .com.cfg.vo.DailyTaskAward Award = 4;
inline bool DailyTaskAwardCfg::has_award() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyTaskAwardCfg::set_has_award() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyTaskAwardCfg::clear_has_award() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyTaskAwardCfg::clear_award() {
  if (award_ != NULL) award_->::com::cfg::vo::DailyTaskAward::Clear();
  clear_has_award();
}
inline const ::com::cfg::vo::DailyTaskAward& DailyTaskAwardCfg::award() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return award_ != NULL ? *award_ : *default_instance().award_;
#else
  return award_ != NULL ? *award_ : *default_instance_->award_;
#endif
}
inline ::com::cfg::vo::DailyTaskAward* DailyTaskAwardCfg::mutable_award() {
  set_has_award();
  if (award_ == NULL) award_ = new ::com::cfg::vo::DailyTaskAward;
  return award_;
}
inline ::com::cfg::vo::DailyTaskAward* DailyTaskAwardCfg::release_award() {
  clear_has_award();
  ::com::cfg::vo::DailyTaskAward* temp = award_;
  award_ = NULL;
  return temp;
}
inline void DailyTaskAwardCfg::set_allocated_award(::com::cfg::vo::DailyTaskAward* award) {
  delete award_;
  award_ = award;
  if (award) {
    set_has_award();
  } else {
    clear_has_award();
  }
}

// -------------------------------------------------------------------

// DailyTaskAwardCfgSet

// repeated .com.cfg.vo.DailyTaskAwardCfg dailytaskawardcfg = 1;
inline int DailyTaskAwardCfgSet::dailytaskawardcfg_size() const {
  return dailytaskawardcfg_.size();
}
inline void DailyTaskAwardCfgSet::clear_dailytaskawardcfg() {
  dailytaskawardcfg_.Clear();
}
inline const ::com::cfg::vo::DailyTaskAwardCfg& DailyTaskAwardCfgSet::dailytaskawardcfg(int index) const {
  return dailytaskawardcfg_.Get(index);
}
inline ::com::cfg::vo::DailyTaskAwardCfg* DailyTaskAwardCfgSet::mutable_dailytaskawardcfg(int index) {
  return dailytaskawardcfg_.Mutable(index);
}
inline ::com::cfg::vo::DailyTaskAwardCfg* DailyTaskAwardCfgSet::add_dailytaskawardcfg() {
  return dailytaskawardcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyTaskAwardCfg >&
DailyTaskAwardCfgSet::dailytaskawardcfg() const {
  return dailytaskawardcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyTaskAwardCfg >*
DailyTaskAwardCfgSet::mutable_dailytaskawardcfg() {
  return &dailytaskawardcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DailyTaskAwardCfg_2eproto__INCLUDED
