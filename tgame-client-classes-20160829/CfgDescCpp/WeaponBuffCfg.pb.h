// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeaponBuffCfg.proto

#ifndef PROTOBUF_WeaponBuffCfg_2eproto__INCLUDED
#define PROTOBUF_WeaponBuffCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WeaponBuffCfg_2eproto();
void protobuf_AssignDesc_WeaponBuffCfg_2eproto();
void protobuf_ShutdownFile_WeaponBuffCfg_2eproto();

class WeaponBuffCfg;
class WeaponBuffCfgSet;

// ===================================================================

class WeaponBuffCfg : public ::google::protobuf::MessageLite {
 public:
  WeaponBuffCfg();
  virtual ~WeaponBuffCfg();

  WeaponBuffCfg(const WeaponBuffCfg& from);

  inline WeaponBuffCfg& operator=(const WeaponBuffCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const WeaponBuffCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WeaponBuffCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WeaponBuffCfg* other);

  // implements Message ----------------------------------------------

  WeaponBuffCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WeaponBuffCfg& from);
  void MergeFrom(const WeaponBuffCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 WeaponCfgId = 2;
  inline bool has_weaponcfgid() const;
  inline void clear_weaponcfgid();
  static const int kWeaponCfgIdFieldNumber = 2;
  inline ::google::protobuf::uint32 weaponcfgid() const;
  inline void set_weaponcfgid(::google::protobuf::uint32 value);

  // required uint32 WeaponLv = 3;
  inline bool has_weaponlv() const;
  inline void clear_weaponlv();
  static const int kWeaponLvFieldNumber = 3;
  inline ::google::protobuf::uint32 weaponlv() const;
  inline void set_weaponlv(::google::protobuf::uint32 value);

  // required uint32 WeaponColor = 4;
  inline bool has_weaponcolor() const;
  inline void clear_weaponcolor();
  static const int kWeaponColorFieldNumber = 4;
  inline ::google::protobuf::uint32 weaponcolor() const;
  inline void set_weaponcolor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WeaponBuffCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weaponcfgid();
  inline void clear_has_weaponcfgid();
  inline void set_has_weaponlv();
  inline void clear_has_weaponlv();
  inline void set_has_weaponcolor();
  inline void clear_has_weaponcolor();

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 weaponcfgid_;
  ::google::protobuf::uint32 weaponlv_;
  ::google::protobuf::uint32 weaponcolor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WeaponBuffCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WeaponBuffCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WeaponBuffCfg_2eproto();
  friend void protobuf_ShutdownFile_WeaponBuffCfg_2eproto();

  void InitAsDefaultInstance();
  static WeaponBuffCfg* default_instance_;
};
// -------------------------------------------------------------------

class WeaponBuffCfgSet : public ::google::protobuf::MessageLite {
 public:
  WeaponBuffCfgSet();
  virtual ~WeaponBuffCfgSet();

  WeaponBuffCfgSet(const WeaponBuffCfgSet& from);

  inline WeaponBuffCfgSet& operator=(const WeaponBuffCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const WeaponBuffCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WeaponBuffCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WeaponBuffCfgSet* other);

  // implements Message ----------------------------------------------

  WeaponBuffCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WeaponBuffCfgSet& from);
  void MergeFrom(const WeaponBuffCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.WeaponBuffCfg weaponBuffCfg = 1;
  inline int weaponbuffcfg_size() const;
  inline void clear_weaponbuffcfg();
  static const int kWeaponBuffCfgFieldNumber = 1;
  inline const ::com::cfg::vo::WeaponBuffCfg& weaponbuffcfg(int index) const;
  inline ::com::cfg::vo::WeaponBuffCfg* mutable_weaponbuffcfg(int index);
  inline ::com::cfg::vo::WeaponBuffCfg* add_weaponbuffcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponBuffCfg >&
      weaponbuffcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponBuffCfg >*
      mutable_weaponbuffcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WeaponBuffCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponBuffCfg > weaponbuffcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WeaponBuffCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WeaponBuffCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WeaponBuffCfg_2eproto();
  friend void protobuf_ShutdownFile_WeaponBuffCfg_2eproto();

  void InitAsDefaultInstance();
  static WeaponBuffCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// WeaponBuffCfg

// required uint32 ID = 1;
inline bool WeaponBuffCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeaponBuffCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeaponBuffCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeaponBuffCfg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WeaponBuffCfg::id() const {
  return id_;
}
inline void WeaponBuffCfg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 WeaponCfgId = 2;
inline bool WeaponBuffCfg::has_weaponcfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeaponBuffCfg::set_has_weaponcfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeaponBuffCfg::clear_has_weaponcfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeaponBuffCfg::clear_weaponcfgid() {
  weaponcfgid_ = 0u;
  clear_has_weaponcfgid();
}
inline ::google::protobuf::uint32 WeaponBuffCfg::weaponcfgid() const {
  return weaponcfgid_;
}
inline void WeaponBuffCfg::set_weaponcfgid(::google::protobuf::uint32 value) {
  set_has_weaponcfgid();
  weaponcfgid_ = value;
}

// required uint32 WeaponLv = 3;
inline bool WeaponBuffCfg::has_weaponlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeaponBuffCfg::set_has_weaponlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeaponBuffCfg::clear_has_weaponlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeaponBuffCfg::clear_weaponlv() {
  weaponlv_ = 0u;
  clear_has_weaponlv();
}
inline ::google::protobuf::uint32 WeaponBuffCfg::weaponlv() const {
  return weaponlv_;
}
inline void WeaponBuffCfg::set_weaponlv(::google::protobuf::uint32 value) {
  set_has_weaponlv();
  weaponlv_ = value;
}

// required uint32 WeaponColor = 4;
inline bool WeaponBuffCfg::has_weaponcolor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeaponBuffCfg::set_has_weaponcolor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeaponBuffCfg::clear_has_weaponcolor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeaponBuffCfg::clear_weaponcolor() {
  weaponcolor_ = 0u;
  clear_has_weaponcolor();
}
inline ::google::protobuf::uint32 WeaponBuffCfg::weaponcolor() const {
  return weaponcolor_;
}
inline void WeaponBuffCfg::set_weaponcolor(::google::protobuf::uint32 value) {
  set_has_weaponcolor();
  weaponcolor_ = value;
}

// -------------------------------------------------------------------

// WeaponBuffCfgSet

// repeated .com.cfg.vo.WeaponBuffCfg weaponBuffCfg = 1;
inline int WeaponBuffCfgSet::weaponbuffcfg_size() const {
  return weaponbuffcfg_.size();
}
inline void WeaponBuffCfgSet::clear_weaponbuffcfg() {
  weaponbuffcfg_.Clear();
}
inline const ::com::cfg::vo::WeaponBuffCfg& WeaponBuffCfgSet::weaponbuffcfg(int index) const {
  return weaponbuffcfg_.Get(index);
}
inline ::com::cfg::vo::WeaponBuffCfg* WeaponBuffCfgSet::mutable_weaponbuffcfg(int index) {
  return weaponbuffcfg_.Mutable(index);
}
inline ::com::cfg::vo::WeaponBuffCfg* WeaponBuffCfgSet::add_weaponbuffcfg() {
  return weaponbuffcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponBuffCfg >&
WeaponBuffCfgSet::weaponbuffcfg() const {
  return weaponbuffcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WeaponBuffCfg >*
WeaponBuffCfgSet::mutable_weaponbuffcfg() {
  return &weaponbuffcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WeaponBuffCfg_2eproto__INCLUDED
