// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WarmPromptCfg.proto

#ifndef PROTOBUF_WarmPromptCfg_2eproto__INCLUDED
#define PROTOBUF_WarmPromptCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WarmPromptCfg_2eproto();
void protobuf_AssignDesc_WarmPromptCfg_2eproto();
void protobuf_ShutdownFile_WarmPromptCfg_2eproto();

class WarmPromptCfg;
class WarmPromptCfgSet;

// ===================================================================

class WarmPromptCfg : public ::google::protobuf::MessageLite {
 public:
  WarmPromptCfg();
  virtual ~WarmPromptCfg();

  WarmPromptCfg(const WarmPromptCfg& from);

  inline WarmPromptCfg& operator=(const WarmPromptCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const WarmPromptCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WarmPromptCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WarmPromptCfg* other);

  // implements Message ----------------------------------------------

  WarmPromptCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WarmPromptCfg& from);
  void MergeFrom(const WarmPromptCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string Prompt = 2;
  inline bool has_prompt() const;
  inline void clear_prompt();
  static const int kPromptFieldNumber = 2;
  inline const ::std::string& prompt() const;
  inline void set_prompt(const ::std::string& value);
  inline void set_prompt(const char* value);
  inline void set_prompt(const char* value, size_t size);
  inline ::std::string* mutable_prompt();
  inline ::std::string* release_prompt();
  inline void set_allocated_prompt(::std::string* prompt);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WarmPromptCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_prompt();
  inline void clear_has_prompt();

  ::std::string* prompt_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WarmPromptCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WarmPromptCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WarmPromptCfg_2eproto();
  friend void protobuf_ShutdownFile_WarmPromptCfg_2eproto();

  void InitAsDefaultInstance();
  static WarmPromptCfg* default_instance_;
};
// -------------------------------------------------------------------

class WarmPromptCfgSet : public ::google::protobuf::MessageLite {
 public:
  WarmPromptCfgSet();
  virtual ~WarmPromptCfgSet();

  WarmPromptCfgSet(const WarmPromptCfgSet& from);

  inline WarmPromptCfgSet& operator=(const WarmPromptCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const WarmPromptCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WarmPromptCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WarmPromptCfgSet* other);

  // implements Message ----------------------------------------------

  WarmPromptCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WarmPromptCfgSet& from);
  void MergeFrom(const WarmPromptCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.WarmPromptCfg warmpromptcfg = 1;
  inline int warmpromptcfg_size() const;
  inline void clear_warmpromptcfg();
  static const int kWarmpromptcfgFieldNumber = 1;
  inline const ::com::cfg::vo::WarmPromptCfg& warmpromptcfg(int index) const;
  inline ::com::cfg::vo::WarmPromptCfg* mutable_warmpromptcfg(int index);
  inline ::com::cfg::vo::WarmPromptCfg* add_warmpromptcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WarmPromptCfg >&
      warmpromptcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WarmPromptCfg >*
      mutable_warmpromptcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WarmPromptCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WarmPromptCfg > warmpromptcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WarmPromptCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WarmPromptCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WarmPromptCfg_2eproto();
  friend void protobuf_ShutdownFile_WarmPromptCfg_2eproto();

  void InitAsDefaultInstance();
  static WarmPromptCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// WarmPromptCfg

// required uint32 ID = 1;
inline bool WarmPromptCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarmPromptCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarmPromptCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarmPromptCfg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WarmPromptCfg::id() const {
  return id_;
}
inline void WarmPromptCfg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required string Prompt = 2;
inline bool WarmPromptCfg::has_prompt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarmPromptCfg::set_has_prompt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarmPromptCfg::clear_has_prompt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarmPromptCfg::clear_prompt() {
  if (prompt_ != &::google::protobuf::internal::kEmptyString) {
    prompt_->clear();
  }
  clear_has_prompt();
}
inline const ::std::string& WarmPromptCfg::prompt() const {
  return *prompt_;
}
inline void WarmPromptCfg::set_prompt(const ::std::string& value) {
  set_has_prompt();
  if (prompt_ == &::google::protobuf::internal::kEmptyString) {
    prompt_ = new ::std::string;
  }
  prompt_->assign(value);
}
inline void WarmPromptCfg::set_prompt(const char* value) {
  set_has_prompt();
  if (prompt_ == &::google::protobuf::internal::kEmptyString) {
    prompt_ = new ::std::string;
  }
  prompt_->assign(value);
}
inline void WarmPromptCfg::set_prompt(const char* value, size_t size) {
  set_has_prompt();
  if (prompt_ == &::google::protobuf::internal::kEmptyString) {
    prompt_ = new ::std::string;
  }
  prompt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WarmPromptCfg::mutable_prompt() {
  set_has_prompt();
  if (prompt_ == &::google::protobuf::internal::kEmptyString) {
    prompt_ = new ::std::string;
  }
  return prompt_;
}
inline ::std::string* WarmPromptCfg::release_prompt() {
  clear_has_prompt();
  if (prompt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = prompt_;
    prompt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WarmPromptCfg::set_allocated_prompt(::std::string* prompt) {
  if (prompt_ != &::google::protobuf::internal::kEmptyString) {
    delete prompt_;
  }
  if (prompt) {
    set_has_prompt();
    prompt_ = prompt;
  } else {
    clear_has_prompt();
    prompt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WarmPromptCfgSet

// repeated .com.cfg.vo.WarmPromptCfg warmpromptcfg = 1;
inline int WarmPromptCfgSet::warmpromptcfg_size() const {
  return warmpromptcfg_.size();
}
inline void WarmPromptCfgSet::clear_warmpromptcfg() {
  warmpromptcfg_.Clear();
}
inline const ::com::cfg::vo::WarmPromptCfg& WarmPromptCfgSet::warmpromptcfg(int index) const {
  return warmpromptcfg_.Get(index);
}
inline ::com::cfg::vo::WarmPromptCfg* WarmPromptCfgSet::mutable_warmpromptcfg(int index) {
  return warmpromptcfg_.Mutable(index);
}
inline ::com::cfg::vo::WarmPromptCfg* WarmPromptCfgSet::add_warmpromptcfg() {
  return warmpromptcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WarmPromptCfg >&
WarmPromptCfgSet::warmpromptcfg() const {
  return warmpromptcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WarmPromptCfg >*
WarmPromptCfgSet::mutable_warmpromptcfg() {
  return &warmpromptcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WarmPromptCfg_2eproto__INCLUDED
