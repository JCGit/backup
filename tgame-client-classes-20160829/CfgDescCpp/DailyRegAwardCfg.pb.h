// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DailyRegAwardCfg.proto

#ifndef PROTOBUF_DailyRegAwardCfg_2eproto__INCLUDED
#define PROTOBUF_DailyRegAwardCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DailyRegAwardCfg_2eproto();
void protobuf_AssignDesc_DailyRegAwardCfg_2eproto();
void protobuf_ShutdownFile_DailyRegAwardCfg_2eproto();

class DailyRegAwardElement;
class DailyRegAwardCfg;
class DailyRegAwardCfgSet;

// ===================================================================

class DailyRegAwardElement : public ::google::protobuf::MessageLite {
 public:
  DailyRegAwardElement();
  virtual ~DailyRegAwardElement();

  DailyRegAwardElement(const DailyRegAwardElement& from);

  inline DailyRegAwardElement& operator=(const DailyRegAwardElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyRegAwardElement& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyRegAwardElement* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyRegAwardElement* other);

  // implements Message ----------------------------------------------

  DailyRegAwardElement* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyRegAwardElement& from);
  void MergeFrom(const DailyRegAwardElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementID = 1;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 1;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementType = 2;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyRegAwardElement)
 private:
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyRegAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyRegAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyRegAwardElement* default_instance_;
};
// -------------------------------------------------------------------

class DailyRegAwardCfg : public ::google::protobuf::MessageLite {
 public:
  DailyRegAwardCfg();
  virtual ~DailyRegAwardCfg();

  DailyRegAwardCfg(const DailyRegAwardCfg& from);

  inline DailyRegAwardCfg& operator=(const DailyRegAwardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyRegAwardCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyRegAwardCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyRegAwardCfg* other);

  // implements Message ----------------------------------------------

  DailyRegAwardCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyRegAwardCfg& from);
  void MergeFrom(const DailyRegAwardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.DailyRegAwardElement AwardLst = 2;
  inline int awardlst_size() const;
  inline void clear_awardlst();
  static const int kAwardLstFieldNumber = 2;
  inline const ::com::cfg::vo::DailyRegAwardElement& awardlst(int index) const;
  inline ::com::cfg::vo::DailyRegAwardElement* mutable_awardlst(int index);
  inline ::com::cfg::vo::DailyRegAwardElement* add_awardlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardElement >&
      awardlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardElement >*
      mutable_awardlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyRegAwardCfg)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardElement > awardlst_;
  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyRegAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyRegAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyRegAwardCfg* default_instance_;
};
// -------------------------------------------------------------------

class DailyRegAwardCfgSet : public ::google::protobuf::MessageLite {
 public:
  DailyRegAwardCfgSet();
  virtual ~DailyRegAwardCfgSet();

  DailyRegAwardCfgSet(const DailyRegAwardCfgSet& from);

  inline DailyRegAwardCfgSet& operator=(const DailyRegAwardCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyRegAwardCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyRegAwardCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyRegAwardCfgSet* other);

  // implements Message ----------------------------------------------

  DailyRegAwardCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyRegAwardCfgSet& from);
  void MergeFrom(const DailyRegAwardCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.DailyRegAwardCfg dailyregawardcfg = 1;
  inline int dailyregawardcfg_size() const;
  inline void clear_dailyregawardcfg();
  static const int kDailyregawardcfgFieldNumber = 1;
  inline const ::com::cfg::vo::DailyRegAwardCfg& dailyregawardcfg(int index) const;
  inline ::com::cfg::vo::DailyRegAwardCfg* mutable_dailyregawardcfg(int index);
  inline ::com::cfg::vo::DailyRegAwardCfg* add_dailyregawardcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardCfg >&
      dailyregawardcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardCfg >*
      mutable_dailyregawardcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyRegAwardCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardCfg > dailyregawardcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyRegAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyRegAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyRegAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyRegAwardCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyRegAwardElement

// required uint32 ElementID = 1;
inline bool DailyRegAwardElement::has_elementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyRegAwardElement::set_has_elementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyRegAwardElement::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyRegAwardElement::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 DailyRegAwardElement::elementid() const {
  return elementid_;
}
inline void DailyRegAwardElement::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementType = 2;
inline bool DailyRegAwardElement::has_elementtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyRegAwardElement::set_has_elementtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyRegAwardElement::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyRegAwardElement::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 DailyRegAwardElement::elementtype() const {
  return elementtype_;
}
inline void DailyRegAwardElement::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementCnt = 3;
inline bool DailyRegAwardElement::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyRegAwardElement::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyRegAwardElement::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyRegAwardElement::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 DailyRegAwardElement::elementcnt() const {
  return elementcnt_;
}
inline void DailyRegAwardElement::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// DailyRegAwardCfg

// required uint32 Day = 1;
inline bool DailyRegAwardCfg::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyRegAwardCfg::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyRegAwardCfg::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyRegAwardCfg::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 DailyRegAwardCfg::day() const {
  return day_;
}
inline void DailyRegAwardCfg::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// repeated .com.cfg.vo.DailyRegAwardElement AwardLst = 2;
inline int DailyRegAwardCfg::awardlst_size() const {
  return awardlst_.size();
}
inline void DailyRegAwardCfg::clear_awardlst() {
  awardlst_.Clear();
}
inline const ::com::cfg::vo::DailyRegAwardElement& DailyRegAwardCfg::awardlst(int index) const {
  return awardlst_.Get(index);
}
inline ::com::cfg::vo::DailyRegAwardElement* DailyRegAwardCfg::mutable_awardlst(int index) {
  return awardlst_.Mutable(index);
}
inline ::com::cfg::vo::DailyRegAwardElement* DailyRegAwardCfg::add_awardlst() {
  return awardlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardElement >&
DailyRegAwardCfg::awardlst() const {
  return awardlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardElement >*
DailyRegAwardCfg::mutable_awardlst() {
  return &awardlst_;
}

// -------------------------------------------------------------------

// DailyRegAwardCfgSet

// repeated .com.cfg.vo.DailyRegAwardCfg dailyregawardcfg = 1;
inline int DailyRegAwardCfgSet::dailyregawardcfg_size() const {
  return dailyregawardcfg_.size();
}
inline void DailyRegAwardCfgSet::clear_dailyregawardcfg() {
  dailyregawardcfg_.Clear();
}
inline const ::com::cfg::vo::DailyRegAwardCfg& DailyRegAwardCfgSet::dailyregawardcfg(int index) const {
  return dailyregawardcfg_.Get(index);
}
inline ::com::cfg::vo::DailyRegAwardCfg* DailyRegAwardCfgSet::mutable_dailyregawardcfg(int index) {
  return dailyregawardcfg_.Mutable(index);
}
inline ::com::cfg::vo::DailyRegAwardCfg* DailyRegAwardCfgSet::add_dailyregawardcfg() {
  return dailyregawardcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardCfg >&
DailyRegAwardCfgSet::dailyregawardcfg() const {
  return dailyregawardcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyRegAwardCfg >*
DailyRegAwardCfgSet::mutable_dailyregawardcfg() {
  return &dailyregawardcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DailyRegAwardCfg_2eproto__INCLUDED
