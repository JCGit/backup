// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AvatarCfg.proto

#ifndef PROTOBUF_AvatarCfg_2eproto__INCLUDED
#define PROTOBUF_AvatarCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AvatarCfg_2eproto();
void protobuf_AssignDesc_AvatarCfg_2eproto();
void protobuf_ShutdownFile_AvatarCfg_2eproto();

class AvatarCfg;
class AvatarCfgSet;

// ===================================================================

class AvatarCfg : public ::google::protobuf::MessageLite {
 public:
  AvatarCfg();
  virtual ~AvatarCfg();

  AvatarCfg(const AvatarCfg& from);

  inline AvatarCfg& operator=(const AvatarCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const AvatarCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AvatarCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AvatarCfg* other);

  // implements Message ----------------------------------------------

  AvatarCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AvatarCfg& from);
  void MergeFrom(const AvatarCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 AvatarID = 1;
  inline bool has_avatarid() const;
  inline void clear_avatarid();
  static const int kAvatarIDFieldNumber = 1;
  inline ::google::protobuf::uint32 avatarid() const;
  inline void set_avatarid(::google::protobuf::uint32 value);

  // required string Res = 2;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 2;
  inline const ::std::string& res() const;
  inline void set_res(const ::std::string& value);
  inline void set_res(const char* value);
  inline void set_res(const char* value, size_t size);
  inline ::std::string* mutable_res();
  inline ::std::string* release_res();
  inline void set_allocated_res(::std::string* res);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.AvatarCfg)
 private:
  inline void set_has_avatarid();
  inline void clear_has_avatarid();
  inline void set_has_res();
  inline void clear_has_res();

  ::std::string* res_;
  ::google::protobuf::uint32 avatarid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_AvatarCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_AvatarCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_AvatarCfg_2eproto();
  friend void protobuf_ShutdownFile_AvatarCfg_2eproto();

  void InitAsDefaultInstance();
  static AvatarCfg* default_instance_;
};
// -------------------------------------------------------------------

class AvatarCfgSet : public ::google::protobuf::MessageLite {
 public:
  AvatarCfgSet();
  virtual ~AvatarCfgSet();

  AvatarCfgSet(const AvatarCfgSet& from);

  inline AvatarCfgSet& operator=(const AvatarCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const AvatarCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AvatarCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AvatarCfgSet* other);

  // implements Message ----------------------------------------------

  AvatarCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AvatarCfgSet& from);
  void MergeFrom(const AvatarCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.AvatarCfg avatarCfg = 1;
  inline int avatarcfg_size() const;
  inline void clear_avatarcfg();
  static const int kAvatarCfgFieldNumber = 1;
  inline const ::com::cfg::vo::AvatarCfg& avatarcfg(int index) const;
  inline ::com::cfg::vo::AvatarCfg* mutable_avatarcfg(int index);
  inline ::com::cfg::vo::AvatarCfg* add_avatarcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AvatarCfg >&
      avatarcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AvatarCfg >*
      mutable_avatarcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.AvatarCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AvatarCfg > avatarcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_AvatarCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_AvatarCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_AvatarCfg_2eproto();
  friend void protobuf_ShutdownFile_AvatarCfg_2eproto();

  void InitAsDefaultInstance();
  static AvatarCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// AvatarCfg

// required uint32 AvatarID = 1;
inline bool AvatarCfg::has_avatarid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AvatarCfg::set_has_avatarid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AvatarCfg::clear_has_avatarid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AvatarCfg::clear_avatarid() {
  avatarid_ = 0u;
  clear_has_avatarid();
}
inline ::google::protobuf::uint32 AvatarCfg::avatarid() const {
  return avatarid_;
}
inline void AvatarCfg::set_avatarid(::google::protobuf::uint32 value) {
  set_has_avatarid();
  avatarid_ = value;
}

// required string Res = 2;
inline bool AvatarCfg::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AvatarCfg::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AvatarCfg::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AvatarCfg::clear_res() {
  if (res_ != &::google::protobuf::internal::kEmptyString) {
    res_->clear();
  }
  clear_has_res();
}
inline const ::std::string& AvatarCfg::res() const {
  return *res_;
}
inline void AvatarCfg::set_res(const ::std::string& value) {
  set_has_res();
  if (res_ == &::google::protobuf::internal::kEmptyString) {
    res_ = new ::std::string;
  }
  res_->assign(value);
}
inline void AvatarCfg::set_res(const char* value) {
  set_has_res();
  if (res_ == &::google::protobuf::internal::kEmptyString) {
    res_ = new ::std::string;
  }
  res_->assign(value);
}
inline void AvatarCfg::set_res(const char* value, size_t size) {
  set_has_res();
  if (res_ == &::google::protobuf::internal::kEmptyString) {
    res_ = new ::std::string;
  }
  res_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AvatarCfg::mutable_res() {
  set_has_res();
  if (res_ == &::google::protobuf::internal::kEmptyString) {
    res_ = new ::std::string;
  }
  return res_;
}
inline ::std::string* AvatarCfg::release_res() {
  clear_has_res();
  if (res_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = res_;
    res_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AvatarCfg::set_allocated_res(::std::string* res) {
  if (res_ != &::google::protobuf::internal::kEmptyString) {
    delete res_;
  }
  if (res) {
    set_has_res();
    res_ = res;
  } else {
    clear_has_res();
    res_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AvatarCfgSet

// repeated .com.cfg.vo.AvatarCfg avatarCfg = 1;
inline int AvatarCfgSet::avatarcfg_size() const {
  return avatarcfg_.size();
}
inline void AvatarCfgSet::clear_avatarcfg() {
  avatarcfg_.Clear();
}
inline const ::com::cfg::vo::AvatarCfg& AvatarCfgSet::avatarcfg(int index) const {
  return avatarcfg_.Get(index);
}
inline ::com::cfg::vo::AvatarCfg* AvatarCfgSet::mutable_avatarcfg(int index) {
  return avatarcfg_.Mutable(index);
}
inline ::com::cfg::vo::AvatarCfg* AvatarCfgSet::add_avatarcfg() {
  return avatarcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AvatarCfg >&
AvatarCfgSet::avatarcfg() const {
  return avatarcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AvatarCfg >*
AvatarCfgSet::mutable_avatarcfg() {
  return &avatarcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AvatarCfg_2eproto__INCLUDED
