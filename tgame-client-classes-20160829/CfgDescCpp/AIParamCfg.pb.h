// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AIParamCfg.proto

#ifndef PROTOBUF_AIParamCfg_2eproto__INCLUDED
#define PROTOBUF_AIParamCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AIParamCfg_2eproto();
void protobuf_AssignDesc_AIParamCfg_2eproto();
void protobuf_ShutdownFile_AIParamCfg_2eproto();

class AIParamCfg;
class AIParamCfgSet;

// ===================================================================

class AIParamCfg : public ::google::protobuf::MessageLite {
 public:
  AIParamCfg();
  virtual ~AIParamCfg();

  AIParamCfg(const AIParamCfg& from);

  inline AIParamCfg& operator=(const AIParamCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const AIParamCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AIParamCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AIParamCfg* other);

  // implements Message ----------------------------------------------

  AIParamCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AIParamCfg& from);
  void MergeFrom(const AIParamCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 AIType = 2;
  inline bool has_aitype() const;
  inline void clear_aitype();
  static const int kAITypeFieldNumber = 2;
  inline ::google::protobuf::uint32 aitype() const;
  inline void set_aitype(::google::protobuf::uint32 value);

  // repeated uint32 AIParams = 3;
  inline int aiparams_size() const;
  inline void clear_aiparams();
  static const int kAIParamsFieldNumber = 3;
  inline ::google::protobuf::uint32 aiparams(int index) const;
  inline void set_aiparams(int index, ::google::protobuf::uint32 value);
  inline void add_aiparams(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      aiparams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_aiparams();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.AIParamCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_aitype();
  inline void clear_has_aitype();

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 aitype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > aiparams_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_AIParamCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_AIParamCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_AIParamCfg_2eproto();
  friend void protobuf_ShutdownFile_AIParamCfg_2eproto();

  void InitAsDefaultInstance();
  static AIParamCfg* default_instance_;
};
// -------------------------------------------------------------------

class AIParamCfgSet : public ::google::protobuf::MessageLite {
 public:
  AIParamCfgSet();
  virtual ~AIParamCfgSet();

  AIParamCfgSet(const AIParamCfgSet& from);

  inline AIParamCfgSet& operator=(const AIParamCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const AIParamCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AIParamCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AIParamCfgSet* other);

  // implements Message ----------------------------------------------

  AIParamCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AIParamCfgSet& from);
  void MergeFrom(const AIParamCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.AIParamCfg aIParamCfg = 1;
  inline int aiparamcfg_size() const;
  inline void clear_aiparamcfg();
  static const int kAIParamCfgFieldNumber = 1;
  inline const ::com::cfg::vo::AIParamCfg& aiparamcfg(int index) const;
  inline ::com::cfg::vo::AIParamCfg* mutable_aiparamcfg(int index);
  inline ::com::cfg::vo::AIParamCfg* add_aiparamcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AIParamCfg >&
      aiparamcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AIParamCfg >*
      mutable_aiparamcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.AIParamCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AIParamCfg > aiparamcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_AIParamCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_AIParamCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_AIParamCfg_2eproto();
  friend void protobuf_ShutdownFile_AIParamCfg_2eproto();

  void InitAsDefaultInstance();
  static AIParamCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// AIParamCfg

// required uint32 ID = 1;
inline bool AIParamCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AIParamCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AIParamCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AIParamCfg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AIParamCfg::id() const {
  return id_;
}
inline void AIParamCfg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 AIType = 2;
inline bool AIParamCfg::has_aitype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AIParamCfg::set_has_aitype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AIParamCfg::clear_has_aitype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AIParamCfg::clear_aitype() {
  aitype_ = 0u;
  clear_has_aitype();
}
inline ::google::protobuf::uint32 AIParamCfg::aitype() const {
  return aitype_;
}
inline void AIParamCfg::set_aitype(::google::protobuf::uint32 value) {
  set_has_aitype();
  aitype_ = value;
}

// repeated uint32 AIParams = 3;
inline int AIParamCfg::aiparams_size() const {
  return aiparams_.size();
}
inline void AIParamCfg::clear_aiparams() {
  aiparams_.Clear();
}
inline ::google::protobuf::uint32 AIParamCfg::aiparams(int index) const {
  return aiparams_.Get(index);
}
inline void AIParamCfg::set_aiparams(int index, ::google::protobuf::uint32 value) {
  aiparams_.Set(index, value);
}
inline void AIParamCfg::add_aiparams(::google::protobuf::uint32 value) {
  aiparams_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AIParamCfg::aiparams() const {
  return aiparams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AIParamCfg::mutable_aiparams() {
  return &aiparams_;
}

// -------------------------------------------------------------------

// AIParamCfgSet

// repeated .com.cfg.vo.AIParamCfg aIParamCfg = 1;
inline int AIParamCfgSet::aiparamcfg_size() const {
  return aiparamcfg_.size();
}
inline void AIParamCfgSet::clear_aiparamcfg() {
  aiparamcfg_.Clear();
}
inline const ::com::cfg::vo::AIParamCfg& AIParamCfgSet::aiparamcfg(int index) const {
  return aiparamcfg_.Get(index);
}
inline ::com::cfg::vo::AIParamCfg* AIParamCfgSet::mutable_aiparamcfg(int index) {
  return aiparamcfg_.Mutable(index);
}
inline ::com::cfg::vo::AIParamCfg* AIParamCfgSet::add_aiparamcfg() {
  return aiparamcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AIParamCfg >&
AIParamCfgSet::aiparamcfg() const {
  return aiparamcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::AIParamCfg >*
AIParamCfgSet::mutable_aiparamcfg() {
  return &aiparamcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AIParamCfg_2eproto__INCLUDED
