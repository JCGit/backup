// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DailyInstanceCfg.proto

#ifndef PROTOBUF_DailyInstanceCfg_2eproto__INCLUDED
#define PROTOBUF_DailyInstanceCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DailyInstanceCfg_2eproto();
void protobuf_AssignDesc_DailyInstanceCfg_2eproto();
void protobuf_ShutdownFile_DailyInstanceCfg_2eproto();

class DailyInstanceElmt;
class DailyInstanceCfg;
class DailyInstanceCfgSet;

// ===================================================================

class DailyInstanceElmt : public ::google::protobuf::MessageLite {
 public:
  DailyInstanceElmt();
  virtual ~DailyInstanceElmt();

  DailyInstanceElmt(const DailyInstanceElmt& from);

  inline DailyInstanceElmt& operator=(const DailyInstanceElmt& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyInstanceElmt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyInstanceElmt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyInstanceElmt* other);

  // implements Message ----------------------------------------------

  DailyInstanceElmt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyInstanceElmt& from);
  void MergeFrom(const DailyInstanceElmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 InstanceID = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIDFieldNumber = 1;
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // required uint32 AwardPkgID = 2;
  inline bool has_awardpkgid() const;
  inline void clear_awardpkgid();
  static const int kAwardPkgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 awardpkgid() const;
  inline void set_awardpkgid(::google::protobuf::uint32 value);

  // required uint32 FP = 3;
  inline bool has_fp() const;
  inline void clear_fp();
  static const int kFPFieldNumber = 3;
  inline ::google::protobuf::uint32 fp() const;
  inline void set_fp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyInstanceElmt)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_awardpkgid();
  inline void clear_has_awardpkgid();
  inline void set_has_fp();
  inline void clear_has_fp();

  ::google::protobuf::uint32 instanceid_;
  ::google::protobuf::uint32 awardpkgid_;
  ::google::protobuf::uint32 fp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyInstanceCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyInstanceCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyInstanceElmt* default_instance_;
};
// -------------------------------------------------------------------

class DailyInstanceCfg : public ::google::protobuf::MessageLite {
 public:
  DailyInstanceCfg();
  virtual ~DailyInstanceCfg();

  DailyInstanceCfg(const DailyInstanceCfg& from);

  inline DailyInstanceCfg& operator=(const DailyInstanceCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyInstanceCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyInstanceCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyInstanceCfg* other);

  // implements Message ----------------------------------------------

  DailyInstanceCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyInstanceCfg& from);
  void MergeFrom(const DailyInstanceCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.DailyInstanceElmt TodayInstances = 2;
  inline int todayinstances_size() const;
  inline void clear_todayinstances();
  static const int kTodayInstancesFieldNumber = 2;
  inline const ::com::cfg::vo::DailyInstanceElmt& todayinstances(int index) const;
  inline ::com::cfg::vo::DailyInstanceElmt* mutable_todayinstances(int index);
  inline ::com::cfg::vo::DailyInstanceElmt* add_todayinstances();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceElmt >&
      todayinstances() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceElmt >*
      mutable_todayinstances();

  // repeated uint32 OpenDay = 3;
  inline int openday_size() const;
  inline void clear_openday();
  static const int kOpenDayFieldNumber = 3;
  inline ::google::protobuf::uint32 openday(int index) const;
  inline void set_openday(int index, ::google::protobuf::uint32 value);
  inline void add_openday(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      openday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_openday();

  // required string BGName = 4;
  inline bool has_bgname() const;
  inline void clear_bgname();
  static const int kBGNameFieldNumber = 4;
  inline const ::std::string& bgname() const;
  inline void set_bgname(const ::std::string& value);
  inline void set_bgname(const char* value);
  inline void set_bgname(const char* value, size_t size);
  inline ::std::string* mutable_bgname();
  inline ::std::string* release_bgname();
  inline void set_allocated_bgname(::std::string* bgname);

  // required string InstanceName = 5;
  inline bool has_instancename() const;
  inline void clear_instancename();
  static const int kInstanceNameFieldNumber = 5;
  inline const ::std::string& instancename() const;
  inline void set_instancename(const ::std::string& value);
  inline void set_instancename(const char* value);
  inline void set_instancename(const char* value, size_t size);
  inline ::std::string* mutable_instancename();
  inline ::std::string* release_instancename();
  inline void set_allocated_instancename(::std::string* instancename);

  // required string OpenDayDesc = 6;
  inline bool has_opendaydesc() const;
  inline void clear_opendaydesc();
  static const int kOpenDayDescFieldNumber = 6;
  inline const ::std::string& opendaydesc() const;
  inline void set_opendaydesc(const ::std::string& value);
  inline void set_opendaydesc(const char* value);
  inline void set_opendaydesc(const char* value, size_t size);
  inline ::std::string* mutable_opendaydesc();
  inline ::std::string* release_opendaydesc();
  inline void set_allocated_opendaydesc(::std::string* opendaydesc);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyInstanceCfg)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_bgname();
  inline void clear_has_bgname();
  inline void set_has_instancename();
  inline void clear_has_instancename();
  inline void set_has_opendaydesc();
  inline void clear_has_opendaydesc();

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceElmt > todayinstances_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > openday_;
  ::std::string* bgname_;
  ::std::string* instancename_;
  ::std::string* opendaydesc_;
  ::google::protobuf::uint32 key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyInstanceCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyInstanceCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyInstanceCfg* default_instance_;
};
// -------------------------------------------------------------------

class DailyInstanceCfgSet : public ::google::protobuf::MessageLite {
 public:
  DailyInstanceCfgSet();
  virtual ~DailyInstanceCfgSet();

  DailyInstanceCfgSet(const DailyInstanceCfgSet& from);

  inline DailyInstanceCfgSet& operator=(const DailyInstanceCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyInstanceCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyInstanceCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyInstanceCfgSet* other);

  // implements Message ----------------------------------------------

  DailyInstanceCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyInstanceCfgSet& from);
  void MergeFrom(const DailyInstanceCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.DailyInstanceCfg instancecfg = 1;
  inline int instancecfg_size() const;
  inline void clear_instancecfg();
  static const int kInstancecfgFieldNumber = 1;
  inline const ::com::cfg::vo::DailyInstanceCfg& instancecfg(int index) const;
  inline ::com::cfg::vo::DailyInstanceCfg* mutable_instancecfg(int index);
  inline ::com::cfg::vo::DailyInstanceCfg* add_instancecfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceCfg >&
      instancecfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceCfg >*
      mutable_instancecfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyInstanceCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceCfg > instancecfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyInstanceCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyInstanceCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyInstanceCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyInstanceCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyInstanceElmt

// required uint32 InstanceID = 1;
inline bool DailyInstanceElmt::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyInstanceElmt::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyInstanceElmt::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyInstanceElmt::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 DailyInstanceElmt::instanceid() const {
  return instanceid_;
}
inline void DailyInstanceElmt::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// required uint32 AwardPkgID = 2;
inline bool DailyInstanceElmt::has_awardpkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyInstanceElmt::set_has_awardpkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyInstanceElmt::clear_has_awardpkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyInstanceElmt::clear_awardpkgid() {
  awardpkgid_ = 0u;
  clear_has_awardpkgid();
}
inline ::google::protobuf::uint32 DailyInstanceElmt::awardpkgid() const {
  return awardpkgid_;
}
inline void DailyInstanceElmt::set_awardpkgid(::google::protobuf::uint32 value) {
  set_has_awardpkgid();
  awardpkgid_ = value;
}

// required uint32 FP = 3;
inline bool DailyInstanceElmt::has_fp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyInstanceElmt::set_has_fp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyInstanceElmt::clear_has_fp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyInstanceElmt::clear_fp() {
  fp_ = 0u;
  clear_has_fp();
}
inline ::google::protobuf::uint32 DailyInstanceElmt::fp() const {
  return fp_;
}
inline void DailyInstanceElmt::set_fp(::google::protobuf::uint32 value) {
  set_has_fp();
  fp_ = value;
}

// -------------------------------------------------------------------

// DailyInstanceCfg

// required uint32 Key = 1;
inline bool DailyInstanceCfg::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyInstanceCfg::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyInstanceCfg::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyInstanceCfg::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 DailyInstanceCfg::key() const {
  return key_;
}
inline void DailyInstanceCfg::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// repeated .com.cfg.vo.DailyInstanceElmt TodayInstances = 2;
inline int DailyInstanceCfg::todayinstances_size() const {
  return todayinstances_.size();
}
inline void DailyInstanceCfg::clear_todayinstances() {
  todayinstances_.Clear();
}
inline const ::com::cfg::vo::DailyInstanceElmt& DailyInstanceCfg::todayinstances(int index) const {
  return todayinstances_.Get(index);
}
inline ::com::cfg::vo::DailyInstanceElmt* DailyInstanceCfg::mutable_todayinstances(int index) {
  return todayinstances_.Mutable(index);
}
inline ::com::cfg::vo::DailyInstanceElmt* DailyInstanceCfg::add_todayinstances() {
  return todayinstances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceElmt >&
DailyInstanceCfg::todayinstances() const {
  return todayinstances_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceElmt >*
DailyInstanceCfg::mutable_todayinstances() {
  return &todayinstances_;
}

// repeated uint32 OpenDay = 3;
inline int DailyInstanceCfg::openday_size() const {
  return openday_.size();
}
inline void DailyInstanceCfg::clear_openday() {
  openday_.Clear();
}
inline ::google::protobuf::uint32 DailyInstanceCfg::openday(int index) const {
  return openday_.Get(index);
}
inline void DailyInstanceCfg::set_openday(int index, ::google::protobuf::uint32 value) {
  openday_.Set(index, value);
}
inline void DailyInstanceCfg::add_openday(::google::protobuf::uint32 value) {
  openday_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DailyInstanceCfg::openday() const {
  return openday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DailyInstanceCfg::mutable_openday() {
  return &openday_;
}

// required string BGName = 4;
inline bool DailyInstanceCfg::has_bgname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyInstanceCfg::set_has_bgname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyInstanceCfg::clear_has_bgname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyInstanceCfg::clear_bgname() {
  if (bgname_ != &::google::protobuf::internal::kEmptyString) {
    bgname_->clear();
  }
  clear_has_bgname();
}
inline const ::std::string& DailyInstanceCfg::bgname() const {
  return *bgname_;
}
inline void DailyInstanceCfg::set_bgname(const ::std::string& value) {
  set_has_bgname();
  if (bgname_ == &::google::protobuf::internal::kEmptyString) {
    bgname_ = new ::std::string;
  }
  bgname_->assign(value);
}
inline void DailyInstanceCfg::set_bgname(const char* value) {
  set_has_bgname();
  if (bgname_ == &::google::protobuf::internal::kEmptyString) {
    bgname_ = new ::std::string;
  }
  bgname_->assign(value);
}
inline void DailyInstanceCfg::set_bgname(const char* value, size_t size) {
  set_has_bgname();
  if (bgname_ == &::google::protobuf::internal::kEmptyString) {
    bgname_ = new ::std::string;
  }
  bgname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyInstanceCfg::mutable_bgname() {
  set_has_bgname();
  if (bgname_ == &::google::protobuf::internal::kEmptyString) {
    bgname_ = new ::std::string;
  }
  return bgname_;
}
inline ::std::string* DailyInstanceCfg::release_bgname() {
  clear_has_bgname();
  if (bgname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bgname_;
    bgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyInstanceCfg::set_allocated_bgname(::std::string* bgname) {
  if (bgname_ != &::google::protobuf::internal::kEmptyString) {
    delete bgname_;
  }
  if (bgname) {
    set_has_bgname();
    bgname_ = bgname;
  } else {
    clear_has_bgname();
    bgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string InstanceName = 5;
inline bool DailyInstanceCfg::has_instancename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyInstanceCfg::set_has_instancename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyInstanceCfg::clear_has_instancename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyInstanceCfg::clear_instancename() {
  if (instancename_ != &::google::protobuf::internal::kEmptyString) {
    instancename_->clear();
  }
  clear_has_instancename();
}
inline const ::std::string& DailyInstanceCfg::instancename() const {
  return *instancename_;
}
inline void DailyInstanceCfg::set_instancename(const ::std::string& value) {
  set_has_instancename();
  if (instancename_ == &::google::protobuf::internal::kEmptyString) {
    instancename_ = new ::std::string;
  }
  instancename_->assign(value);
}
inline void DailyInstanceCfg::set_instancename(const char* value) {
  set_has_instancename();
  if (instancename_ == &::google::protobuf::internal::kEmptyString) {
    instancename_ = new ::std::string;
  }
  instancename_->assign(value);
}
inline void DailyInstanceCfg::set_instancename(const char* value, size_t size) {
  set_has_instancename();
  if (instancename_ == &::google::protobuf::internal::kEmptyString) {
    instancename_ = new ::std::string;
  }
  instancename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyInstanceCfg::mutable_instancename() {
  set_has_instancename();
  if (instancename_ == &::google::protobuf::internal::kEmptyString) {
    instancename_ = new ::std::string;
  }
  return instancename_;
}
inline ::std::string* DailyInstanceCfg::release_instancename() {
  clear_has_instancename();
  if (instancename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = instancename_;
    instancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyInstanceCfg::set_allocated_instancename(::std::string* instancename) {
  if (instancename_ != &::google::protobuf::internal::kEmptyString) {
    delete instancename_;
  }
  if (instancename) {
    set_has_instancename();
    instancename_ = instancename;
  } else {
    clear_has_instancename();
    instancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string OpenDayDesc = 6;
inline bool DailyInstanceCfg::has_opendaydesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyInstanceCfg::set_has_opendaydesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyInstanceCfg::clear_has_opendaydesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyInstanceCfg::clear_opendaydesc() {
  if (opendaydesc_ != &::google::protobuf::internal::kEmptyString) {
    opendaydesc_->clear();
  }
  clear_has_opendaydesc();
}
inline const ::std::string& DailyInstanceCfg::opendaydesc() const {
  return *opendaydesc_;
}
inline void DailyInstanceCfg::set_opendaydesc(const ::std::string& value) {
  set_has_opendaydesc();
  if (opendaydesc_ == &::google::protobuf::internal::kEmptyString) {
    opendaydesc_ = new ::std::string;
  }
  opendaydesc_->assign(value);
}
inline void DailyInstanceCfg::set_opendaydesc(const char* value) {
  set_has_opendaydesc();
  if (opendaydesc_ == &::google::protobuf::internal::kEmptyString) {
    opendaydesc_ = new ::std::string;
  }
  opendaydesc_->assign(value);
}
inline void DailyInstanceCfg::set_opendaydesc(const char* value, size_t size) {
  set_has_opendaydesc();
  if (opendaydesc_ == &::google::protobuf::internal::kEmptyString) {
    opendaydesc_ = new ::std::string;
  }
  opendaydesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyInstanceCfg::mutable_opendaydesc() {
  set_has_opendaydesc();
  if (opendaydesc_ == &::google::protobuf::internal::kEmptyString) {
    opendaydesc_ = new ::std::string;
  }
  return opendaydesc_;
}
inline ::std::string* DailyInstanceCfg::release_opendaydesc() {
  clear_has_opendaydesc();
  if (opendaydesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opendaydesc_;
    opendaydesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyInstanceCfg::set_allocated_opendaydesc(::std::string* opendaydesc) {
  if (opendaydesc_ != &::google::protobuf::internal::kEmptyString) {
    delete opendaydesc_;
  }
  if (opendaydesc) {
    set_has_opendaydesc();
    opendaydesc_ = opendaydesc;
  } else {
    clear_has_opendaydesc();
    opendaydesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DailyInstanceCfgSet

// repeated .com.cfg.vo.DailyInstanceCfg instancecfg = 1;
inline int DailyInstanceCfgSet::instancecfg_size() const {
  return instancecfg_.size();
}
inline void DailyInstanceCfgSet::clear_instancecfg() {
  instancecfg_.Clear();
}
inline const ::com::cfg::vo::DailyInstanceCfg& DailyInstanceCfgSet::instancecfg(int index) const {
  return instancecfg_.Get(index);
}
inline ::com::cfg::vo::DailyInstanceCfg* DailyInstanceCfgSet::mutable_instancecfg(int index) {
  return instancecfg_.Mutable(index);
}
inline ::com::cfg::vo::DailyInstanceCfg* DailyInstanceCfgSet::add_instancecfg() {
  return instancecfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceCfg >&
DailyInstanceCfgSet::instancecfg() const {
  return instancecfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyInstanceCfg >*
DailyInstanceCfgSet::mutable_instancecfg() {
  return &instancecfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DailyInstanceCfg_2eproto__INCLUDED
