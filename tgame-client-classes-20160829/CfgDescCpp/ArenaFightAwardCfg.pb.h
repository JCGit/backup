// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArenaFightAwardCfg.proto

#ifndef PROTOBUF_ArenaFightAwardCfg_2eproto__INCLUDED
#define PROTOBUF_ArenaFightAwardCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ArenaDailyAwardCfg.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ArenaFightAwardCfg_2eproto();
void protobuf_AssignDesc_ArenaFightAwardCfg_2eproto();
void protobuf_ShutdownFile_ArenaFightAwardCfg_2eproto();

class ArenaFightAwardCfg;
class ArenaFightAwardCfgSet;

// ===================================================================

class ArenaFightAwardCfg : public ::google::protobuf::MessageLite {
 public:
  ArenaFightAwardCfg();
  virtual ~ArenaFightAwardCfg();

  ArenaFightAwardCfg(const ArenaFightAwardCfg& from);

  inline ArenaFightAwardCfg& operator=(const ArenaFightAwardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaFightAwardCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaFightAwardCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaFightAwardCfg* other);

  // implements Message ----------------------------------------------

  ArenaFightAwardCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaFightAwardCfg& from);
  void MergeFrom(const ArenaFightAwardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.ArenaAwardElement WinElmtLst = 2;
  inline int winelmtlst_size() const;
  inline void clear_winelmtlst();
  static const int kWinElmtLstFieldNumber = 2;
  inline const ::com::cfg::vo::ArenaAwardElement& winelmtlst(int index) const;
  inline ::com::cfg::vo::ArenaAwardElement* mutable_winelmtlst(int index);
  inline ::com::cfg::vo::ArenaAwardElement* add_winelmtlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >&
      winelmtlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >*
      mutable_winelmtlst();

  // repeated .com.cfg.vo.ArenaAwardElement LoseElmtLst = 3;
  inline int loseelmtlst_size() const;
  inline void clear_loseelmtlst();
  static const int kLoseElmtLstFieldNumber = 3;
  inline const ::com::cfg::vo::ArenaAwardElement& loseelmtlst(int index) const;
  inline ::com::cfg::vo::ArenaAwardElement* mutable_loseelmtlst(int index);
  inline ::com::cfg::vo::ArenaAwardElement* add_loseelmtlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >&
      loseelmtlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >*
      mutable_loseelmtlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaFightAwardCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement > winelmtlst_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement > loseelmtlst_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaFightAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaFightAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaFightAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaFightAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaFightAwardCfg* default_instance_;
};
// -------------------------------------------------------------------

class ArenaFightAwardCfgSet : public ::google::protobuf::MessageLite {
 public:
  ArenaFightAwardCfgSet();
  virtual ~ArenaFightAwardCfgSet();

  ArenaFightAwardCfgSet(const ArenaFightAwardCfgSet& from);

  inline ArenaFightAwardCfgSet& operator=(const ArenaFightAwardCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaFightAwardCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaFightAwardCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaFightAwardCfgSet* other);

  // implements Message ----------------------------------------------

  ArenaFightAwardCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaFightAwardCfgSet& from);
  void MergeFrom(const ArenaFightAwardCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.ArenaFightAwardCfg arenaFightAwardCfg = 1;
  inline int arenafightawardcfg_size() const;
  inline void clear_arenafightawardcfg();
  static const int kArenaFightAwardCfgFieldNumber = 1;
  inline const ::com::cfg::vo::ArenaFightAwardCfg& arenafightawardcfg(int index) const;
  inline ::com::cfg::vo::ArenaFightAwardCfg* mutable_arenafightawardcfg(int index);
  inline ::com::cfg::vo::ArenaFightAwardCfg* add_arenafightawardcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaFightAwardCfg >&
      arenafightawardcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaFightAwardCfg >*
      mutable_arenafightawardcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaFightAwardCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaFightAwardCfg > arenafightawardcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaFightAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaFightAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaFightAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaFightAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaFightAwardCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ArenaFightAwardCfg

// required uint32 Level = 1;
inline bool ArenaFightAwardCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaFightAwardCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaFightAwardCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaFightAwardCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ArenaFightAwardCfg::level() const {
  return level_;
}
inline void ArenaFightAwardCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated .com.cfg.vo.ArenaAwardElement WinElmtLst = 2;
inline int ArenaFightAwardCfg::winelmtlst_size() const {
  return winelmtlst_.size();
}
inline void ArenaFightAwardCfg::clear_winelmtlst() {
  winelmtlst_.Clear();
}
inline const ::com::cfg::vo::ArenaAwardElement& ArenaFightAwardCfg::winelmtlst(int index) const {
  return winelmtlst_.Get(index);
}
inline ::com::cfg::vo::ArenaAwardElement* ArenaFightAwardCfg::mutable_winelmtlst(int index) {
  return winelmtlst_.Mutable(index);
}
inline ::com::cfg::vo::ArenaAwardElement* ArenaFightAwardCfg::add_winelmtlst() {
  return winelmtlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >&
ArenaFightAwardCfg::winelmtlst() const {
  return winelmtlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >*
ArenaFightAwardCfg::mutable_winelmtlst() {
  return &winelmtlst_;
}

// repeated .com.cfg.vo.ArenaAwardElement LoseElmtLst = 3;
inline int ArenaFightAwardCfg::loseelmtlst_size() const {
  return loseelmtlst_.size();
}
inline void ArenaFightAwardCfg::clear_loseelmtlst() {
  loseelmtlst_.Clear();
}
inline const ::com::cfg::vo::ArenaAwardElement& ArenaFightAwardCfg::loseelmtlst(int index) const {
  return loseelmtlst_.Get(index);
}
inline ::com::cfg::vo::ArenaAwardElement* ArenaFightAwardCfg::mutable_loseelmtlst(int index) {
  return loseelmtlst_.Mutable(index);
}
inline ::com::cfg::vo::ArenaAwardElement* ArenaFightAwardCfg::add_loseelmtlst() {
  return loseelmtlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >&
ArenaFightAwardCfg::loseelmtlst() const {
  return loseelmtlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaAwardElement >*
ArenaFightAwardCfg::mutable_loseelmtlst() {
  return &loseelmtlst_;
}

// -------------------------------------------------------------------

// ArenaFightAwardCfgSet

// repeated .com.cfg.vo.ArenaFightAwardCfg arenaFightAwardCfg = 1;
inline int ArenaFightAwardCfgSet::arenafightawardcfg_size() const {
  return arenafightawardcfg_.size();
}
inline void ArenaFightAwardCfgSet::clear_arenafightawardcfg() {
  arenafightawardcfg_.Clear();
}
inline const ::com::cfg::vo::ArenaFightAwardCfg& ArenaFightAwardCfgSet::arenafightawardcfg(int index) const {
  return arenafightawardcfg_.Get(index);
}
inline ::com::cfg::vo::ArenaFightAwardCfg* ArenaFightAwardCfgSet::mutable_arenafightawardcfg(int index) {
  return arenafightawardcfg_.Mutable(index);
}
inline ::com::cfg::vo::ArenaFightAwardCfg* ArenaFightAwardCfgSet::add_arenafightawardcfg() {
  return arenafightawardcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaFightAwardCfg >&
ArenaFightAwardCfgSet::arenafightawardcfg() const {
  return arenafightawardcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaFightAwardCfg >*
ArenaFightAwardCfgSet::mutable_arenafightawardcfg() {
  return &arenafightawardcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ArenaFightAwardCfg_2eproto__INCLUDED
