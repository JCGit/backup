// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SpringActCfg.proto

#ifndef PROTOBUF_SpringActCfg_2eproto__INCLUDED
#define PROTOBUF_SpringActCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SpringActCfg_2eproto();
void protobuf_AssignDesc_SpringActCfg_2eproto();
void protobuf_ShutdownFile_SpringActCfg_2eproto();

class SpringActCfg;
class SpringActCfgSet;

// ===================================================================

class SpringActCfg : public ::google::protobuf::MessageLite {
 public:
  SpringActCfg();
  virtual ~SpringActCfg();

  SpringActCfg(const SpringActCfg& from);

  inline SpringActCfg& operator=(const SpringActCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const SpringActCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpringActCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpringActCfg* other);

  // implements Message ----------------------------------------------

  SpringActCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpringActCfg& from);
  void MergeFrom(const SpringActCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 PkgID = 2;
  inline bool has_pkgid() const;
  inline void clear_pkgid();
  static const int kPkgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 pkgid() const;
  inline void set_pkgid(::google::protobuf::uint32 value);

  // required string StartTime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // required string StopTime = 4;
  inline bool has_stoptime() const;
  inline void clear_stoptime();
  static const int kStopTimeFieldNumber = 4;
  inline const ::std::string& stoptime() const;
  inline void set_stoptime(const ::std::string& value);
  inline void set_stoptime(const char* value);
  inline void set_stoptime(const char* value, size_t size);
  inline ::std::string* mutable_stoptime();
  inline ::std::string* release_stoptime();
  inline void set_allocated_stoptime(::std::string* stoptime);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SpringActCfg)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_pkgid();
  inline void clear_has_pkgid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_stoptime();
  inline void clear_has_stoptime();

  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 pkgid_;
  ::std::string* starttime_;
  ::std::string* stoptime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpringActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpringActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpringActCfg_2eproto();
  friend void protobuf_ShutdownFile_SpringActCfg_2eproto();

  void InitAsDefaultInstance();
  static SpringActCfg* default_instance_;
};
// -------------------------------------------------------------------

class SpringActCfgSet : public ::google::protobuf::MessageLite {
 public:
  SpringActCfgSet();
  virtual ~SpringActCfgSet();

  SpringActCfgSet(const SpringActCfgSet& from);

  inline SpringActCfgSet& operator=(const SpringActCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const SpringActCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpringActCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpringActCfgSet* other);

  // implements Message ----------------------------------------------

  SpringActCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpringActCfgSet& from);
  void MergeFrom(const SpringActCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.SpringActCfg springactcfg = 1;
  inline int springactcfg_size() const;
  inline void clear_springactcfg();
  static const int kSpringactcfgFieldNumber = 1;
  inline const ::com::cfg::vo::SpringActCfg& springactcfg(int index) const;
  inline ::com::cfg::vo::SpringActCfg* mutable_springactcfg(int index);
  inline ::com::cfg::vo::SpringActCfg* add_springactcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SpringActCfg >&
      springactcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SpringActCfg >*
      mutable_springactcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.SpringActCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SpringActCfg > springactcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpringActCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpringActCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpringActCfg_2eproto();
  friend void protobuf_ShutdownFile_SpringActCfg_2eproto();

  void InitAsDefaultInstance();
  static SpringActCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// SpringActCfg

// required uint32 Day = 1;
inline bool SpringActCfg::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpringActCfg::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpringActCfg::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpringActCfg::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 SpringActCfg::day() const {
  return day_;
}
inline void SpringActCfg::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// required uint32 PkgID = 2;
inline bool SpringActCfg::has_pkgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpringActCfg::set_has_pkgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpringActCfg::clear_has_pkgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpringActCfg::clear_pkgid() {
  pkgid_ = 0u;
  clear_has_pkgid();
}
inline ::google::protobuf::uint32 SpringActCfg::pkgid() const {
  return pkgid_;
}
inline void SpringActCfg::set_pkgid(::google::protobuf::uint32 value) {
  set_has_pkgid();
  pkgid_ = value;
}

// required string StartTime = 3;
inline bool SpringActCfg::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpringActCfg::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpringActCfg::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpringActCfg::clear_starttime() {
  if (starttime_ != &::google::protobuf::internal::kEmptyString) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& SpringActCfg::starttime() const {
  return *starttime_;
}
inline void SpringActCfg::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::kEmptyString) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
}
inline void SpringActCfg::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::kEmptyString) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
}
inline void SpringActCfg::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::kEmptyString) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SpringActCfg::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::kEmptyString) {
    starttime_ = new ::std::string;
  }
  return starttime_;
}
inline ::std::string* SpringActCfg::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SpringActCfg::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google::protobuf::internal::kEmptyString) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string StopTime = 4;
inline bool SpringActCfg::has_stoptime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpringActCfg::set_has_stoptime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpringActCfg::clear_has_stoptime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpringActCfg::clear_stoptime() {
  if (stoptime_ != &::google::protobuf::internal::kEmptyString) {
    stoptime_->clear();
  }
  clear_has_stoptime();
}
inline const ::std::string& SpringActCfg::stoptime() const {
  return *stoptime_;
}
inline void SpringActCfg::set_stoptime(const ::std::string& value) {
  set_has_stoptime();
  if (stoptime_ == &::google::protobuf::internal::kEmptyString) {
    stoptime_ = new ::std::string;
  }
  stoptime_->assign(value);
}
inline void SpringActCfg::set_stoptime(const char* value) {
  set_has_stoptime();
  if (stoptime_ == &::google::protobuf::internal::kEmptyString) {
    stoptime_ = new ::std::string;
  }
  stoptime_->assign(value);
}
inline void SpringActCfg::set_stoptime(const char* value, size_t size) {
  set_has_stoptime();
  if (stoptime_ == &::google::protobuf::internal::kEmptyString) {
    stoptime_ = new ::std::string;
  }
  stoptime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SpringActCfg::mutable_stoptime() {
  set_has_stoptime();
  if (stoptime_ == &::google::protobuf::internal::kEmptyString) {
    stoptime_ = new ::std::string;
  }
  return stoptime_;
}
inline ::std::string* SpringActCfg::release_stoptime() {
  clear_has_stoptime();
  if (stoptime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stoptime_;
    stoptime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SpringActCfg::set_allocated_stoptime(::std::string* stoptime) {
  if (stoptime_ != &::google::protobuf::internal::kEmptyString) {
    delete stoptime_;
  }
  if (stoptime) {
    set_has_stoptime();
    stoptime_ = stoptime;
  } else {
    clear_has_stoptime();
    stoptime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SpringActCfgSet

// repeated .com.cfg.vo.SpringActCfg springactcfg = 1;
inline int SpringActCfgSet::springactcfg_size() const {
  return springactcfg_.size();
}
inline void SpringActCfgSet::clear_springactcfg() {
  springactcfg_.Clear();
}
inline const ::com::cfg::vo::SpringActCfg& SpringActCfgSet::springactcfg(int index) const {
  return springactcfg_.Get(index);
}
inline ::com::cfg::vo::SpringActCfg* SpringActCfgSet::mutable_springactcfg(int index) {
  return springactcfg_.Mutable(index);
}
inline ::com::cfg::vo::SpringActCfg* SpringActCfgSet::add_springactcfg() {
  return springactcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SpringActCfg >&
SpringActCfgSet::springactcfg() const {
  return springactcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::SpringActCfg >*
SpringActCfgSet::mutable_springactcfg() {
  return &springactcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SpringActCfg_2eproto__INCLUDED
