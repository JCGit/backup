// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuideStepCfg.proto

#ifndef PROTOBUF_GuideStepCfg_2eproto__INCLUDED
#define PROTOBUF_GuideStepCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GuideStepCfg_2eproto();
void protobuf_AssignDesc_GuideStepCfg_2eproto();
void protobuf_ShutdownFile_GuideStepCfg_2eproto();

class GuideStepCfg;
class GuideStepCfgSet;

// ===================================================================

class GuideStepCfg : public ::google::protobuf::MessageLite {
 public:
  GuideStepCfg();
  virtual ~GuideStepCfg();

  GuideStepCfg(const GuideStepCfg& from);

  inline GuideStepCfg& operator=(const GuideStepCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuideStepCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuideStepCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuideStepCfg* other);

  // implements Message ----------------------------------------------

  GuideStepCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuideStepCfg& from);
  void MergeFrom(const GuideStepCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 GuideID = 1;
  inline bool has_guideid() const;
  inline void clear_guideid();
  static const int kGuideIDFieldNumber = 1;
  inline ::google::protobuf::uint32 guideid() const;
  inline void set_guideid(::google::protobuf::uint32 value);

  // required uint32 StepID = 2;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepIDFieldNumber = 2;
  inline ::google::protobuf::uint32 stepid() const;
  inline void set_stepid(::google::protobuf::uint32 value);

  // required uint32 StepType = 3;
  inline bool has_steptype() const;
  inline void clear_steptype();
  static const int kStepTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 steptype() const;
  inline void set_steptype(::google::protobuf::uint32 value);

  // required uint32 LinkID = 4;
  inline bool has_linkid() const;
  inline void clear_linkid();
  static const int kLinkIDFieldNumber = 4;
  inline ::google::protobuf::uint32 linkid() const;
  inline void set_linkid(::google::protobuf::uint32 value);

  // required uint32 IsWaiting = 5;
  inline bool has_iswaiting() const;
  inline void clear_iswaiting();
  static const int kIsWaitingFieldNumber = 5;
  inline ::google::protobuf::uint32 iswaiting() const;
  inline void set_iswaiting(::google::protobuf::uint32 value);

  // required uint32 IsForced = 6;
  inline bool has_isforced() const;
  inline void clear_isforced();
  static const int kIsForcedFieldNumber = 6;
  inline ::google::protobuf::uint32 isforced() const;
  inline void set_isforced(::google::protobuf::uint32 value);

  // required uint32 Times = 7;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // required uint32 IsCanOver = 8;
  inline bool has_iscanover() const;
  inline void clear_iscanover();
  static const int kIsCanOverFieldNumber = 8;
  inline ::google::protobuf::uint32 iscanover() const;
  inline void set_iscanover(::google::protobuf::uint32 value);

  // required uint32 ViewType = 9;
  inline bool has_viewtype() const;
  inline void clear_viewtype();
  static const int kViewTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 viewtype() const;
  inline void set_viewtype(::google::protobuf::uint32 value);

  // required string ViewName = 10;
  inline bool has_viewname() const;
  inline void clear_viewname();
  static const int kViewNameFieldNumber = 10;
  inline const ::std::string& viewname() const;
  inline void set_viewname(const ::std::string& value);
  inline void set_viewname(const char* value);
  inline void set_viewname(const char* value, size_t size);
  inline ::std::string* mutable_viewname();
  inline ::std::string* release_viewname();
  inline void set_allocated_viewname(::std::string* viewname);

  // required string ViewShape = 11;
  inline bool has_viewshape() const;
  inline void clear_viewshape();
  static const int kViewShapeFieldNumber = 11;
  inline const ::std::string& viewshape() const;
  inline void set_viewshape(const ::std::string& value);
  inline void set_viewshape(const char* value);
  inline void set_viewshape(const char* value, size_t size);
  inline ::std::string* mutable_viewshape();
  inline ::std::string* release_viewshape();
  inline void set_allocated_viewshape(::std::string* viewshape);

  // required int32 ViewZoom = 12;
  inline bool has_viewzoom() const;
  inline void clear_viewzoom();
  static const int kViewZoomFieldNumber = 12;
  inline ::google::protobuf::int32 viewzoom() const;
  inline void set_viewzoom(::google::protobuf::int32 value);

  // required string PromptWords = 13;
  inline bool has_promptwords() const;
  inline void clear_promptwords();
  static const int kPromptWordsFieldNumber = 13;
  inline const ::std::string& promptwords() const;
  inline void set_promptwords(const ::std::string& value);
  inline void set_promptwords(const char* value);
  inline void set_promptwords(const char* value, size_t size);
  inline ::std::string* mutable_promptwords();
  inline ::std::string* release_promptwords();
  inline void set_allocated_promptwords(::std::string* promptwords);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.GuideStepCfg)
 private:
  inline void set_has_guideid();
  inline void clear_has_guideid();
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_steptype();
  inline void clear_has_steptype();
  inline void set_has_linkid();
  inline void clear_has_linkid();
  inline void set_has_iswaiting();
  inline void clear_has_iswaiting();
  inline void set_has_isforced();
  inline void clear_has_isforced();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_iscanover();
  inline void clear_has_iscanover();
  inline void set_has_viewtype();
  inline void clear_has_viewtype();
  inline void set_has_viewname();
  inline void clear_has_viewname();
  inline void set_has_viewshape();
  inline void clear_has_viewshape();
  inline void set_has_viewzoom();
  inline void clear_has_viewzoom();
  inline void set_has_promptwords();
  inline void clear_has_promptwords();

  ::google::protobuf::uint32 guideid_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 steptype_;
  ::google::protobuf::uint32 linkid_;
  ::google::protobuf::uint32 iswaiting_;
  ::google::protobuf::uint32 isforced_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 iscanover_;
  ::std::string* viewname_;
  ::google::protobuf::uint32 viewtype_;
  ::google::protobuf::int32 viewzoom_;
  ::std::string* viewshape_;
  ::std::string* promptwords_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GuideStepCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GuideStepCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_GuideStepCfg_2eproto();
  friend void protobuf_ShutdownFile_GuideStepCfg_2eproto();

  void InitAsDefaultInstance();
  static GuideStepCfg* default_instance_;
};
// -------------------------------------------------------------------

class GuideStepCfgSet : public ::google::protobuf::MessageLite {
 public:
  GuideStepCfgSet();
  virtual ~GuideStepCfgSet();

  GuideStepCfgSet(const GuideStepCfgSet& from);

  inline GuideStepCfgSet& operator=(const GuideStepCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuideStepCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuideStepCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuideStepCfgSet* other);

  // implements Message ----------------------------------------------

  GuideStepCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuideStepCfgSet& from);
  void MergeFrom(const GuideStepCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.GuideStepCfg guidestepcfg = 1;
  inline int guidestepcfg_size() const;
  inline void clear_guidestepcfg();
  static const int kGuidestepcfgFieldNumber = 1;
  inline const ::com::cfg::vo::GuideStepCfg& guidestepcfg(int index) const;
  inline ::com::cfg::vo::GuideStepCfg* mutable_guidestepcfg(int index);
  inline ::com::cfg::vo::GuideStepCfg* add_guidestepcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::GuideStepCfg >&
      guidestepcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::GuideStepCfg >*
      mutable_guidestepcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.GuideStepCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::GuideStepCfg > guidestepcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GuideStepCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GuideStepCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_GuideStepCfg_2eproto();
  friend void protobuf_ShutdownFile_GuideStepCfg_2eproto();

  void InitAsDefaultInstance();
  static GuideStepCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// GuideStepCfg

// required uint32 GuideID = 1;
inline bool GuideStepCfg::has_guideid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideStepCfg::set_has_guideid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideStepCfg::clear_has_guideid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideStepCfg::clear_guideid() {
  guideid_ = 0u;
  clear_has_guideid();
}
inline ::google::protobuf::uint32 GuideStepCfg::guideid() const {
  return guideid_;
}
inline void GuideStepCfg::set_guideid(::google::protobuf::uint32 value) {
  set_has_guideid();
  guideid_ = value;
}

// required uint32 StepID = 2;
inline bool GuideStepCfg::has_stepid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideStepCfg::set_has_stepid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideStepCfg::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideStepCfg::clear_stepid() {
  stepid_ = 0u;
  clear_has_stepid();
}
inline ::google::protobuf::uint32 GuideStepCfg::stepid() const {
  return stepid_;
}
inline void GuideStepCfg::set_stepid(::google::protobuf::uint32 value) {
  set_has_stepid();
  stepid_ = value;
}

// required uint32 StepType = 3;
inline bool GuideStepCfg::has_steptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuideStepCfg::set_has_steptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuideStepCfg::clear_has_steptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuideStepCfg::clear_steptype() {
  steptype_ = 0u;
  clear_has_steptype();
}
inline ::google::protobuf::uint32 GuideStepCfg::steptype() const {
  return steptype_;
}
inline void GuideStepCfg::set_steptype(::google::protobuf::uint32 value) {
  set_has_steptype();
  steptype_ = value;
}

// required uint32 LinkID = 4;
inline bool GuideStepCfg::has_linkid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuideStepCfg::set_has_linkid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuideStepCfg::clear_has_linkid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuideStepCfg::clear_linkid() {
  linkid_ = 0u;
  clear_has_linkid();
}
inline ::google::protobuf::uint32 GuideStepCfg::linkid() const {
  return linkid_;
}
inline void GuideStepCfg::set_linkid(::google::protobuf::uint32 value) {
  set_has_linkid();
  linkid_ = value;
}

// required uint32 IsWaiting = 5;
inline bool GuideStepCfg::has_iswaiting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuideStepCfg::set_has_iswaiting() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuideStepCfg::clear_has_iswaiting() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuideStepCfg::clear_iswaiting() {
  iswaiting_ = 0u;
  clear_has_iswaiting();
}
inline ::google::protobuf::uint32 GuideStepCfg::iswaiting() const {
  return iswaiting_;
}
inline void GuideStepCfg::set_iswaiting(::google::protobuf::uint32 value) {
  set_has_iswaiting();
  iswaiting_ = value;
}

// required uint32 IsForced = 6;
inline bool GuideStepCfg::has_isforced() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuideStepCfg::set_has_isforced() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuideStepCfg::clear_has_isforced() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuideStepCfg::clear_isforced() {
  isforced_ = 0u;
  clear_has_isforced();
}
inline ::google::protobuf::uint32 GuideStepCfg::isforced() const {
  return isforced_;
}
inline void GuideStepCfg::set_isforced(::google::protobuf::uint32 value) {
  set_has_isforced();
  isforced_ = value;
}

// required uint32 Times = 7;
inline bool GuideStepCfg::has_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuideStepCfg::set_has_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuideStepCfg::clear_has_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuideStepCfg::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GuideStepCfg::times() const {
  return times_;
}
inline void GuideStepCfg::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// required uint32 IsCanOver = 8;
inline bool GuideStepCfg::has_iscanover() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuideStepCfg::set_has_iscanover() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuideStepCfg::clear_has_iscanover() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuideStepCfg::clear_iscanover() {
  iscanover_ = 0u;
  clear_has_iscanover();
}
inline ::google::protobuf::uint32 GuideStepCfg::iscanover() const {
  return iscanover_;
}
inline void GuideStepCfg::set_iscanover(::google::protobuf::uint32 value) {
  set_has_iscanover();
  iscanover_ = value;
}

// required uint32 ViewType = 9;
inline bool GuideStepCfg::has_viewtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuideStepCfg::set_has_viewtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuideStepCfg::clear_has_viewtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuideStepCfg::clear_viewtype() {
  viewtype_ = 0u;
  clear_has_viewtype();
}
inline ::google::protobuf::uint32 GuideStepCfg::viewtype() const {
  return viewtype_;
}
inline void GuideStepCfg::set_viewtype(::google::protobuf::uint32 value) {
  set_has_viewtype();
  viewtype_ = value;
}

// required string ViewName = 10;
inline bool GuideStepCfg::has_viewname() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuideStepCfg::set_has_viewname() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuideStepCfg::clear_has_viewname() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuideStepCfg::clear_viewname() {
  if (viewname_ != &::google::protobuf::internal::kEmptyString) {
    viewname_->clear();
  }
  clear_has_viewname();
}
inline const ::std::string& GuideStepCfg::viewname() const {
  return *viewname_;
}
inline void GuideStepCfg::set_viewname(const ::std::string& value) {
  set_has_viewname();
  if (viewname_ == &::google::protobuf::internal::kEmptyString) {
    viewname_ = new ::std::string;
  }
  viewname_->assign(value);
}
inline void GuideStepCfg::set_viewname(const char* value) {
  set_has_viewname();
  if (viewname_ == &::google::protobuf::internal::kEmptyString) {
    viewname_ = new ::std::string;
  }
  viewname_->assign(value);
}
inline void GuideStepCfg::set_viewname(const char* value, size_t size) {
  set_has_viewname();
  if (viewname_ == &::google::protobuf::internal::kEmptyString) {
    viewname_ = new ::std::string;
  }
  viewname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuideStepCfg::mutable_viewname() {
  set_has_viewname();
  if (viewname_ == &::google::protobuf::internal::kEmptyString) {
    viewname_ = new ::std::string;
  }
  return viewname_;
}
inline ::std::string* GuideStepCfg::release_viewname() {
  clear_has_viewname();
  if (viewname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = viewname_;
    viewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuideStepCfg::set_allocated_viewname(::std::string* viewname) {
  if (viewname_ != &::google::protobuf::internal::kEmptyString) {
    delete viewname_;
  }
  if (viewname) {
    set_has_viewname();
    viewname_ = viewname;
  } else {
    clear_has_viewname();
    viewname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string ViewShape = 11;
inline bool GuideStepCfg::has_viewshape() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuideStepCfg::set_has_viewshape() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuideStepCfg::clear_has_viewshape() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuideStepCfg::clear_viewshape() {
  if (viewshape_ != &::google::protobuf::internal::kEmptyString) {
    viewshape_->clear();
  }
  clear_has_viewshape();
}
inline const ::std::string& GuideStepCfg::viewshape() const {
  return *viewshape_;
}
inline void GuideStepCfg::set_viewshape(const ::std::string& value) {
  set_has_viewshape();
  if (viewshape_ == &::google::protobuf::internal::kEmptyString) {
    viewshape_ = new ::std::string;
  }
  viewshape_->assign(value);
}
inline void GuideStepCfg::set_viewshape(const char* value) {
  set_has_viewshape();
  if (viewshape_ == &::google::protobuf::internal::kEmptyString) {
    viewshape_ = new ::std::string;
  }
  viewshape_->assign(value);
}
inline void GuideStepCfg::set_viewshape(const char* value, size_t size) {
  set_has_viewshape();
  if (viewshape_ == &::google::protobuf::internal::kEmptyString) {
    viewshape_ = new ::std::string;
  }
  viewshape_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuideStepCfg::mutable_viewshape() {
  set_has_viewshape();
  if (viewshape_ == &::google::protobuf::internal::kEmptyString) {
    viewshape_ = new ::std::string;
  }
  return viewshape_;
}
inline ::std::string* GuideStepCfg::release_viewshape() {
  clear_has_viewshape();
  if (viewshape_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = viewshape_;
    viewshape_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuideStepCfg::set_allocated_viewshape(::std::string* viewshape) {
  if (viewshape_ != &::google::protobuf::internal::kEmptyString) {
    delete viewshape_;
  }
  if (viewshape) {
    set_has_viewshape();
    viewshape_ = viewshape;
  } else {
    clear_has_viewshape();
    viewshape_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 ViewZoom = 12;
inline bool GuideStepCfg::has_viewzoom() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuideStepCfg::set_has_viewzoom() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuideStepCfg::clear_has_viewzoom() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuideStepCfg::clear_viewzoom() {
  viewzoom_ = 0;
  clear_has_viewzoom();
}
inline ::google::protobuf::int32 GuideStepCfg::viewzoom() const {
  return viewzoom_;
}
inline void GuideStepCfg::set_viewzoom(::google::protobuf::int32 value) {
  set_has_viewzoom();
  viewzoom_ = value;
}

// required string PromptWords = 13;
inline bool GuideStepCfg::has_promptwords() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuideStepCfg::set_has_promptwords() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuideStepCfg::clear_has_promptwords() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuideStepCfg::clear_promptwords() {
  if (promptwords_ != &::google::protobuf::internal::kEmptyString) {
    promptwords_->clear();
  }
  clear_has_promptwords();
}
inline const ::std::string& GuideStepCfg::promptwords() const {
  return *promptwords_;
}
inline void GuideStepCfg::set_promptwords(const ::std::string& value) {
  set_has_promptwords();
  if (promptwords_ == &::google::protobuf::internal::kEmptyString) {
    promptwords_ = new ::std::string;
  }
  promptwords_->assign(value);
}
inline void GuideStepCfg::set_promptwords(const char* value) {
  set_has_promptwords();
  if (promptwords_ == &::google::protobuf::internal::kEmptyString) {
    promptwords_ = new ::std::string;
  }
  promptwords_->assign(value);
}
inline void GuideStepCfg::set_promptwords(const char* value, size_t size) {
  set_has_promptwords();
  if (promptwords_ == &::google::protobuf::internal::kEmptyString) {
    promptwords_ = new ::std::string;
  }
  promptwords_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuideStepCfg::mutable_promptwords() {
  set_has_promptwords();
  if (promptwords_ == &::google::protobuf::internal::kEmptyString) {
    promptwords_ = new ::std::string;
  }
  return promptwords_;
}
inline ::std::string* GuideStepCfg::release_promptwords() {
  clear_has_promptwords();
  if (promptwords_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = promptwords_;
    promptwords_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuideStepCfg::set_allocated_promptwords(::std::string* promptwords) {
  if (promptwords_ != &::google::protobuf::internal::kEmptyString) {
    delete promptwords_;
  }
  if (promptwords) {
    set_has_promptwords();
    promptwords_ = promptwords;
  } else {
    clear_has_promptwords();
    promptwords_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuideStepCfgSet

// repeated .com.cfg.vo.GuideStepCfg guidestepcfg = 1;
inline int GuideStepCfgSet::guidestepcfg_size() const {
  return guidestepcfg_.size();
}
inline void GuideStepCfgSet::clear_guidestepcfg() {
  guidestepcfg_.Clear();
}
inline const ::com::cfg::vo::GuideStepCfg& GuideStepCfgSet::guidestepcfg(int index) const {
  return guidestepcfg_.Get(index);
}
inline ::com::cfg::vo::GuideStepCfg* GuideStepCfgSet::mutable_guidestepcfg(int index) {
  return guidestepcfg_.Mutable(index);
}
inline ::com::cfg::vo::GuideStepCfg* GuideStepCfgSet::add_guidestepcfg() {
  return guidestepcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::GuideStepCfg >&
GuideStepCfgSet::guidestepcfg() const {
  return guidestepcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::GuideStepCfg >*
GuideStepCfgSet::mutable_guidestepcfg() {
  return &guidestepcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuideStepCfg_2eproto__INCLUDED
