// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemDropTipCfg.proto

#ifndef PROTOBUF_ItemDropTipCfg_2eproto__INCLUDED
#define PROTOBUF_ItemDropTipCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ItemDropTipCfg_2eproto();
void protobuf_AssignDesc_ItemDropTipCfg_2eproto();
void protobuf_ShutdownFile_ItemDropTipCfg_2eproto();

class ItemDropTipType;
class ItemDropTipOne;
class ItemDropTipCfg;
class ItemDropTipCfgSet;

// ===================================================================

class ItemDropTipType : public ::google::protobuf::MessageLite {
 public:
  ItemDropTipType();
  virtual ~ItemDropTipType();

  ItemDropTipType(const ItemDropTipType& from);

  inline ItemDropTipType& operator=(const ItemDropTipType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ItemDropTipType& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemDropTipType* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemDropTipType* other);

  // implements Message ----------------------------------------------

  ItemDropTipType* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemDropTipType& from);
  void MergeFrom(const ItemDropTipType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ItemDropTipType)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ItemDropTipCfg_2eproto();
  friend void protobuf_ShutdownFile_ItemDropTipCfg_2eproto();

  void InitAsDefaultInstance();
  static ItemDropTipType* default_instance_;
};
// -------------------------------------------------------------------

class ItemDropTipOne : public ::google::protobuf::MessageLite {
 public:
  ItemDropTipOne();
  virtual ~ItemDropTipOne();

  ItemDropTipOne(const ItemDropTipOne& from);

  inline ItemDropTipOne& operator=(const ItemDropTipOne& from) {
    CopyFrom(from);
    return *this;
  }

  static const ItemDropTipOne& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemDropTipOne* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemDropTipOne* other);

  // implements Message ----------------------------------------------

  ItemDropTipOne* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemDropTipOne& from);
  void MergeFrom(const ItemDropTipOne& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 WarType = 1;
  inline bool has_wartype() const;
  inline void clear_wartype();
  static const int kWarTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 wartype() const;
  inline void set_wartype(::google::protobuf::uint32 value);

  // required uint32 WarID = 2;
  inline bool has_warid() const;
  inline void clear_warid();
  static const int kWarIDFieldNumber = 2;
  inline ::google::protobuf::uint32 warid() const;
  inline void set_warid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ItemDropTipOne)
 private:
  inline void set_has_wartype();
  inline void clear_has_wartype();
  inline void set_has_warid();
  inline void clear_has_warid();

  ::google::protobuf::uint32 wartype_;
  ::google::protobuf::uint32 warid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ItemDropTipCfg_2eproto();
  friend void protobuf_ShutdownFile_ItemDropTipCfg_2eproto();

  void InitAsDefaultInstance();
  static ItemDropTipOne* default_instance_;
};
// -------------------------------------------------------------------

class ItemDropTipCfg : public ::google::protobuf::MessageLite {
 public:
  ItemDropTipCfg();
  virtual ~ItemDropTipCfg();

  ItemDropTipCfg(const ItemDropTipCfg& from);

  inline ItemDropTipCfg& operator=(const ItemDropTipCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ItemDropTipCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemDropTipCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemDropTipCfg* other);

  // implements Message ----------------------------------------------

  ItemDropTipCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemDropTipCfg& from);
  void MergeFrom(const ItemDropTipCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ThingID = 2;
  inline bool has_thingid() const;
  inline void clear_thingid();
  static const int kThingIDFieldNumber = 2;
  inline ::google::protobuf::uint32 thingid() const;
  inline void set_thingid(::google::protobuf::uint32 value);

  // required uint32 ThingType = 3;
  inline bool has_thingtype() const;
  inline void clear_thingtype();
  static const int kThingTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 thingtype() const;
  inline void set_thingtype(::google::protobuf::uint32 value);

  // required string TipTxt = 4;
  inline bool has_tiptxt() const;
  inline void clear_tiptxt();
  static const int kTipTxtFieldNumber = 4;
  inline const ::std::string& tiptxt() const;
  inline void set_tiptxt(const ::std::string& value);
  inline void set_tiptxt(const char* value);
  inline void set_tiptxt(const char* value, size_t size);
  inline ::std::string* mutable_tiptxt();
  inline ::std::string* release_tiptxt();
  inline void set_allocated_tiptxt(::std::string* tiptxt);

  // repeated .com.cfg.vo.ItemDropTipType DropType = 5;
  inline int droptype_size() const;
  inline void clear_droptype();
  static const int kDropTypeFieldNumber = 5;
  inline const ::com::cfg::vo::ItemDropTipType& droptype(int index) const;
  inline ::com::cfg::vo::ItemDropTipType* mutable_droptype(int index);
  inline ::com::cfg::vo::ItemDropTipType* add_droptype();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipType >&
      droptype() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipType >*
      mutable_droptype();

  // repeated .com.cfg.vo.ItemDropTipOne WarList = 6;
  inline int warlist_size() const;
  inline void clear_warlist();
  static const int kWarListFieldNumber = 6;
  inline const ::com::cfg::vo::ItemDropTipOne& warlist(int index) const;
  inline ::com::cfg::vo::ItemDropTipOne* mutable_warlist(int index);
  inline ::com::cfg::vo::ItemDropTipOne* add_warlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipOne >&
      warlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipOne >*
      mutable_warlist();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ItemDropTipCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_thingid();
  inline void clear_has_thingid();
  inline void set_has_thingtype();
  inline void clear_has_thingtype();
  inline void set_has_tiptxt();
  inline void clear_has_tiptxt();

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 thingid_;
  ::std::string* tiptxt_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipType > droptype_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipOne > warlist_;
  ::google::protobuf::uint32 thingtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ItemDropTipCfg_2eproto();
  friend void protobuf_ShutdownFile_ItemDropTipCfg_2eproto();

  void InitAsDefaultInstance();
  static ItemDropTipCfg* default_instance_;
};
// -------------------------------------------------------------------

class ItemDropTipCfgSet : public ::google::protobuf::MessageLite {
 public:
  ItemDropTipCfgSet();
  virtual ~ItemDropTipCfgSet();

  ItemDropTipCfgSet(const ItemDropTipCfgSet& from);

  inline ItemDropTipCfgSet& operator=(const ItemDropTipCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ItemDropTipCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemDropTipCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemDropTipCfgSet* other);

  // implements Message ----------------------------------------------

  ItemDropTipCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemDropTipCfgSet& from);
  void MergeFrom(const ItemDropTipCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.ItemDropTipCfg itemDropTipCfg = 1;
  inline int itemdroptipcfg_size() const;
  inline void clear_itemdroptipcfg();
  static const int kItemDropTipCfgFieldNumber = 1;
  inline const ::com::cfg::vo::ItemDropTipCfg& itemdroptipcfg(int index) const;
  inline ::com::cfg::vo::ItemDropTipCfg* mutable_itemdroptipcfg(int index);
  inline ::com::cfg::vo::ItemDropTipCfg* add_itemdroptipcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipCfg >&
      itemdroptipcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipCfg >*
      mutable_itemdroptipcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ItemDropTipCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipCfg > itemdroptipcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ItemDropTipCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ItemDropTipCfg_2eproto();
  friend void protobuf_ShutdownFile_ItemDropTipCfg_2eproto();

  void InitAsDefaultInstance();
  static ItemDropTipCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemDropTipType

// required uint32 type = 1;
inline bool ItemDropTipType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDropTipType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDropTipType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDropTipType::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ItemDropTipType::type() const {
  return type_;
}
inline void ItemDropTipType::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ItemDropTipOne

// required uint32 WarType = 1;
inline bool ItemDropTipOne::has_wartype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDropTipOne::set_has_wartype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDropTipOne::clear_has_wartype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDropTipOne::clear_wartype() {
  wartype_ = 0u;
  clear_has_wartype();
}
inline ::google::protobuf::uint32 ItemDropTipOne::wartype() const {
  return wartype_;
}
inline void ItemDropTipOne::set_wartype(::google::protobuf::uint32 value) {
  set_has_wartype();
  wartype_ = value;
}

// required uint32 WarID = 2;
inline bool ItemDropTipOne::has_warid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemDropTipOne::set_has_warid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemDropTipOne::clear_has_warid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemDropTipOne::clear_warid() {
  warid_ = 0u;
  clear_has_warid();
}
inline ::google::protobuf::uint32 ItemDropTipOne::warid() const {
  return warid_;
}
inline void ItemDropTipOne::set_warid(::google::protobuf::uint32 value) {
  set_has_warid();
  warid_ = value;
}

// -------------------------------------------------------------------

// ItemDropTipCfg

// required uint32 ID = 1;
inline bool ItemDropTipCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDropTipCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDropTipCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDropTipCfg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ItemDropTipCfg::id() const {
  return id_;
}
inline void ItemDropTipCfg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 ThingID = 2;
inline bool ItemDropTipCfg::has_thingid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemDropTipCfg::set_has_thingid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemDropTipCfg::clear_has_thingid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemDropTipCfg::clear_thingid() {
  thingid_ = 0u;
  clear_has_thingid();
}
inline ::google::protobuf::uint32 ItemDropTipCfg::thingid() const {
  return thingid_;
}
inline void ItemDropTipCfg::set_thingid(::google::protobuf::uint32 value) {
  set_has_thingid();
  thingid_ = value;
}

// required uint32 ThingType = 3;
inline bool ItemDropTipCfg::has_thingtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemDropTipCfg::set_has_thingtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemDropTipCfg::clear_has_thingtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemDropTipCfg::clear_thingtype() {
  thingtype_ = 0u;
  clear_has_thingtype();
}
inline ::google::protobuf::uint32 ItemDropTipCfg::thingtype() const {
  return thingtype_;
}
inline void ItemDropTipCfg::set_thingtype(::google::protobuf::uint32 value) {
  set_has_thingtype();
  thingtype_ = value;
}

// required string TipTxt = 4;
inline bool ItemDropTipCfg::has_tiptxt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemDropTipCfg::set_has_tiptxt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemDropTipCfg::clear_has_tiptxt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemDropTipCfg::clear_tiptxt() {
  if (tiptxt_ != &::google::protobuf::internal::kEmptyString) {
    tiptxt_->clear();
  }
  clear_has_tiptxt();
}
inline const ::std::string& ItemDropTipCfg::tiptxt() const {
  return *tiptxt_;
}
inline void ItemDropTipCfg::set_tiptxt(const ::std::string& value) {
  set_has_tiptxt();
  if (tiptxt_ == &::google::protobuf::internal::kEmptyString) {
    tiptxt_ = new ::std::string;
  }
  tiptxt_->assign(value);
}
inline void ItemDropTipCfg::set_tiptxt(const char* value) {
  set_has_tiptxt();
  if (tiptxt_ == &::google::protobuf::internal::kEmptyString) {
    tiptxt_ = new ::std::string;
  }
  tiptxt_->assign(value);
}
inline void ItemDropTipCfg::set_tiptxt(const char* value, size_t size) {
  set_has_tiptxt();
  if (tiptxt_ == &::google::protobuf::internal::kEmptyString) {
    tiptxt_ = new ::std::string;
  }
  tiptxt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ItemDropTipCfg::mutable_tiptxt() {
  set_has_tiptxt();
  if (tiptxt_ == &::google::protobuf::internal::kEmptyString) {
    tiptxt_ = new ::std::string;
  }
  return tiptxt_;
}
inline ::std::string* ItemDropTipCfg::release_tiptxt() {
  clear_has_tiptxt();
  if (tiptxt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tiptxt_;
    tiptxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ItemDropTipCfg::set_allocated_tiptxt(::std::string* tiptxt) {
  if (tiptxt_ != &::google::protobuf::internal::kEmptyString) {
    delete tiptxt_;
  }
  if (tiptxt) {
    set_has_tiptxt();
    tiptxt_ = tiptxt;
  } else {
    clear_has_tiptxt();
    tiptxt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .com.cfg.vo.ItemDropTipType DropType = 5;
inline int ItemDropTipCfg::droptype_size() const {
  return droptype_.size();
}
inline void ItemDropTipCfg::clear_droptype() {
  droptype_.Clear();
}
inline const ::com::cfg::vo::ItemDropTipType& ItemDropTipCfg::droptype(int index) const {
  return droptype_.Get(index);
}
inline ::com::cfg::vo::ItemDropTipType* ItemDropTipCfg::mutable_droptype(int index) {
  return droptype_.Mutable(index);
}
inline ::com::cfg::vo::ItemDropTipType* ItemDropTipCfg::add_droptype() {
  return droptype_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipType >&
ItemDropTipCfg::droptype() const {
  return droptype_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipType >*
ItemDropTipCfg::mutable_droptype() {
  return &droptype_;
}

// repeated .com.cfg.vo.ItemDropTipOne WarList = 6;
inline int ItemDropTipCfg::warlist_size() const {
  return warlist_.size();
}
inline void ItemDropTipCfg::clear_warlist() {
  warlist_.Clear();
}
inline const ::com::cfg::vo::ItemDropTipOne& ItemDropTipCfg::warlist(int index) const {
  return warlist_.Get(index);
}
inline ::com::cfg::vo::ItemDropTipOne* ItemDropTipCfg::mutable_warlist(int index) {
  return warlist_.Mutable(index);
}
inline ::com::cfg::vo::ItemDropTipOne* ItemDropTipCfg::add_warlist() {
  return warlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipOne >&
ItemDropTipCfg::warlist() const {
  return warlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipOne >*
ItemDropTipCfg::mutable_warlist() {
  return &warlist_;
}

// -------------------------------------------------------------------

// ItemDropTipCfgSet

// repeated .com.cfg.vo.ItemDropTipCfg itemDropTipCfg = 1;
inline int ItemDropTipCfgSet::itemdroptipcfg_size() const {
  return itemdroptipcfg_.size();
}
inline void ItemDropTipCfgSet::clear_itemdroptipcfg() {
  itemdroptipcfg_.Clear();
}
inline const ::com::cfg::vo::ItemDropTipCfg& ItemDropTipCfgSet::itemdroptipcfg(int index) const {
  return itemdroptipcfg_.Get(index);
}
inline ::com::cfg::vo::ItemDropTipCfg* ItemDropTipCfgSet::mutable_itemdroptipcfg(int index) {
  return itemdroptipcfg_.Mutable(index);
}
inline ::com::cfg::vo::ItemDropTipCfg* ItemDropTipCfgSet::add_itemdroptipcfg() {
  return itemdroptipcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipCfg >&
ItemDropTipCfgSet::itemdroptipcfg() const {
  return itemdroptipcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ItemDropTipCfg >*
ItemDropTipCfgSet::mutable_itemdroptipcfg() {
  return &itemdroptipcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ItemDropTipCfg_2eproto__INCLUDED
