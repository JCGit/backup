// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DailyConsumeAwardCfg.proto

#ifndef PROTOBUF_DailyConsumeAwardCfg_2eproto__INCLUDED
#define PROTOBUF_DailyConsumeAwardCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto();
void protobuf_AssignDesc_DailyConsumeAwardCfg_2eproto();
void protobuf_ShutdownFile_DailyConsumeAwardCfg_2eproto();

class DailyConsumeAwardCfgElmt;
class DailyConsumeAwardCfg;
class DailyConsumeAwardCfgSet;

// ===================================================================

class DailyConsumeAwardCfgElmt : public ::google::protobuf::MessageLite {
 public:
  DailyConsumeAwardCfgElmt();
  virtual ~DailyConsumeAwardCfgElmt();

  DailyConsumeAwardCfgElmt(const DailyConsumeAwardCfgElmt& from);

  inline DailyConsumeAwardCfgElmt& operator=(const DailyConsumeAwardCfgElmt& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumeAwardCfgElmt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumeAwardCfgElmt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumeAwardCfgElmt* other);

  // implements Message ----------------------------------------------

  DailyConsumeAwardCfgElmt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumeAwardCfgElmt& from);
  void MergeFrom(const DailyConsumeAwardCfgElmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ElementType = 1;
  inline bool has_elementtype() const;
  inline void clear_elementtype();
  static const int kElementTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 elementtype() const;
  inline void set_elementtype(::google::protobuf::uint32 value);

  // required uint32 ElementID = 2;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIDFieldNumber = 2;
  inline ::google::protobuf::uint32 elementid() const;
  inline void set_elementid(::google::protobuf::uint32 value);

  // required uint32 ElementCnt = 3;
  inline bool has_elementcnt() const;
  inline void clear_elementcnt();
  static const int kElementCntFieldNumber = 3;
  inline ::google::protobuf::uint32 elementcnt() const;
  inline void set_elementcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyConsumeAwardCfgElmt)
 private:
  inline void set_has_elementtype();
  inline void clear_has_elementtype();
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementcnt();
  inline void clear_has_elementcnt();

  ::google::protobuf::uint32 elementtype_;
  ::google::protobuf::uint32 elementid_;
  ::google::protobuf::uint32 elementcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyConsumeAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyConsumeAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumeAwardCfgElmt* default_instance_;
};
// -------------------------------------------------------------------

class DailyConsumeAwardCfg : public ::google::protobuf::MessageLite {
 public:
  DailyConsumeAwardCfg();
  virtual ~DailyConsumeAwardCfg();

  DailyConsumeAwardCfg(const DailyConsumeAwardCfg& from);

  inline DailyConsumeAwardCfg& operator=(const DailyConsumeAwardCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumeAwardCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumeAwardCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumeAwardCfg* other);

  // implements Message ----------------------------------------------

  DailyConsumeAwardCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumeAwardCfg& from);
  void MergeFrom(const DailyConsumeAwardCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 TotalConsume = 2;
  inline bool has_totalconsume() const;
  inline void clear_totalconsume();
  static const int kTotalConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 totalconsume() const;
  inline void set_totalconsume(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.DailyConsumeAwardCfgElmt ElmtLst = 3;
  inline int elmtlst_size() const;
  inline void clear_elmtlst();
  static const int kElmtLstFieldNumber = 3;
  inline const ::com::cfg::vo::DailyConsumeAwardCfgElmt& elmtlst(int index) const;
  inline ::com::cfg::vo::DailyConsumeAwardCfgElmt* mutable_elmtlst(int index);
  inline ::com::cfg::vo::DailyConsumeAwardCfgElmt* add_elmtlst();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfgElmt >&
      elmtlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfgElmt >*
      mutable_elmtlst();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyConsumeAwardCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_totalconsume();
  inline void clear_has_totalconsume();

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 totalconsume_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfgElmt > elmtlst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyConsumeAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyConsumeAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumeAwardCfg* default_instance_;
};
// -------------------------------------------------------------------

class DailyConsumeAwardCfgSet : public ::google::protobuf::MessageLite {
 public:
  DailyConsumeAwardCfgSet();
  virtual ~DailyConsumeAwardCfgSet();

  DailyConsumeAwardCfgSet(const DailyConsumeAwardCfgSet& from);

  inline DailyConsumeAwardCfgSet& operator=(const DailyConsumeAwardCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const DailyConsumeAwardCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DailyConsumeAwardCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DailyConsumeAwardCfgSet* other);

  // implements Message ----------------------------------------------

  DailyConsumeAwardCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DailyConsumeAwardCfgSet& from);
  void MergeFrom(const DailyConsumeAwardCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.DailyConsumeAwardCfg dailyConsumeAwardCfg = 1;
  inline int dailyconsumeawardcfg_size() const;
  inline void clear_dailyconsumeawardcfg();
  static const int kDailyConsumeAwardCfgFieldNumber = 1;
  inline const ::com::cfg::vo::DailyConsumeAwardCfg& dailyconsumeawardcfg(int index) const;
  inline ::com::cfg::vo::DailyConsumeAwardCfg* mutable_dailyconsumeawardcfg(int index);
  inline ::com::cfg::vo::DailyConsumeAwardCfg* add_dailyconsumeawardcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfg >&
      dailyconsumeawardcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfg >*
      mutable_dailyconsumeawardcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.DailyConsumeAwardCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfg > dailyconsumeawardcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DailyConsumeAwardCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_DailyConsumeAwardCfg_2eproto();
  friend void protobuf_ShutdownFile_DailyConsumeAwardCfg_2eproto();

  void InitAsDefaultInstance();
  static DailyConsumeAwardCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// DailyConsumeAwardCfgElmt

// required uint32 ElementType = 1;
inline bool DailyConsumeAwardCfgElmt::has_elementtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyConsumeAwardCfgElmt::set_has_elementtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyConsumeAwardCfgElmt::clear_has_elementtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyConsumeAwardCfgElmt::clear_elementtype() {
  elementtype_ = 0u;
  clear_has_elementtype();
}
inline ::google::protobuf::uint32 DailyConsumeAwardCfgElmt::elementtype() const {
  return elementtype_;
}
inline void DailyConsumeAwardCfgElmt::set_elementtype(::google::protobuf::uint32 value) {
  set_has_elementtype();
  elementtype_ = value;
}

// required uint32 ElementID = 2;
inline bool DailyConsumeAwardCfgElmt::has_elementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyConsumeAwardCfgElmt::set_has_elementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyConsumeAwardCfgElmt::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyConsumeAwardCfgElmt::clear_elementid() {
  elementid_ = 0u;
  clear_has_elementid();
}
inline ::google::protobuf::uint32 DailyConsumeAwardCfgElmt::elementid() const {
  return elementid_;
}
inline void DailyConsumeAwardCfgElmt::set_elementid(::google::protobuf::uint32 value) {
  set_has_elementid();
  elementid_ = value;
}

// required uint32 ElementCnt = 3;
inline bool DailyConsumeAwardCfgElmt::has_elementcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyConsumeAwardCfgElmt::set_has_elementcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyConsumeAwardCfgElmt::clear_has_elementcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyConsumeAwardCfgElmt::clear_elementcnt() {
  elementcnt_ = 0u;
  clear_has_elementcnt();
}
inline ::google::protobuf::uint32 DailyConsumeAwardCfgElmt::elementcnt() const {
  return elementcnt_;
}
inline void DailyConsumeAwardCfgElmt::set_elementcnt(::google::protobuf::uint32 value) {
  set_has_elementcnt();
  elementcnt_ = value;
}

// -------------------------------------------------------------------

// DailyConsumeAwardCfg

// required uint32 Level = 1;
inline bool DailyConsumeAwardCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyConsumeAwardCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyConsumeAwardCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyConsumeAwardCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DailyConsumeAwardCfg::level() const {
  return level_;
}
inline void DailyConsumeAwardCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 TotalConsume = 2;
inline bool DailyConsumeAwardCfg::has_totalconsume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyConsumeAwardCfg::set_has_totalconsume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyConsumeAwardCfg::clear_has_totalconsume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyConsumeAwardCfg::clear_totalconsume() {
  totalconsume_ = 0u;
  clear_has_totalconsume();
}
inline ::google::protobuf::uint32 DailyConsumeAwardCfg::totalconsume() const {
  return totalconsume_;
}
inline void DailyConsumeAwardCfg::set_totalconsume(::google::protobuf::uint32 value) {
  set_has_totalconsume();
  totalconsume_ = value;
}

// repeated .com.cfg.vo.DailyConsumeAwardCfgElmt ElmtLst = 3;
inline int DailyConsumeAwardCfg::elmtlst_size() const {
  return elmtlst_.size();
}
inline void DailyConsumeAwardCfg::clear_elmtlst() {
  elmtlst_.Clear();
}
inline const ::com::cfg::vo::DailyConsumeAwardCfgElmt& DailyConsumeAwardCfg::elmtlst(int index) const {
  return elmtlst_.Get(index);
}
inline ::com::cfg::vo::DailyConsumeAwardCfgElmt* DailyConsumeAwardCfg::mutable_elmtlst(int index) {
  return elmtlst_.Mutable(index);
}
inline ::com::cfg::vo::DailyConsumeAwardCfgElmt* DailyConsumeAwardCfg::add_elmtlst() {
  return elmtlst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfgElmt >&
DailyConsumeAwardCfg::elmtlst() const {
  return elmtlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfgElmt >*
DailyConsumeAwardCfg::mutable_elmtlst() {
  return &elmtlst_;
}

// -------------------------------------------------------------------

// DailyConsumeAwardCfgSet

// repeated .com.cfg.vo.DailyConsumeAwardCfg dailyConsumeAwardCfg = 1;
inline int DailyConsumeAwardCfgSet::dailyconsumeawardcfg_size() const {
  return dailyconsumeawardcfg_.size();
}
inline void DailyConsumeAwardCfgSet::clear_dailyconsumeawardcfg() {
  dailyconsumeawardcfg_.Clear();
}
inline const ::com::cfg::vo::DailyConsumeAwardCfg& DailyConsumeAwardCfgSet::dailyconsumeawardcfg(int index) const {
  return dailyconsumeawardcfg_.Get(index);
}
inline ::com::cfg::vo::DailyConsumeAwardCfg* DailyConsumeAwardCfgSet::mutable_dailyconsumeawardcfg(int index) {
  return dailyconsumeawardcfg_.Mutable(index);
}
inline ::com::cfg::vo::DailyConsumeAwardCfg* DailyConsumeAwardCfgSet::add_dailyconsumeawardcfg() {
  return dailyconsumeawardcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfg >&
DailyConsumeAwardCfgSet::dailyconsumeawardcfg() const {
  return dailyconsumeawardcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DailyConsumeAwardCfg >*
DailyConsumeAwardCfgSet::mutable_dailyconsumeawardcfg() {
  return &dailyconsumeawardcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DailyConsumeAwardCfg_2eproto__INCLUDED
