// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerGrowCfg.proto

#ifndef PROTOBUF_PlayerGrowCfg_2eproto__INCLUDED
#define PROTOBUF_PlayerGrowCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerGrowCfg_2eproto();
void protobuf_AssignDesc_PlayerGrowCfg_2eproto();
void protobuf_ShutdownFile_PlayerGrowCfg_2eproto();

class PlayerGrowCfg;
class PlayerGrowCfgSet;

// ===================================================================

class PlayerGrowCfg : public ::google::protobuf::MessageLite {
 public:
  PlayerGrowCfg();
  virtual ~PlayerGrowCfg();

  PlayerGrowCfg(const PlayerGrowCfg& from);

  inline PlayerGrowCfg& operator=(const PlayerGrowCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerGrowCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerGrowCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerGrowCfg* other);

  // implements Message ----------------------------------------------

  PlayerGrowCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerGrowCfg& from);
  void MergeFrom(const PlayerGrowCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 HP = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 MP = 3;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 3;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // required uint32 ATK = 4;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kATKFieldNumber = 4;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);

  // required uint32 DEF = 5;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDEFFieldNumber = 5;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);

  // required uint32 MoveSpeed = 6;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 6;
  inline ::google::protobuf::uint32 movespeed() const;
  inline void set_movespeed(::google::protobuf::uint32 value);

  // required uint32 RunSpeed = 7;
  inline bool has_runspeed() const;
  inline void clear_runspeed();
  static const int kRunSpeedFieldNumber = 7;
  inline ::google::protobuf::uint32 runspeed() const;
  inline void set_runspeed(::google::protobuf::uint32 value);

  // required uint32 BackSpeed = 8;
  inline bool has_backspeed() const;
  inline void clear_backspeed();
  static const int kBackSpeedFieldNumber = 8;
  inline ::google::protobuf::uint32 backspeed() const;
  inline void set_backspeed(::google::protobuf::uint32 value);

  // required uint32 AtkSpeed = 9;
  inline bool has_atkspeed() const;
  inline void clear_atkspeed();
  static const int kAtkSpeedFieldNumber = 9;
  inline ::google::protobuf::uint32 atkspeed() const;
  inline void set_atkspeed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.PlayerGrowCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_runspeed();
  inline void clear_has_runspeed();
  inline void set_has_backspeed();
  inline void clear_has_backspeed();
  inline void set_has_atkspeed();
  inline void clear_has_atkspeed();

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 movespeed_;
  ::google::protobuf::uint32 runspeed_;
  ::google::protobuf::uint32 backspeed_;
  ::google::protobuf::uint32 atkspeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PlayerGrowCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PlayerGrowCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_PlayerGrowCfg_2eproto();
  friend void protobuf_ShutdownFile_PlayerGrowCfg_2eproto();

  void InitAsDefaultInstance();
  static PlayerGrowCfg* default_instance_;
};
// -------------------------------------------------------------------

class PlayerGrowCfgSet : public ::google::protobuf::MessageLite {
 public:
  PlayerGrowCfgSet();
  virtual ~PlayerGrowCfgSet();

  PlayerGrowCfgSet(const PlayerGrowCfgSet& from);

  inline PlayerGrowCfgSet& operator=(const PlayerGrowCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerGrowCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerGrowCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerGrowCfgSet* other);

  // implements Message ----------------------------------------------

  PlayerGrowCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerGrowCfgSet& from);
  void MergeFrom(const PlayerGrowCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.PlayerGrowCfg playergrowcfg = 1;
  inline int playergrowcfg_size() const;
  inline void clear_playergrowcfg();
  static const int kPlayergrowcfgFieldNumber = 1;
  inline const ::com::cfg::vo::PlayerGrowCfg& playergrowcfg(int index) const;
  inline ::com::cfg::vo::PlayerGrowCfg* mutable_playergrowcfg(int index);
  inline ::com::cfg::vo::PlayerGrowCfg* add_playergrowcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::PlayerGrowCfg >&
      playergrowcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::PlayerGrowCfg >*
      mutable_playergrowcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.PlayerGrowCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::PlayerGrowCfg > playergrowcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PlayerGrowCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PlayerGrowCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_PlayerGrowCfg_2eproto();
  friend void protobuf_ShutdownFile_PlayerGrowCfg_2eproto();

  void InitAsDefaultInstance();
  static PlayerGrowCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerGrowCfg

// required uint32 Level = 1;
inline bool PlayerGrowCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerGrowCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerGrowCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerGrowCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::level() const {
  return level_;
}
inline void PlayerGrowCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 HP = 2;
inline bool PlayerGrowCfg::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerGrowCfg::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerGrowCfg::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerGrowCfg::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::hp() const {
  return hp_;
}
inline void PlayerGrowCfg::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 MP = 3;
inline bool PlayerGrowCfg::has_mp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerGrowCfg::set_has_mp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerGrowCfg::clear_has_mp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerGrowCfg::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::mp() const {
  return mp_;
}
inline void PlayerGrowCfg::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
}

// required uint32 ATK = 4;
inline bool PlayerGrowCfg::has_atk() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerGrowCfg::set_has_atk() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerGrowCfg::clear_has_atk() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerGrowCfg::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::atk() const {
  return atk_;
}
inline void PlayerGrowCfg::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
}

// required uint32 DEF = 5;
inline bool PlayerGrowCfg::has_def() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerGrowCfg::set_has_def() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerGrowCfg::clear_has_def() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerGrowCfg::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::def() const {
  return def_;
}
inline void PlayerGrowCfg::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 MoveSpeed = 6;
inline bool PlayerGrowCfg::has_movespeed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerGrowCfg::set_has_movespeed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerGrowCfg::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerGrowCfg::clear_movespeed() {
  movespeed_ = 0u;
  clear_has_movespeed();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::movespeed() const {
  return movespeed_;
}
inline void PlayerGrowCfg::set_movespeed(::google::protobuf::uint32 value) {
  set_has_movespeed();
  movespeed_ = value;
}

// required uint32 RunSpeed = 7;
inline bool PlayerGrowCfg::has_runspeed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerGrowCfg::set_has_runspeed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerGrowCfg::clear_has_runspeed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerGrowCfg::clear_runspeed() {
  runspeed_ = 0u;
  clear_has_runspeed();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::runspeed() const {
  return runspeed_;
}
inline void PlayerGrowCfg::set_runspeed(::google::protobuf::uint32 value) {
  set_has_runspeed();
  runspeed_ = value;
}

// required uint32 BackSpeed = 8;
inline bool PlayerGrowCfg::has_backspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerGrowCfg::set_has_backspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerGrowCfg::clear_has_backspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerGrowCfg::clear_backspeed() {
  backspeed_ = 0u;
  clear_has_backspeed();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::backspeed() const {
  return backspeed_;
}
inline void PlayerGrowCfg::set_backspeed(::google::protobuf::uint32 value) {
  set_has_backspeed();
  backspeed_ = value;
}

// required uint32 AtkSpeed = 9;
inline bool PlayerGrowCfg::has_atkspeed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerGrowCfg::set_has_atkspeed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerGrowCfg::clear_has_atkspeed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerGrowCfg::clear_atkspeed() {
  atkspeed_ = 0u;
  clear_has_atkspeed();
}
inline ::google::protobuf::uint32 PlayerGrowCfg::atkspeed() const {
  return atkspeed_;
}
inline void PlayerGrowCfg::set_atkspeed(::google::protobuf::uint32 value) {
  set_has_atkspeed();
  atkspeed_ = value;
}

// -------------------------------------------------------------------

// PlayerGrowCfgSet

// repeated .com.cfg.vo.PlayerGrowCfg playergrowcfg = 1;
inline int PlayerGrowCfgSet::playergrowcfg_size() const {
  return playergrowcfg_.size();
}
inline void PlayerGrowCfgSet::clear_playergrowcfg() {
  playergrowcfg_.Clear();
}
inline const ::com::cfg::vo::PlayerGrowCfg& PlayerGrowCfgSet::playergrowcfg(int index) const {
  return playergrowcfg_.Get(index);
}
inline ::com::cfg::vo::PlayerGrowCfg* PlayerGrowCfgSet::mutable_playergrowcfg(int index) {
  return playergrowcfg_.Mutable(index);
}
inline ::com::cfg::vo::PlayerGrowCfg* PlayerGrowCfgSet::add_playergrowcfg() {
  return playergrowcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::PlayerGrowCfg >&
PlayerGrowCfgSet::playergrowcfg() const {
  return playergrowcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::PlayerGrowCfg >*
PlayerGrowCfgSet::mutable_playergrowcfg() {
  return &playergrowcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerGrowCfg_2eproto__INCLUDED
