// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArenaKillNumCfg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ArenaKillNumCfg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

void protobuf_ShutdownFile_ArenaKillNumCfg_2eproto() {
  delete ArenaKillNumCfg::default_instance_;
  delete ArenaKillNumCfgSet::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_ArenaKillNumCfg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_ArenaKillNumCfg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ArenaKillNumCfg::default_instance_ = new ArenaKillNumCfg();
  ArenaKillNumCfgSet::default_instance_ = new ArenaKillNumCfgSet();
  ArenaKillNumCfg::default_instance_->InitAsDefaultInstance();
  ArenaKillNumCfgSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ArenaKillNumCfg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ArenaKillNumCfg_2eproto_once_);
void protobuf_AddDesc_ArenaKillNumCfg_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ArenaKillNumCfg_2eproto_once_,
                 &protobuf_AddDesc_ArenaKillNumCfg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ArenaKillNumCfg_2eproto {
  StaticDescriptorInitializer_ArenaKillNumCfg_2eproto() {
    protobuf_AddDesc_ArenaKillNumCfg_2eproto();
  }
} static_descriptor_initializer_ArenaKillNumCfg_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int ArenaKillNumCfg::kLevFieldNumber;
const int ArenaKillNumCfg::kKillNumFieldNumber;
const int ArenaKillNumCfg::kKillSoundFieldNumber;
#endif  // !_MSC_VER

ArenaKillNumCfg::ArenaKillNumCfg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void ArenaKillNumCfg::InitAsDefaultInstance() {
}

ArenaKillNumCfg::ArenaKillNumCfg(const ArenaKillNumCfg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void ArenaKillNumCfg::SharedCtor() {
  _cached_size_ = 0;
  lev_ = 0u;
  killnum_ = 0u;
  killsound_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArenaKillNumCfg::~ArenaKillNumCfg() {
  SharedDtor();
}

void ArenaKillNumCfg::SharedDtor() {
  if (killsound_ != &::google::protobuf::internal::kEmptyString) {
    delete killsound_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ArenaKillNumCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ArenaKillNumCfg& ArenaKillNumCfg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ArenaKillNumCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ArenaKillNumCfg_2eproto();
#endif
  return *default_instance_;
}

ArenaKillNumCfg* ArenaKillNumCfg::default_instance_ = NULL;

ArenaKillNumCfg* ArenaKillNumCfg::New() const {
  return new ArenaKillNumCfg;
}

void ArenaKillNumCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lev_ = 0u;
    killnum_ = 0u;
    if (has_killsound()) {
      if (killsound_ != &::google::protobuf::internal::kEmptyString) {
        killsound_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool ArenaKillNumCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Lev = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lev_)));
          set_has_lev();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_KillNum;
        break;
      }

      // required uint32 KillNum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_KillNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killnum_)));
          set_has_killnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_KillSound;
        break;
      }

      // required string KillSound = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_KillSound:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_killsound()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArenaKillNumCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 Lev = 1;
  if (has_lev()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lev(), output);
  }

  // required uint32 KillNum = 2;
  if (has_killnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->killnum(), output);
  }

  // required string KillSound = 3;
  if (has_killsound()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->killsound(), output);
  }

}

int ArenaKillNumCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Lev = 1;
    if (has_lev()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lev());
    }

    // required uint32 KillNum = 2;
    if (has_killnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killnum());
    }

    // required string KillSound = 3;
    if (has_killsound()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->killsound());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArenaKillNumCfg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ArenaKillNumCfg*>(&from));
}

void ArenaKillNumCfg::MergeFrom(const ArenaKillNumCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lev()) {
      set_lev(from.lev());
    }
    if (from.has_killnum()) {
      set_killnum(from.killnum());
    }
    if (from.has_killsound()) {
      set_killsound(from.killsound());
    }
  }
}

void ArenaKillNumCfg::CopyFrom(const ArenaKillNumCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaKillNumCfg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ArenaKillNumCfg::Swap(ArenaKillNumCfg* other) {
  if (other != this) {
    std::swap(lev_, other->lev_);
    std::swap(killnum_, other->killnum_);
    std::swap(killsound_, other->killsound_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ArenaKillNumCfg::GetTypeName() const {
  return "com.cfg.vo.ArenaKillNumCfg";
}


// ===================================================================

#ifndef _MSC_VER
const int ArenaKillNumCfgSet::kArenaKillNumCfgFieldNumber;
#endif  // !_MSC_VER

ArenaKillNumCfgSet::ArenaKillNumCfgSet()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void ArenaKillNumCfgSet::InitAsDefaultInstance() {
}

ArenaKillNumCfgSet::ArenaKillNumCfgSet(const ArenaKillNumCfgSet& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void ArenaKillNumCfgSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArenaKillNumCfgSet::~ArenaKillNumCfgSet() {
  SharedDtor();
}

void ArenaKillNumCfgSet::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ArenaKillNumCfgSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ArenaKillNumCfgSet& ArenaKillNumCfgSet::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ArenaKillNumCfg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ArenaKillNumCfg_2eproto();
#endif
  return *default_instance_;
}

ArenaKillNumCfgSet* ArenaKillNumCfgSet::default_instance_ = NULL;

ArenaKillNumCfgSet* ArenaKillNumCfgSet::New() const {
  return new ArenaKillNumCfgSet;
}

void ArenaKillNumCfgSet::Clear() {
  arenakillnumcfg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool ArenaKillNumCfgSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.cfg.vo.ArenaKillNumCfg arenaKillNumCfg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_arenaKillNumCfg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arenakillnumcfg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_arenaKillNumCfg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArenaKillNumCfgSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.cfg.vo.ArenaKillNumCfg arenaKillNumCfg = 1;
  for (int i = 0; i < this->arenakillnumcfg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->arenakillnumcfg(i), output);
  }

}

int ArenaKillNumCfgSet::ByteSize() const {
  int total_size = 0;

  // repeated .com.cfg.vo.ArenaKillNumCfg arenaKillNumCfg = 1;
  total_size += 1 * this->arenakillnumcfg_size();
  for (int i = 0; i < this->arenakillnumcfg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arenakillnumcfg(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArenaKillNumCfgSet::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ArenaKillNumCfgSet*>(&from));
}

void ArenaKillNumCfgSet::MergeFrom(const ArenaKillNumCfgSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  arenakillnumcfg_.MergeFrom(from.arenakillnumcfg_);
}

void ArenaKillNumCfgSet::CopyFrom(const ArenaKillNumCfgSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaKillNumCfgSet::IsInitialized() const {

  for (int i = 0; i < arenakillnumcfg_size(); i++) {
    if (!this->arenakillnumcfg(i).IsInitialized()) return false;
  }
  return true;
}

void ArenaKillNumCfgSet::Swap(ArenaKillNumCfgSet* other) {
  if (other != this) {
    arenakillnumcfg_.Swap(&other->arenakillnumcfg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ArenaKillNumCfgSet::GetTypeName() const {
  return "com.cfg.vo.ArenaKillNumCfgSet";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)
