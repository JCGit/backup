// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldBossShowLibCfg.proto

#ifndef PROTOBUF_WorldBossShowLibCfg_2eproto__INCLUDED
#define PROTOBUF_WorldBossShowLibCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WorldBossShowLibCfg_2eproto();
void protobuf_AssignDesc_WorldBossShowLibCfg_2eproto();
void protobuf_ShutdownFile_WorldBossShowLibCfg_2eproto();

class WorldBossShowLibCfg;
class WorldBossShowLibCfgSet;

// ===================================================================

class WorldBossShowLibCfg : public ::google::protobuf::MessageLite {
 public:
  WorldBossShowLibCfg();
  virtual ~WorldBossShowLibCfg();

  WorldBossShowLibCfg(const WorldBossShowLibCfg& from);

  inline WorldBossShowLibCfg& operator=(const WorldBossShowLibCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const WorldBossShowLibCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WorldBossShowLibCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WorldBossShowLibCfg* other);

  // implements Message ----------------------------------------------

  WorldBossShowLibCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WorldBossShowLibCfg& from);
  void MergeFrom(const WorldBossShowLibCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 cfgID = 2;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WorldBossShowLibCfg)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_cfgid();
  inline void clear_has_cfgid();

  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 cfgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WorldBossShowLibCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WorldBossShowLibCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WorldBossShowLibCfg_2eproto();
  friend void protobuf_ShutdownFile_WorldBossShowLibCfg_2eproto();

  void InitAsDefaultInstance();
  static WorldBossShowLibCfg* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossShowLibCfgSet : public ::google::protobuf::MessageLite {
 public:
  WorldBossShowLibCfgSet();
  virtual ~WorldBossShowLibCfgSet();

  WorldBossShowLibCfgSet(const WorldBossShowLibCfgSet& from);

  inline WorldBossShowLibCfgSet& operator=(const WorldBossShowLibCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const WorldBossShowLibCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WorldBossShowLibCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WorldBossShowLibCfgSet* other);

  // implements Message ----------------------------------------------

  WorldBossShowLibCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WorldBossShowLibCfgSet& from);
  void MergeFrom(const WorldBossShowLibCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.WorldBossShowLibCfg worldBossShowLibCfg = 1;
  inline int worldbossshowlibcfg_size() const;
  inline void clear_worldbossshowlibcfg();
  static const int kWorldBossShowLibCfgFieldNumber = 1;
  inline const ::com::cfg::vo::WorldBossShowLibCfg& worldbossshowlibcfg(int index) const;
  inline ::com::cfg::vo::WorldBossShowLibCfg* mutable_worldbossshowlibcfg(int index);
  inline ::com::cfg::vo::WorldBossShowLibCfg* add_worldbossshowlibcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WorldBossShowLibCfg >&
      worldbossshowlibcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WorldBossShowLibCfg >*
      mutable_worldbossshowlibcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.WorldBossShowLibCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WorldBossShowLibCfg > worldbossshowlibcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_WorldBossShowLibCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_WorldBossShowLibCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_WorldBossShowLibCfg_2eproto();
  friend void protobuf_ShutdownFile_WorldBossShowLibCfg_2eproto();

  void InitAsDefaultInstance();
  static WorldBossShowLibCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldBossShowLibCfg

// required uint32 day = 1;
inline bool WorldBossShowLibCfg::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossShowLibCfg::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossShowLibCfg::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossShowLibCfg::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 WorldBossShowLibCfg::day() const {
  return day_;
}
inline void WorldBossShowLibCfg::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// required uint32 cfgID = 2;
inline bool WorldBossShowLibCfg::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossShowLibCfg::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossShowLibCfg::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossShowLibCfg::clear_cfgid() {
  cfgid_ = 0u;
  clear_has_cfgid();
}
inline ::google::protobuf::uint32 WorldBossShowLibCfg::cfgid() const {
  return cfgid_;
}
inline void WorldBossShowLibCfg::set_cfgid(::google::protobuf::uint32 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// -------------------------------------------------------------------

// WorldBossShowLibCfgSet

// repeated .com.cfg.vo.WorldBossShowLibCfg worldBossShowLibCfg = 1;
inline int WorldBossShowLibCfgSet::worldbossshowlibcfg_size() const {
  return worldbossshowlibcfg_.size();
}
inline void WorldBossShowLibCfgSet::clear_worldbossshowlibcfg() {
  worldbossshowlibcfg_.Clear();
}
inline const ::com::cfg::vo::WorldBossShowLibCfg& WorldBossShowLibCfgSet::worldbossshowlibcfg(int index) const {
  return worldbossshowlibcfg_.Get(index);
}
inline ::com::cfg::vo::WorldBossShowLibCfg* WorldBossShowLibCfgSet::mutable_worldbossshowlibcfg(int index) {
  return worldbossshowlibcfg_.Mutable(index);
}
inline ::com::cfg::vo::WorldBossShowLibCfg* WorldBossShowLibCfgSet::add_worldbossshowlibcfg() {
  return worldbossshowlibcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WorldBossShowLibCfg >&
WorldBossShowLibCfgSet::worldbossshowlibcfg() const {
  return worldbossshowlibcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::WorldBossShowLibCfg >*
WorldBossShowLibCfgSet::mutable_worldbossshowlibcfg() {
  return &worldbossshowlibcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorldBossShowLibCfg_2eproto__INCLUDED
