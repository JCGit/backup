// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BulletCfg.proto

#ifndef PROTOBUF_BulletCfg_2eproto__INCLUDED
#define PROTOBUF_BulletCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BulletCfg_2eproto();
void protobuf_AssignDesc_BulletCfg_2eproto();
void protobuf_ShutdownFile_BulletCfg_2eproto();

class BulletAdditionalEff;
class BulletCfg;
class BulletCfgSet;

// ===================================================================

class BulletAdditionalEff : public ::google::protobuf::MessageLite {
 public:
  BulletAdditionalEff();
  virtual ~BulletAdditionalEff();

  BulletAdditionalEff(const BulletAdditionalEff& from);

  inline BulletAdditionalEff& operator=(const BulletAdditionalEff& from) {
    CopyFrom(from);
    return *this;
  }

  static const BulletAdditionalEff& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BulletAdditionalEff* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BulletAdditionalEff* other);

  // implements Message ----------------------------------------------

  BulletAdditionalEff* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BulletAdditionalEff& from);
  void MergeFrom(const BulletAdditionalEff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Prob = 1;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 1;
  inline ::google::protobuf::uint32 prob() const;
  inline void set_prob(::google::protobuf::uint32 value);

  // required uint32 EffType = 2;
  inline bool has_efftype() const;
  inline void clear_efftype();
  static const int kEffTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 efftype() const;
  inline void set_efftype(::google::protobuf::uint32 value);

  // required uint32 EffVal = 3;
  inline bool has_effval() const;
  inline void clear_effval();
  static const int kEffValFieldNumber = 3;
  inline ::google::protobuf::uint32 effval() const;
  inline void set_effval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BulletAdditionalEff)
 private:
  inline void set_has_prob();
  inline void clear_has_prob();
  inline void set_has_efftype();
  inline void clear_has_efftype();
  inline void set_has_effval();
  inline void clear_has_effval();

  ::google::protobuf::uint32 prob_;
  ::google::protobuf::uint32 efftype_;
  ::google::protobuf::uint32 effval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BulletCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BulletCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_BulletCfg_2eproto();
  friend void protobuf_ShutdownFile_BulletCfg_2eproto();

  void InitAsDefaultInstance();
  static BulletAdditionalEff* default_instance_;
};
// -------------------------------------------------------------------

class BulletCfg : public ::google::protobuf::MessageLite {
 public:
  BulletCfg();
  virtual ~BulletCfg();

  BulletCfg(const BulletCfg& from);

  inline BulletCfg& operator=(const BulletCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const BulletCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BulletCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BulletCfg* other);

  // implements Message ----------------------------------------------

  BulletCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BulletCfg& from);
  void MergeFrom(const BulletCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BulletID = 1;
  inline bool has_bulletid() const;
  inline void clear_bulletid();
  static const int kBulletIDFieldNumber = 1;
  inline ::google::protobuf::uint32 bulletid() const;
  inline void set_bulletid(::google::protobuf::uint32 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string Desc = 3;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 3;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // required uint32 BulletType = 4;
  inline bool has_bullettype() const;
  inline void clear_bullettype();
  static const int kBulletTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 bullettype() const;
  inline void set_bullettype(::google::protobuf::uint32 value);

  // required string OridinaryAni = 5;
  inline bool has_oridinaryani() const;
  inline void clear_oridinaryani();
  static const int kOridinaryAniFieldNumber = 5;
  inline const ::std::string& oridinaryani() const;
  inline void set_oridinaryani(const ::std::string& value);
  inline void set_oridinaryani(const char* value);
  inline void set_oridinaryani(const char* value, size_t size);
  inline ::std::string* mutable_oridinaryani();
  inline ::std::string* release_oridinaryani();
  inline void set_allocated_oridinaryani(::std::string* oridinaryani);

  // required string SuperAni = 6;
  inline bool has_superani() const;
  inline void clear_superani();
  static const int kSuperAniFieldNumber = 6;
  inline const ::std::string& superani() const;
  inline void set_superani(const ::std::string& value);
  inline void set_superani(const char* value);
  inline void set_superani(const char* value, size_t size);
  inline ::std::string* mutable_superani();
  inline ::std::string* release_superani();
  inline void set_allocated_superani(::std::string* superani);

  // required string BeatAnis = 7;
  inline bool has_beatanis() const;
  inline void clear_beatanis();
  static const int kBeatAnisFieldNumber = 7;
  inline const ::std::string& beatanis() const;
  inline void set_beatanis(const ::std::string& value);
  inline void set_beatanis(const char* value);
  inline void set_beatanis(const char* value, size_t size);
  inline ::std::string* mutable_beatanis();
  inline ::std::string* release_beatanis();
  inline void set_allocated_beatanis(::std::string* beatanis);

  // required uint32 FlySpeed = 8;
  inline bool has_flyspeed() const;
  inline void clear_flyspeed();
  static const int kFlySpeedFieldNumber = 8;
  inline ::google::protobuf::uint32 flyspeed() const;
  inline void set_flyspeed(::google::protobuf::uint32 value);

  // required uint32 HitBackDist = 9;
  inline bool has_hitbackdist() const;
  inline void clear_hitbackdist();
  static const int kHitBackDistFieldNumber = 9;
  inline ::google::protobuf::uint32 hitbackdist() const;
  inline void set_hitbackdist(::google::protobuf::uint32 value);

  // required uint32 DamageZone = 10;
  inline bool has_damagezone() const;
  inline void clear_damagezone();
  static const int kDamageZoneFieldNumber = 10;
  inline ::google::protobuf::uint32 damagezone() const;
  inline void set_damagezone(::google::protobuf::uint32 value);

  // required string ShootAnimation = 11;
  inline bool has_shootanimation() const;
  inline void clear_shootanimation();
  static const int kShootAnimationFieldNumber = 11;
  inline const ::std::string& shootanimation() const;
  inline void set_shootanimation(const ::std::string& value);
  inline void set_shootanimation(const char* value);
  inline void set_shootanimation(const char* value, size_t size);
  inline ::std::string* mutable_shootanimation();
  inline ::std::string* release_shootanimation();
  inline void set_allocated_shootanimation(::std::string* shootanimation);

  // repeated .com.cfg.vo.BulletAdditionalEff AdditionalEffs = 12;
  inline int additionaleffs_size() const;
  inline void clear_additionaleffs();
  static const int kAdditionalEffsFieldNumber = 12;
  inline const ::com::cfg::vo::BulletAdditionalEff& additionaleffs(int index) const;
  inline ::com::cfg::vo::BulletAdditionalEff* mutable_additionaleffs(int index);
  inline ::com::cfg::vo::BulletAdditionalEff* add_additionaleffs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletAdditionalEff >&
      additionaleffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletAdditionalEff >*
      mutable_additionaleffs();

  // required uint32 BurstCnt = 13;
  inline bool has_burstcnt() const;
  inline void clear_burstcnt();
  static const int kBurstCntFieldNumber = 13;
  inline ::google::protobuf::uint32 burstcnt() const;
  inline void set_burstcnt(::google::protobuf::uint32 value);

  // required uint32 BurstAngle = 14;
  inline bool has_burstangle() const;
  inline void clear_burstangle();
  static const int kBurstAngleFieldNumber = 14;
  inline ::google::protobuf::uint32 burstangle() const;
  inline void set_burstangle(::google::protobuf::uint32 value);

  // required string Papapa = 15;
  inline bool has_papapa() const;
  inline void clear_papapa();
  static const int kPapapaFieldNumber = 15;
  inline const ::std::string& papapa() const;
  inline void set_papapa(const ::std::string& value);
  inline void set_papapa(const char* value);
  inline void set_papapa(const char* value, size_t size);
  inline ::std::string* mutable_papapa();
  inline ::std::string* release_papapa();
  inline void set_allocated_papapa(::std::string* papapa);

  // required uint32 EvtCnt = 16;
  inline bool has_evtcnt() const;
  inline void clear_evtcnt();
  static const int kEvtCntFieldNumber = 16;
  inline ::google::protobuf::uint32 evtcnt() const;
  inline void set_evtcnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BulletCfg)
 private:
  inline void set_has_bulletid();
  inline void clear_has_bulletid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_bullettype();
  inline void clear_has_bullettype();
  inline void set_has_oridinaryani();
  inline void clear_has_oridinaryani();
  inline void set_has_superani();
  inline void clear_has_superani();
  inline void set_has_beatanis();
  inline void clear_has_beatanis();
  inline void set_has_flyspeed();
  inline void clear_has_flyspeed();
  inline void set_has_hitbackdist();
  inline void clear_has_hitbackdist();
  inline void set_has_damagezone();
  inline void clear_has_damagezone();
  inline void set_has_shootanimation();
  inline void clear_has_shootanimation();
  inline void set_has_burstcnt();
  inline void clear_has_burstcnt();
  inline void set_has_burstangle();
  inline void clear_has_burstangle();
  inline void set_has_papapa();
  inline void clear_has_papapa();
  inline void set_has_evtcnt();
  inline void clear_has_evtcnt();

  ::std::string* name_;
  ::google::protobuf::uint32 bulletid_;
  ::google::protobuf::uint32 bullettype_;
  ::std::string* desc_;
  ::std::string* oridinaryani_;
  ::std::string* superani_;
  ::std::string* beatanis_;
  ::google::protobuf::uint32 flyspeed_;
  ::google::protobuf::uint32 hitbackdist_;
  ::std::string* shootanimation_;
  ::google::protobuf::uint32 damagezone_;
  ::google::protobuf::uint32 burstcnt_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletAdditionalEff > additionaleffs_;
  ::std::string* papapa_;
  ::google::protobuf::uint32 burstangle_;
  ::google::protobuf::uint32 evtcnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BulletCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BulletCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_BulletCfg_2eproto();
  friend void protobuf_ShutdownFile_BulletCfg_2eproto();

  void InitAsDefaultInstance();
  static BulletCfg* default_instance_;
};
// -------------------------------------------------------------------

class BulletCfgSet : public ::google::protobuf::MessageLite {
 public:
  BulletCfgSet();
  virtual ~BulletCfgSet();

  BulletCfgSet(const BulletCfgSet& from);

  inline BulletCfgSet& operator=(const BulletCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const BulletCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BulletCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BulletCfgSet* other);

  // implements Message ----------------------------------------------

  BulletCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BulletCfgSet& from);
  void MergeFrom(const BulletCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.BulletCfg bulletcfg = 1;
  inline int bulletcfg_size() const;
  inline void clear_bulletcfg();
  static const int kBulletcfgFieldNumber = 1;
  inline const ::com::cfg::vo::BulletCfg& bulletcfg(int index) const;
  inline ::com::cfg::vo::BulletCfg* mutable_bulletcfg(int index);
  inline ::com::cfg::vo::BulletCfg* add_bulletcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletCfg >&
      bulletcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletCfg >*
      mutable_bulletcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.BulletCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletCfg > bulletcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BulletCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BulletCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_BulletCfg_2eproto();
  friend void protobuf_ShutdownFile_BulletCfg_2eproto();

  void InitAsDefaultInstance();
  static BulletCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// BulletAdditionalEff

// required uint32 Prob = 1;
inline bool BulletAdditionalEff::has_prob() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletAdditionalEff::set_has_prob() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletAdditionalEff::clear_has_prob() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletAdditionalEff::clear_prob() {
  prob_ = 0u;
  clear_has_prob();
}
inline ::google::protobuf::uint32 BulletAdditionalEff::prob() const {
  return prob_;
}
inline void BulletAdditionalEff::set_prob(::google::protobuf::uint32 value) {
  set_has_prob();
  prob_ = value;
}

// required uint32 EffType = 2;
inline bool BulletAdditionalEff::has_efftype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletAdditionalEff::set_has_efftype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletAdditionalEff::clear_has_efftype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletAdditionalEff::clear_efftype() {
  efftype_ = 0u;
  clear_has_efftype();
}
inline ::google::protobuf::uint32 BulletAdditionalEff::efftype() const {
  return efftype_;
}
inline void BulletAdditionalEff::set_efftype(::google::protobuf::uint32 value) {
  set_has_efftype();
  efftype_ = value;
}

// required uint32 EffVal = 3;
inline bool BulletAdditionalEff::has_effval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulletAdditionalEff::set_has_effval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulletAdditionalEff::clear_has_effval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulletAdditionalEff::clear_effval() {
  effval_ = 0u;
  clear_has_effval();
}
inline ::google::protobuf::uint32 BulletAdditionalEff::effval() const {
  return effval_;
}
inline void BulletAdditionalEff::set_effval(::google::protobuf::uint32 value) {
  set_has_effval();
  effval_ = value;
}

// -------------------------------------------------------------------

// BulletCfg

// required uint32 BulletID = 1;
inline bool BulletCfg::has_bulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletCfg::set_has_bulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletCfg::clear_has_bulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletCfg::clear_bulletid() {
  bulletid_ = 0u;
  clear_has_bulletid();
}
inline ::google::protobuf::uint32 BulletCfg::bulletid() const {
  return bulletid_;
}
inline void BulletCfg::set_bulletid(::google::protobuf::uint32 value) {
  set_has_bulletid();
  bulletid_ = value;
}

// required string Name = 2;
inline bool BulletCfg::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletCfg::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletCfg::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletCfg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BulletCfg::name() const {
  return *name_;
}
inline void BulletCfg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BulletCfg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BulletCfg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BulletCfg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string Desc = 3;
inline bool BulletCfg::has_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulletCfg::set_has_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulletCfg::clear_has_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulletCfg::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& BulletCfg::desc() const {
  return *desc_;
}
inline void BulletCfg::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void BulletCfg::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void BulletCfg::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* BulletCfg::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 BulletType = 4;
inline bool BulletCfg::has_bullettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BulletCfg::set_has_bullettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BulletCfg::clear_has_bullettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BulletCfg::clear_bullettype() {
  bullettype_ = 0u;
  clear_has_bullettype();
}
inline ::google::protobuf::uint32 BulletCfg::bullettype() const {
  return bullettype_;
}
inline void BulletCfg::set_bullettype(::google::protobuf::uint32 value) {
  set_has_bullettype();
  bullettype_ = value;
}

// required string OridinaryAni = 5;
inline bool BulletCfg::has_oridinaryani() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BulletCfg::set_has_oridinaryani() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BulletCfg::clear_has_oridinaryani() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BulletCfg::clear_oridinaryani() {
  if (oridinaryani_ != &::google::protobuf::internal::kEmptyString) {
    oridinaryani_->clear();
  }
  clear_has_oridinaryani();
}
inline const ::std::string& BulletCfg::oridinaryani() const {
  return *oridinaryani_;
}
inline void BulletCfg::set_oridinaryani(const ::std::string& value) {
  set_has_oridinaryani();
  if (oridinaryani_ == &::google::protobuf::internal::kEmptyString) {
    oridinaryani_ = new ::std::string;
  }
  oridinaryani_->assign(value);
}
inline void BulletCfg::set_oridinaryani(const char* value) {
  set_has_oridinaryani();
  if (oridinaryani_ == &::google::protobuf::internal::kEmptyString) {
    oridinaryani_ = new ::std::string;
  }
  oridinaryani_->assign(value);
}
inline void BulletCfg::set_oridinaryani(const char* value, size_t size) {
  set_has_oridinaryani();
  if (oridinaryani_ == &::google::protobuf::internal::kEmptyString) {
    oridinaryani_ = new ::std::string;
  }
  oridinaryani_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_oridinaryani() {
  set_has_oridinaryani();
  if (oridinaryani_ == &::google::protobuf::internal::kEmptyString) {
    oridinaryani_ = new ::std::string;
  }
  return oridinaryani_;
}
inline ::std::string* BulletCfg::release_oridinaryani() {
  clear_has_oridinaryani();
  if (oridinaryani_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oridinaryani_;
    oridinaryani_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_oridinaryani(::std::string* oridinaryani) {
  if (oridinaryani_ != &::google::protobuf::internal::kEmptyString) {
    delete oridinaryani_;
  }
  if (oridinaryani) {
    set_has_oridinaryani();
    oridinaryani_ = oridinaryani;
  } else {
    clear_has_oridinaryani();
    oridinaryani_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string SuperAni = 6;
inline bool BulletCfg::has_superani() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BulletCfg::set_has_superani() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BulletCfg::clear_has_superani() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BulletCfg::clear_superani() {
  if (superani_ != &::google::protobuf::internal::kEmptyString) {
    superani_->clear();
  }
  clear_has_superani();
}
inline const ::std::string& BulletCfg::superani() const {
  return *superani_;
}
inline void BulletCfg::set_superani(const ::std::string& value) {
  set_has_superani();
  if (superani_ == &::google::protobuf::internal::kEmptyString) {
    superani_ = new ::std::string;
  }
  superani_->assign(value);
}
inline void BulletCfg::set_superani(const char* value) {
  set_has_superani();
  if (superani_ == &::google::protobuf::internal::kEmptyString) {
    superani_ = new ::std::string;
  }
  superani_->assign(value);
}
inline void BulletCfg::set_superani(const char* value, size_t size) {
  set_has_superani();
  if (superani_ == &::google::protobuf::internal::kEmptyString) {
    superani_ = new ::std::string;
  }
  superani_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_superani() {
  set_has_superani();
  if (superani_ == &::google::protobuf::internal::kEmptyString) {
    superani_ = new ::std::string;
  }
  return superani_;
}
inline ::std::string* BulletCfg::release_superani() {
  clear_has_superani();
  if (superani_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = superani_;
    superani_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_superani(::std::string* superani) {
  if (superani_ != &::google::protobuf::internal::kEmptyString) {
    delete superani_;
  }
  if (superani) {
    set_has_superani();
    superani_ = superani;
  } else {
    clear_has_superani();
    superani_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string BeatAnis = 7;
inline bool BulletCfg::has_beatanis() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BulletCfg::set_has_beatanis() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BulletCfg::clear_has_beatanis() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BulletCfg::clear_beatanis() {
  if (beatanis_ != &::google::protobuf::internal::kEmptyString) {
    beatanis_->clear();
  }
  clear_has_beatanis();
}
inline const ::std::string& BulletCfg::beatanis() const {
  return *beatanis_;
}
inline void BulletCfg::set_beatanis(const ::std::string& value) {
  set_has_beatanis();
  if (beatanis_ == &::google::protobuf::internal::kEmptyString) {
    beatanis_ = new ::std::string;
  }
  beatanis_->assign(value);
}
inline void BulletCfg::set_beatanis(const char* value) {
  set_has_beatanis();
  if (beatanis_ == &::google::protobuf::internal::kEmptyString) {
    beatanis_ = new ::std::string;
  }
  beatanis_->assign(value);
}
inline void BulletCfg::set_beatanis(const char* value, size_t size) {
  set_has_beatanis();
  if (beatanis_ == &::google::protobuf::internal::kEmptyString) {
    beatanis_ = new ::std::string;
  }
  beatanis_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_beatanis() {
  set_has_beatanis();
  if (beatanis_ == &::google::protobuf::internal::kEmptyString) {
    beatanis_ = new ::std::string;
  }
  return beatanis_;
}
inline ::std::string* BulletCfg::release_beatanis() {
  clear_has_beatanis();
  if (beatanis_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = beatanis_;
    beatanis_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_beatanis(::std::string* beatanis) {
  if (beatanis_ != &::google::protobuf::internal::kEmptyString) {
    delete beatanis_;
  }
  if (beatanis) {
    set_has_beatanis();
    beatanis_ = beatanis;
  } else {
    clear_has_beatanis();
    beatanis_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 FlySpeed = 8;
inline bool BulletCfg::has_flyspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BulletCfg::set_has_flyspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BulletCfg::clear_has_flyspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BulletCfg::clear_flyspeed() {
  flyspeed_ = 0u;
  clear_has_flyspeed();
}
inline ::google::protobuf::uint32 BulletCfg::flyspeed() const {
  return flyspeed_;
}
inline void BulletCfg::set_flyspeed(::google::protobuf::uint32 value) {
  set_has_flyspeed();
  flyspeed_ = value;
}

// required uint32 HitBackDist = 9;
inline bool BulletCfg::has_hitbackdist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BulletCfg::set_has_hitbackdist() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BulletCfg::clear_has_hitbackdist() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BulletCfg::clear_hitbackdist() {
  hitbackdist_ = 0u;
  clear_has_hitbackdist();
}
inline ::google::protobuf::uint32 BulletCfg::hitbackdist() const {
  return hitbackdist_;
}
inline void BulletCfg::set_hitbackdist(::google::protobuf::uint32 value) {
  set_has_hitbackdist();
  hitbackdist_ = value;
}

// required uint32 DamageZone = 10;
inline bool BulletCfg::has_damagezone() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BulletCfg::set_has_damagezone() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BulletCfg::clear_has_damagezone() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BulletCfg::clear_damagezone() {
  damagezone_ = 0u;
  clear_has_damagezone();
}
inline ::google::protobuf::uint32 BulletCfg::damagezone() const {
  return damagezone_;
}
inline void BulletCfg::set_damagezone(::google::protobuf::uint32 value) {
  set_has_damagezone();
  damagezone_ = value;
}

// required string ShootAnimation = 11;
inline bool BulletCfg::has_shootanimation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BulletCfg::set_has_shootanimation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BulletCfg::clear_has_shootanimation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BulletCfg::clear_shootanimation() {
  if (shootanimation_ != &::google::protobuf::internal::kEmptyString) {
    shootanimation_->clear();
  }
  clear_has_shootanimation();
}
inline const ::std::string& BulletCfg::shootanimation() const {
  return *shootanimation_;
}
inline void BulletCfg::set_shootanimation(const ::std::string& value) {
  set_has_shootanimation();
  if (shootanimation_ == &::google::protobuf::internal::kEmptyString) {
    shootanimation_ = new ::std::string;
  }
  shootanimation_->assign(value);
}
inline void BulletCfg::set_shootanimation(const char* value) {
  set_has_shootanimation();
  if (shootanimation_ == &::google::protobuf::internal::kEmptyString) {
    shootanimation_ = new ::std::string;
  }
  shootanimation_->assign(value);
}
inline void BulletCfg::set_shootanimation(const char* value, size_t size) {
  set_has_shootanimation();
  if (shootanimation_ == &::google::protobuf::internal::kEmptyString) {
    shootanimation_ = new ::std::string;
  }
  shootanimation_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_shootanimation() {
  set_has_shootanimation();
  if (shootanimation_ == &::google::protobuf::internal::kEmptyString) {
    shootanimation_ = new ::std::string;
  }
  return shootanimation_;
}
inline ::std::string* BulletCfg::release_shootanimation() {
  clear_has_shootanimation();
  if (shootanimation_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = shootanimation_;
    shootanimation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_shootanimation(::std::string* shootanimation) {
  if (shootanimation_ != &::google::protobuf::internal::kEmptyString) {
    delete shootanimation_;
  }
  if (shootanimation) {
    set_has_shootanimation();
    shootanimation_ = shootanimation;
  } else {
    clear_has_shootanimation();
    shootanimation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .com.cfg.vo.BulletAdditionalEff AdditionalEffs = 12;
inline int BulletCfg::additionaleffs_size() const {
  return additionaleffs_.size();
}
inline void BulletCfg::clear_additionaleffs() {
  additionaleffs_.Clear();
}
inline const ::com::cfg::vo::BulletAdditionalEff& BulletCfg::additionaleffs(int index) const {
  return additionaleffs_.Get(index);
}
inline ::com::cfg::vo::BulletAdditionalEff* BulletCfg::mutable_additionaleffs(int index) {
  return additionaleffs_.Mutable(index);
}
inline ::com::cfg::vo::BulletAdditionalEff* BulletCfg::add_additionaleffs() {
  return additionaleffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletAdditionalEff >&
BulletCfg::additionaleffs() const {
  return additionaleffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletAdditionalEff >*
BulletCfg::mutable_additionaleffs() {
  return &additionaleffs_;
}

// required uint32 BurstCnt = 13;
inline bool BulletCfg::has_burstcnt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BulletCfg::set_has_burstcnt() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BulletCfg::clear_has_burstcnt() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BulletCfg::clear_burstcnt() {
  burstcnt_ = 0u;
  clear_has_burstcnt();
}
inline ::google::protobuf::uint32 BulletCfg::burstcnt() const {
  return burstcnt_;
}
inline void BulletCfg::set_burstcnt(::google::protobuf::uint32 value) {
  set_has_burstcnt();
  burstcnt_ = value;
}

// required uint32 BurstAngle = 14;
inline bool BulletCfg::has_burstangle() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BulletCfg::set_has_burstangle() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BulletCfg::clear_has_burstangle() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BulletCfg::clear_burstangle() {
  burstangle_ = 0u;
  clear_has_burstangle();
}
inline ::google::protobuf::uint32 BulletCfg::burstangle() const {
  return burstangle_;
}
inline void BulletCfg::set_burstangle(::google::protobuf::uint32 value) {
  set_has_burstangle();
  burstangle_ = value;
}

// required string Papapa = 15;
inline bool BulletCfg::has_papapa() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BulletCfg::set_has_papapa() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BulletCfg::clear_has_papapa() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BulletCfg::clear_papapa() {
  if (papapa_ != &::google::protobuf::internal::kEmptyString) {
    papapa_->clear();
  }
  clear_has_papapa();
}
inline const ::std::string& BulletCfg::papapa() const {
  return *papapa_;
}
inline void BulletCfg::set_papapa(const ::std::string& value) {
  set_has_papapa();
  if (papapa_ == &::google::protobuf::internal::kEmptyString) {
    papapa_ = new ::std::string;
  }
  papapa_->assign(value);
}
inline void BulletCfg::set_papapa(const char* value) {
  set_has_papapa();
  if (papapa_ == &::google::protobuf::internal::kEmptyString) {
    papapa_ = new ::std::string;
  }
  papapa_->assign(value);
}
inline void BulletCfg::set_papapa(const char* value, size_t size) {
  set_has_papapa();
  if (papapa_ == &::google::protobuf::internal::kEmptyString) {
    papapa_ = new ::std::string;
  }
  papapa_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BulletCfg::mutable_papapa() {
  set_has_papapa();
  if (papapa_ == &::google::protobuf::internal::kEmptyString) {
    papapa_ = new ::std::string;
  }
  return papapa_;
}
inline ::std::string* BulletCfg::release_papapa() {
  clear_has_papapa();
  if (papapa_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = papapa_;
    papapa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BulletCfg::set_allocated_papapa(::std::string* papapa) {
  if (papapa_ != &::google::protobuf::internal::kEmptyString) {
    delete papapa_;
  }
  if (papapa) {
    set_has_papapa();
    papapa_ = papapa;
  } else {
    clear_has_papapa();
    papapa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 EvtCnt = 16;
inline bool BulletCfg::has_evtcnt() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BulletCfg::set_has_evtcnt() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BulletCfg::clear_has_evtcnt() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BulletCfg::clear_evtcnt() {
  evtcnt_ = 0u;
  clear_has_evtcnt();
}
inline ::google::protobuf::uint32 BulletCfg::evtcnt() const {
  return evtcnt_;
}
inline void BulletCfg::set_evtcnt(::google::protobuf::uint32 value) {
  set_has_evtcnt();
  evtcnt_ = value;
}

// -------------------------------------------------------------------

// BulletCfgSet

// repeated .com.cfg.vo.BulletCfg bulletcfg = 1;
inline int BulletCfgSet::bulletcfg_size() const {
  return bulletcfg_.size();
}
inline void BulletCfgSet::clear_bulletcfg() {
  bulletcfg_.Clear();
}
inline const ::com::cfg::vo::BulletCfg& BulletCfgSet::bulletcfg(int index) const {
  return bulletcfg_.Get(index);
}
inline ::com::cfg::vo::BulletCfg* BulletCfgSet::mutable_bulletcfg(int index) {
  return bulletcfg_.Mutable(index);
}
inline ::com::cfg::vo::BulletCfg* BulletCfgSet::add_bulletcfg() {
  return bulletcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletCfg >&
BulletCfgSet::bulletcfg() const {
  return bulletcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::BulletCfg >*
BulletCfgSet::mutable_bulletcfg() {
  return &bulletcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BulletCfg_2eproto__INCLUDED
