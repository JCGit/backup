// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArenaLvCfg.proto

#ifndef PROTOBUF_ArenaLvCfg_2eproto__INCLUDED
#define PROTOBUF_ArenaLvCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ArenaLvCfg_2eproto();
void protobuf_AssignDesc_ArenaLvCfg_2eproto();
void protobuf_ShutdownFile_ArenaLvCfg_2eproto();

class ArenaLvCfg;
class ArenaLvCfgSet;

// ===================================================================

class ArenaLvCfg : public ::google::protobuf::MessageLite {
 public:
  ArenaLvCfg();
  virtual ~ArenaLvCfg();

  ArenaLvCfg(const ArenaLvCfg& from);

  inline ArenaLvCfg& operator=(const ArenaLvCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaLvCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaLvCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaLvCfg* other);

  // implements Message ----------------------------------------------

  ArenaLvCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaLvCfg& from);
  void MergeFrom(const ArenaLvCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaLvCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 score_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaLvCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaLvCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaLvCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaLvCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaLvCfg* default_instance_;
};
// -------------------------------------------------------------------

class ArenaLvCfgSet : public ::google::protobuf::MessageLite {
 public:
  ArenaLvCfgSet();
  virtual ~ArenaLvCfgSet();

  ArenaLvCfgSet(const ArenaLvCfgSet& from);

  inline ArenaLvCfgSet& operator=(const ArenaLvCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ArenaLvCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ArenaLvCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ArenaLvCfgSet* other);

  // implements Message ----------------------------------------------

  ArenaLvCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ArenaLvCfgSet& from);
  void MergeFrom(const ArenaLvCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.ArenaLvCfg arenaLvCfg = 1;
  inline int arenalvcfg_size() const;
  inline void clear_arenalvcfg();
  static const int kArenaLvCfgFieldNumber = 1;
  inline const ::com::cfg::vo::ArenaLvCfg& arenalvcfg(int index) const;
  inline ::com::cfg::vo::ArenaLvCfg* mutable_arenalvcfg(int index);
  inline ::com::cfg::vo::ArenaLvCfg* add_arenalvcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaLvCfg >&
      arenalvcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaLvCfg >*
      mutable_arenalvcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.ArenaLvCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaLvCfg > arenalvcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ArenaLvCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ArenaLvCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ArenaLvCfg_2eproto();
  friend void protobuf_ShutdownFile_ArenaLvCfg_2eproto();

  void InitAsDefaultInstance();
  static ArenaLvCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ArenaLvCfg

// required uint32 Level = 1;
inline bool ArenaLvCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaLvCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaLvCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaLvCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ArenaLvCfg::level() const {
  return level_;
}
inline void ArenaLvCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 Score = 2;
inline bool ArenaLvCfg::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaLvCfg::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaLvCfg::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaLvCfg::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ArenaLvCfg::score() const {
  return score_;
}
inline void ArenaLvCfg::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required string Name = 3;
inline bool ArenaLvCfg::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaLvCfg::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaLvCfg::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaLvCfg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ArenaLvCfg::name() const {
  return *name_;
}
inline void ArenaLvCfg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ArenaLvCfg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ArenaLvCfg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaLvCfg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ArenaLvCfg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaLvCfg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ArenaLvCfgSet

// repeated .com.cfg.vo.ArenaLvCfg arenaLvCfg = 1;
inline int ArenaLvCfgSet::arenalvcfg_size() const {
  return arenalvcfg_.size();
}
inline void ArenaLvCfgSet::clear_arenalvcfg() {
  arenalvcfg_.Clear();
}
inline const ::com::cfg::vo::ArenaLvCfg& ArenaLvCfgSet::arenalvcfg(int index) const {
  return arenalvcfg_.Get(index);
}
inline ::com::cfg::vo::ArenaLvCfg* ArenaLvCfgSet::mutable_arenalvcfg(int index) {
  return arenalvcfg_.Mutable(index);
}
inline ::com::cfg::vo::ArenaLvCfg* ArenaLvCfgSet::add_arenalvcfg() {
  return arenalvcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaLvCfg >&
ArenaLvCfgSet::arenalvcfg() const {
  return arenalvcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::ArenaLvCfg >*
ArenaLvCfgSet::mutable_arenalvcfg() {
  return &arenalvcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ArenaLvCfg_2eproto__INCLUDED
