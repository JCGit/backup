// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MonsterLevCfg.proto

#ifndef PROTOBUF_MonsterLevCfg_2eproto__INCLUDED
#define PROTOBUF_MonsterLevCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MonsterCfg.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace cfg {
namespace vo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MonsterLevCfg_2eproto();
void protobuf_AssignDesc_MonsterLevCfg_2eproto();
void protobuf_ShutdownFile_MonsterLevCfg_2eproto();

class MonsterAtt;
class MonsterLevCfg;
class MonsterLevCfgSet;

// ===================================================================

class MonsterAtt : public ::google::protobuf::MessageLite {
 public:
  MonsterAtt();
  virtual ~MonsterAtt();

  MonsterAtt(const MonsterAtt& from);

  inline MonsterAtt& operator=(const MonsterAtt& from) {
    CopyFrom(from);
    return *this;
  }

  static const MonsterAtt& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonsterAtt* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonsterAtt* other);

  // implements Message ----------------------------------------------

  MonsterAtt* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonsterAtt& from);
  void MergeFrom(const MonsterAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // required uint32 atk = 2;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 2;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);

  // required uint32 def = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 3;
  inline ::google::protobuf::uint32 def() const;
  inline void set_def(::google::protobuf::uint32 value);

  // required uint32 atkAtt = 4;
  inline bool has_atkatt() const;
  inline void clear_atkatt();
  static const int kAtkAttFieldNumber = 4;
  inline ::google::protobuf::uint32 atkatt() const;
  inline void set_atkatt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MonsterAtt)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_atkatt();
  inline void clear_has_atkatt();

  ::google::protobuf::uint64 hp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 def_;
  ::google::protobuf::uint32 atkatt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonsterLevCfg_2eproto();
  friend void protobuf_ShutdownFile_MonsterLevCfg_2eproto();

  void InitAsDefaultInstance();
  static MonsterAtt* default_instance_;
};
// -------------------------------------------------------------------

class MonsterLevCfg : public ::google::protobuf::MessageLite {
 public:
  MonsterLevCfg();
  virtual ~MonsterLevCfg();

  MonsterLevCfg(const MonsterLevCfg& from);

  inline MonsterLevCfg& operator=(const MonsterLevCfg& from) {
    CopyFrom(from);
    return *this;
  }

  static const MonsterLevCfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonsterLevCfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonsterLevCfg* other);

  // implements Message ----------------------------------------------

  MonsterLevCfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonsterLevCfg& from);
  void MergeFrom(const MonsterLevCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .com.cfg.vo.MonsterAtt monsterAtt = 2;
  inline int monsteratt_size() const;
  inline void clear_monsteratt();
  static const int kMonsterAttFieldNumber = 2;
  inline const ::com::cfg::vo::MonsterAtt& monsteratt(int index) const;
  inline ::com::cfg::vo::MonsterAtt* mutable_monsteratt(int index);
  inline ::com::cfg::vo::MonsterAtt* add_monsteratt();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterAtt >&
      monsteratt() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterAtt >*
      mutable_monsteratt();

  // repeated .com.cfg.vo.DefAttElement defAtts = 3;
  inline int defatts_size() const;
  inline void clear_defatts();
  static const int kDefAttsFieldNumber = 3;
  inline const ::com::cfg::vo::DefAttElement& defatts(int index) const;
  inline ::com::cfg::vo::DefAttElement* mutable_defatts(int index);
  inline ::com::cfg::vo::DefAttElement* add_defatts();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DefAttElement >&
      defatts() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DefAttElement >*
      mutable_defatts();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MonsterLevCfg)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterAtt > monsteratt_;
  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DefAttElement > defatts_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonsterLevCfg_2eproto();
  friend void protobuf_ShutdownFile_MonsterLevCfg_2eproto();

  void InitAsDefaultInstance();
  static MonsterLevCfg* default_instance_;
};
// -------------------------------------------------------------------

class MonsterLevCfgSet : public ::google::protobuf::MessageLite {
 public:
  MonsterLevCfgSet();
  virtual ~MonsterLevCfgSet();

  MonsterLevCfgSet(const MonsterLevCfgSet& from);

  inline MonsterLevCfgSet& operator=(const MonsterLevCfgSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const MonsterLevCfgSet& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonsterLevCfgSet* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonsterLevCfgSet* other);

  // implements Message ----------------------------------------------

  MonsterLevCfgSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonsterLevCfgSet& from);
  void MergeFrom(const MonsterLevCfgSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cfg.vo.MonsterLevCfg monsterLevCfg = 1;
  inline int monsterlevcfg_size() const;
  inline void clear_monsterlevcfg();
  static const int kMonsterLevCfgFieldNumber = 1;
  inline const ::com::cfg::vo::MonsterLevCfg& monsterlevcfg(int index) const;
  inline ::com::cfg::vo::MonsterLevCfg* mutable_monsterlevcfg(int index);
  inline ::com::cfg::vo::MonsterLevCfg* add_monsterlevcfg();
  inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterLevCfg >&
      monsterlevcfg() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterLevCfg >*
      mutable_monsterlevcfg();

  // @@protoc_insertion_point(class_scope:com.cfg.vo.MonsterLevCfgSet)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterLevCfg > monsterlevcfg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonsterLevCfg_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonsterLevCfg_2eproto();
  friend void protobuf_ShutdownFile_MonsterLevCfg_2eproto();

  void InitAsDefaultInstance();
  static MonsterLevCfgSet* default_instance_;
};
// ===================================================================


// ===================================================================

// MonsterAtt

// required uint64 hp = 1;
inline bool MonsterAtt::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonsterAtt::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonsterAtt::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonsterAtt::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::uint64 MonsterAtt::hp() const {
  return hp_;
}
inline void MonsterAtt::set_hp(::google::protobuf::uint64 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 atk = 2;
inline bool MonsterAtt::has_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonsterAtt::set_has_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonsterAtt::clear_has_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonsterAtt::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 MonsterAtt::atk() const {
  return atk_;
}
inline void MonsterAtt::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
}

// required uint32 def = 3;
inline bool MonsterAtt::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonsterAtt::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonsterAtt::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonsterAtt::clear_def() {
  def_ = 0u;
  clear_has_def();
}
inline ::google::protobuf::uint32 MonsterAtt::def() const {
  return def_;
}
inline void MonsterAtt::set_def(::google::protobuf::uint32 value) {
  set_has_def();
  def_ = value;
}

// required uint32 atkAtt = 4;
inline bool MonsterAtt::has_atkatt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonsterAtt::set_has_atkatt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonsterAtt::clear_has_atkatt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonsterAtt::clear_atkatt() {
  atkatt_ = 0u;
  clear_has_atkatt();
}
inline ::google::protobuf::uint32 MonsterAtt::atkatt() const {
  return atkatt_;
}
inline void MonsterAtt::set_atkatt(::google::protobuf::uint32 value) {
  set_has_atkatt();
  atkatt_ = value;
}

// -------------------------------------------------------------------

// MonsterLevCfg

// required uint32 level = 1;
inline bool MonsterLevCfg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonsterLevCfg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonsterLevCfg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonsterLevCfg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MonsterLevCfg::level() const {
  return level_;
}
inline void MonsterLevCfg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated .com.cfg.vo.MonsterAtt monsterAtt = 2;
inline int MonsterLevCfg::monsteratt_size() const {
  return monsteratt_.size();
}
inline void MonsterLevCfg::clear_monsteratt() {
  monsteratt_.Clear();
}
inline const ::com::cfg::vo::MonsterAtt& MonsterLevCfg::monsteratt(int index) const {
  return monsteratt_.Get(index);
}
inline ::com::cfg::vo::MonsterAtt* MonsterLevCfg::mutable_monsteratt(int index) {
  return monsteratt_.Mutable(index);
}
inline ::com::cfg::vo::MonsterAtt* MonsterLevCfg::add_monsteratt() {
  return monsteratt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterAtt >&
MonsterLevCfg::monsteratt() const {
  return monsteratt_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterAtt >*
MonsterLevCfg::mutable_monsteratt() {
  return &monsteratt_;
}

// repeated .com.cfg.vo.DefAttElement defAtts = 3;
inline int MonsterLevCfg::defatts_size() const {
  return defatts_.size();
}
inline void MonsterLevCfg::clear_defatts() {
  defatts_.Clear();
}
inline const ::com::cfg::vo::DefAttElement& MonsterLevCfg::defatts(int index) const {
  return defatts_.Get(index);
}
inline ::com::cfg::vo::DefAttElement* MonsterLevCfg::mutable_defatts(int index) {
  return defatts_.Mutable(index);
}
inline ::com::cfg::vo::DefAttElement* MonsterLevCfg::add_defatts() {
  return defatts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DefAttElement >&
MonsterLevCfg::defatts() const {
  return defatts_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::DefAttElement >*
MonsterLevCfg::mutable_defatts() {
  return &defatts_;
}

// -------------------------------------------------------------------

// MonsterLevCfgSet

// repeated .com.cfg.vo.MonsterLevCfg monsterLevCfg = 1;
inline int MonsterLevCfgSet::monsterlevcfg_size() const {
  return monsterlevcfg_.size();
}
inline void MonsterLevCfgSet::clear_monsterlevcfg() {
  monsterlevcfg_.Clear();
}
inline const ::com::cfg::vo::MonsterLevCfg& MonsterLevCfgSet::monsterlevcfg(int index) const {
  return monsterlevcfg_.Get(index);
}
inline ::com::cfg::vo::MonsterLevCfg* MonsterLevCfgSet::mutable_monsterlevcfg(int index) {
  return monsterlevcfg_.Mutable(index);
}
inline ::com::cfg::vo::MonsterLevCfg* MonsterLevCfgSet::add_monsterlevcfg() {
  return monsterlevcfg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterLevCfg >&
MonsterLevCfgSet::monsterlevcfg() const {
  return monsterlevcfg_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::cfg::vo::MonsterLevCfg >*
MonsterLevCfgSet::mutable_monsterlevcfg() {
  return &monsterlevcfg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vo
}  // namespace cfg
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MonsterLevCfg_2eproto__INCLUDED
